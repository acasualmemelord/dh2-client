{"version":3,"file":"battle-dex.js","names":["window","global","exports","nodewebkit","process","versions","toID","text","_text","_text2","id","userid","toLowerCase","replace","toUserid","PSUtils","_class","_proto","prototype","splitFirst","str","delimiter","limit","arguments","length","undefined","splitStr","delimiterIndex","indexOf","push","slice","compare","a","b","localeCompare","Array","isArray","i","comparison","reverse","Error","sortBy","array","callback","sort","toRoomid","roomid","toName","name","trim","substr","Dex","_class3","_this","gen","modid","cache","statNames","statNamesExceptHP","pokeballs","modResourcePrefix","resourcePrefix","_window$document","prefix","document","location","protocol","fxPrefix","_window$document2","loadedSpriteData","xy","bw","moddedDexes","moves","get","nameOrMove","BattleAliases","BattleMovedex","data","exists","_ref","exec","hpWithType","hpPower","Object","assign","basePower","Number","move","Move","items","nameOrItem","BattleItems","item","Item","abilities","nameOrAbility","BattleAbilities","ability","Ability","species","nameOrSpecies","modded","debug","formid","BattlePokedexAltForms","BattlePokedex","BattleBaseSpeciesChart","_i2","_BattleBaseSpeciesCha2","baseSpeciesId","startsWith","tier","baseSpecies","Species","cosmeticFormes","_i4","_species$cosmeticForm2","forme","baseForme","otherFormes","types","allCache","type","toUpperCase","BattleTypeChart","damageTaken","effectType","all","isName","hasOwnProperty","_proto2","mod","BattleTeambuilderTable","ModdedDex","forGen","resolveAvatar","avatar","_window$Config","BattleAvatarNumbers","charAt","includes","Config","server","registered","port","host","encodeURIComponent","sanitizeName","prefs","prop","_window$Storage","Storage","getShortName","shortName","getEffect","PureEffect","getGen3Category","getKEPCategory","getCSICategory","hasAbility","getSpriteMod","folder","overrideStandard","ModSprites","modName","loadSpriteData","path","$","attr","qs","split","match","el","createElement","src","getElementsByTagName","appendChild","getSpriteData","pokemon","isFront","options","mechanicsGen","ModConfig","spriteGen","isDynamax","dynamax","Pokemon","volatiles","transform","shiny","gender","isGigantamax","getSpeciesForme","modSpecies","spriteDir","fakeSprite","spriteid","endsWith","spriteData","w","h","y","url","pixelated","isFrontSprite","cryurl","dir","facing","graphicsGen","Math","max","min","baseDir","animationData","miscData","speciesid","isTotem","BattlePokemonSprites","BattlePokemonSpritesBW","num","baseSpeciesid","formeid","isMega","afd","noScale","fakeAnim","allowAnim","console","log","getPokemonIconNum","isFemale","facingLeft","_window$BattlePokemon","_window$BattlePokedex","_window$BattlePokemon2","BattlePokemonIconIndexes","BattlePokemonIconIndexesLeft","getPokemonIcon","_pokemon","_pokemon2","_pokemon3","_pokemon4","_pokemon5","speciesForme","formechange","top","floor","left","fainted","getTeambuilderSpriteData","x","xydexExists","isNonstandard","getTeambuilderSprite","getItemIcon","_item","spritenum","getTypeIcon","sanitizedType","getCategoryIcon","category","categoryID","sanitizedCategory","getPokeballs","_i6","_ref3","values","isPokeball","_this2","Moves","Items","Abilities","Types","table","overrideMoveInfo","key","fullItemName","overrideItemDesc","shortDesc","overrideAbilityData","overrideAbilityDesc","fullAbilityName","_table$doubles","hasData","overrideDexInfo","_i8","_table$BattleBaseSpec2","overrideTier","doubles","doublesTier","_i10","_data$cosmeticFormes2","removeType","overrideTypeChart","parseInt","_proto3","_i12","_ref5","require"],"sources":["../src/battle-dex.ts"],"sourcesContent":["/**\r\n * Pokemon Showdown Dex\r\n *\r\n * Roughly equivalent to sim/dex.js in a Pokemon Showdown server, but\r\n * designed for use in browsers rather than in Node.\r\n *\r\n * This is a generic utility library for Pokemon Showdown code: any\r\n * code shared between the replay viewer and the client usually ends up\r\n * here.\r\n *\r\n * Licensing note: PS's client has complicated licensing:\r\n * - The client as a whole is AGPLv3\r\n * - The battle replay/animation engine (battle-*.ts) by itself is MIT\r\n *\r\n * Compiled into battledata.js which includes all dependencies\r\n *\r\n * @author Guangcong Luo <guangcongluo@gmail.com>\r\n * @license MIT\r\n */\r\n\r\ndeclare var require: any;\r\ndeclare var global: any;\r\n\r\nif (typeof window === 'undefined') {\r\n\t// Node\r\n\t(global as any).window = global;\r\n} else {\r\n\t// browser (possibly NW.js!)\r\n\twindow.exports = window;\r\n}\r\n\r\n// @ts-ignore\r\nwindow.nodewebkit = !!(typeof process !== 'undefined' && process.versions && process.versions['node-webkit']);\r\n\r\nfunction toID(text: any) {\r\n\tif (text?.id) {\r\n\t\ttext = text.id;\r\n\t} else if (text?.userid) {\r\n\t\ttext = text.userid;\r\n\t}\r\n\tif (typeof text !== 'string' && typeof text !== 'number') return '' as ID;\r\n\treturn ('' + text).toLowerCase().replace(/[^a-z0-9]+/g, '') as ID;\r\n}\r\n\r\nfunction toUserid(text: any) {\r\n\treturn toID(text);\r\n}\r\n\r\ntype Comparable = number | string | boolean | Comparable[] | {reverse: Comparable};\r\nconst PSUtils = new class {\r\n\t/**\r\n\t * Like string.split(delimiter), but only recognizes the first `limit`\r\n\t * delimiters (default 1).\r\n\t *\r\n\t * `\"1 2 3 4\".split(\" \", 2) => [\"1\", \"2\"]`\r\n\t *\r\n\t * `splitFirst(\"1 2 3 4\", \" \", 1) => [\"1\", \"2 3 4\"]`\r\n\t *\r\n\t * Returns an array of length exactly limit + 1.\r\n\t */\r\n\tsplitFirst(str: string, delimiter: string, limit: number = 1) {\r\n\t\tlet splitStr: string[] = [];\r\n\t\twhile (splitStr.length < limit) {\r\n\t\t\tlet delimiterIndex = str.indexOf(delimiter);\r\n\t\t\tif (delimiterIndex >= 0) {\r\n\t\t\t\tsplitStr.push(str.slice(0, delimiterIndex));\r\n\t\t\t\tstr = str.slice(delimiterIndex + delimiter.length);\r\n\t\t\t} else {\r\n\t\t\t\tsplitStr.push(str);\r\n\t\t\t\tstr = '';\r\n\t\t\t}\r\n\t\t}\r\n\t\tsplitStr.push(str);\r\n\t\treturn splitStr;\r\n\t}\r\n\r\n\t/**\r\n\t * Compares two variables; intended to be used as a smarter comparator.\r\n\t * The two variables must be the same type (TypeScript will not check this).\r\n\t *\r\n\t * - Numbers are sorted low-to-high, use `-val` to reverse\r\n\t * - Strings are sorted A to Z case-semi-insensitively, use `{reverse: val}` to reverse\r\n\t * - Booleans are sorted true-first (REVERSE of casting to numbers), use `!val` to reverse\r\n\t * - Arrays are sorted lexically in the order of their elements\r\n\t *\r\n\t * In other words: `[num, str]` will be sorted A to Z, `[num, {reverse: str}]` will be sorted Z to A.\r\n\t */\r\n\tcompare(a: Comparable, b: Comparable): number {\r\n\t\tif (typeof a === 'number') {\r\n\t\t\treturn a - (b as number);\r\n\t\t}\r\n\t\tif (typeof a === 'string') {\r\n\t\t\treturn a.localeCompare(b as string);\r\n\t\t}\r\n\t\tif (typeof a === 'boolean') {\r\n\t\t\treturn (a ? 1 : 2) - (b ? 1 : 2);\r\n\t\t}\r\n\t\tif (Array.isArray(a)) {\r\n\t\t\tfor (let i = 0; i < a.length; i++) {\r\n\t\t\t\tconst comparison = PSUtils.compare(a[i], (b as Comparable[])[i]);\r\n\t\t\t\tif (comparison) return comparison;\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tif (a.reverse) {\r\n\t\t\treturn PSUtils.compare((b as {reverse: string}).reverse, a.reverse);\r\n\t\t}\r\n\t\tthrow new Error(`Passed value ${a} is not comparable`);\r\n\t}\r\n\t/**\r\n\t * Sorts an array according to the callback's output on its elements.\r\n\t *\r\n\t * The callback's output is compared according to `PSUtils.compare` (in\r\n\t * particular, it supports arrays so you can sort by multiple things).\r\n\t */\r\n\tsortBy<T>(array: T[], callback: (a: T) => Comparable): T[];\r\n\t/**\r\n\t * Sorts an array according to `PSUtils.compare`. (Correctly sorts numbers,\r\n\t * unlike `array.sort`)\r\n\t */\r\n\tsortBy<T extends Comparable>(array: T[]): T[];\r\n\tsortBy<T>(array: T[], callback?: (a: T) => Comparable) {\r\n\t\tif (!callback) return (array as any[]).sort(PSUtils.compare);\r\n\t\treturn array.sort((a, b) => PSUtils.compare(callback(a), callback(b)));\r\n\t}\r\n};\r\n\r\n/**\r\n * Sanitize a room ID by removing anything that isn't alphanumeric or `-`.\r\n * Shouldn't actually do anything except against malicious input.\r\n */\r\nfunction toRoomid(roomid: string) {\r\n\treturn roomid.replace(/[^a-zA-Z0-9-]+/g, '').toLowerCase();\r\n}\r\n\r\nfunction toName(name: any) {\r\n\tif (typeof name !== 'string' && typeof name !== 'number') return '';\r\n\tname = ('' + name).replace(/[\\|\\s\\[\\]\\,\\u202e]+/g, ' ').trim();\r\n\tif (name.length > 18) name = name.substr(0, 18).trim();\r\n\r\n\t// remove zalgo\r\n\tname = name.replace(\r\n\t\t/[\\u0300-\\u036f\\u0483-\\u0489\\u0610-\\u0615\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06ED\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E]{3,}/g,\r\n\t\t''\r\n\t);\r\n\tname = name.replace(/[\\u239b-\\u23b9]/g, '');\r\n\r\n\treturn name;\r\n}\r\n\r\ninterface SpriteData {\r\n\tw: number;\r\n\th: number;\r\n\ty?: number;\r\n\tgen?: number;\r\n\turl?: string;\r\n\trawHTML?: string;\r\n\tpixelated?: boolean;\r\n\tisFrontSprite?: boolean;\r\n\tcryurl?: string;\r\n\tshiny?: boolean;\r\n}\r\n\r\ninterface TeambuilderSpriteData {\r\n\tx: number;\r\n\ty: number;\r\n\tspriteDir: string;\r\n\tspriteid: string;\r\n\tshiny?: boolean;\r\n}\r\n\r\nconst Dex = new class implements ModdedDex {\r\n\treadonly gen = 9;\r\n\treadonly modid = 'gen9' as ID;\r\n\treadonly cache = null!;\r\n\r\n\treadonly statNames: ReadonlyArray<StatName> = ['hp', 'atk', 'def', 'spa', 'spd', 'spe'];\r\n\treadonly statNamesExceptHP: ReadonlyArray<StatNameExceptHP> = ['atk', 'def', 'spa', 'spd', 'spe'];\r\n\r\n\tpokeballs: string[] | null = null;\r\n\r\n\t//TODO we might want to move this to something like data/petmods\r\n\treadonly modResourcePrefix = 'https://raw.githubusercontent.com/scoopapa/dh2/master/data/mods/';\r\n\r\n\r\n\tresourcePrefix = (() => {\r\n\t\tlet prefix = '';\r\n\t\tif (window.document?.location?.protocol !== 'http:') prefix = 'https:';\r\n\t\treturn `${prefix}//${'play.pokemonshowdown.com'}/`;\r\n\t})();\r\n\r\n\tfxPrefix = (() => {\r\n\t\tconst protocol = (window.document?.location?.protocol !== 'http:') ? 'https:' : '';\r\n\t\treturn `${protocol}//${'play.pokemonshowdown.com'}/fx/`;\r\n\t})();\r\n\r\n\tloadedSpriteData = {xy: 1, bw: 0};\r\n\tmoddedDexes: {[mod: string]: ModdedDex} = {};\r\n\r\n\tmod(modid: ID): ModdedDex {\r\n\t\tif (modid === 'gen9') return this;\r\n\t\tif (!window.BattleTeambuilderTable) return this;\r\n\t\tif (modid in this.moddedDexes) {\r\n\t\t\treturn this.moddedDexes[modid];\r\n\t\t}\r\n\t\tthis.moddedDexes[modid] = new ModdedDex(modid);\r\n\t\treturn this.moddedDexes[modid];\r\n\t}\r\n\tforGen(gen: number) {\r\n\t\tif (!gen) return this;\r\n\t\treturn this.mod(`gen${gen}` as ID);\r\n\t}\r\n\r\n\tresolveAvatar(avatar: string): string {\r\n\t\tif (window.BattleAvatarNumbers && avatar in BattleAvatarNumbers) {\r\n\t\t\tavatar = BattleAvatarNumbers[avatar];\r\n\t\t}\r\n\t\tif (avatar.charAt(0) === '#') {\r\n\t\t\treturn Dex.resourcePrefix + 'sprites/trainers-custom/' + toID(avatar.substr(1)) + '.png';\r\n\t\t}\r\n\t\tif (avatar.includes('.') && window.Config?.server?.registered) {\r\n\t\t\t// custom avatar served by the server\r\n\t\t\tlet protocol = (Config.server.port === 443) ? 'https' : 'http';\r\n\t\t\treturn protocol + '://' + Config.server.host + ':' + Config.server.port +\r\n\t\t\t\t'/avatars/' + encodeURIComponent(avatar).replace(/\\%3F/g, '?');\r\n\t\t}\r\n\t\treturn Dex.resourcePrefix + 'sprites/trainers/' + Dex.sanitizeName(avatar || 'unknown') + '.png';\r\n\t}\r\n\r\n\t/**\r\n\t * This is used to sanitize strings from data files like `moves.js` and\r\n\t * `teambuilder-tables.js`.\r\n\t *\r\n\t * This makes sure untrusted strings can't wreak havoc if someone forgets to\r\n\t * escape it before putting it in HTML.\r\n\t *\r\n\t * None of these characters belong in these files, anyway. (They can be used\r\n\t * in move descriptions, but those are served from `text.js`, which are\r\n\t * definitely always treated as unsanitized.)\r\n\t */\r\n\tsanitizeName(name: any) {\r\n\t\tif (!name) return '';\r\n\t\treturn ('' + name)\r\n\t\t\t.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;')\r\n\t\t\t.slice(0, 50);\r\n\t}\r\n\r\n\tprefs(prop: string) {\r\n\t\t// @ts-ignore\r\n\t\treturn window.Storage?.prefs?.(prop);\r\n\t}\r\n\r\n\tgetShortName(name: string) {\r\n\t\tlet shortName = name.replace(/[^A-Za-z0-9]+$/, '');\r\n\t\tif (shortName.indexOf('(') >= 0) {\r\n\t\t\tshortName += name.slice(shortName.length).replace(/[^\\(\\)]+/g, '').replace(/\\(\\)/g, '');\r\n\t\t}\r\n\t\treturn shortName;\r\n\t}\r\n\r\n\tgetEffect(name: string | null | undefined): PureEffect | Item | Ability | Move {\r\n\t\tname = (name || '').trim();\r\n\t\tif (name.substr(0, 5) === 'item:') {\r\n\t\t\treturn Dex.items.get(name.substr(5).trim());\r\n\t\t} else if (name.substr(0, 8) === 'ability:') {\r\n\t\t\treturn Dex.abilities.get(name.substr(8).trim());\r\n\t\t} else if (name.substr(0, 5) === 'move:') {\r\n\t\t\treturn Dex.moves.get(name.substr(5).trim());\r\n\t\t}\r\n\t\tlet id = toID(name);\r\n\t\treturn new PureEffect(id, name);\r\n\t}\r\n\r\n\tmoves = {\r\n\t\tget: (nameOrMove: string | Move | null | undefined): Move => {\r\n\t\t\tif (nameOrMove && typeof nameOrMove !== 'string') {\r\n\t\t\t\t// TODO: don't accept Moves here\r\n\t\t\t\treturn nameOrMove;\r\n\t\t\t}\r\n\t\t\tlet name = nameOrMove || '';\r\n\t\t\tlet id = toID(nameOrMove);\r\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\t\tname = BattleAliases[id];\r\n\t\t\t\tid = toID(name);\r\n\t\t\t}\r\n\t\t\tif (!window.BattleMovedex) window.BattleMovedex = {};\r\n\t\t\tlet data = window.BattleMovedex[id];\r\n\t\t\tif (data && typeof data.exists === 'boolean') return data;\r\n\r\n\t\t\tif (!data && id.substr(0, 11) === 'hiddenpower' && id.length > 11) {\r\n\t\t\t\tlet [, hpWithType, hpPower] = /([a-z]*)([0-9]*)/.exec(id)!;\r\n\t\t\t\tdata = {\r\n\t\t\t\t\t...(window.BattleMovedex[hpWithType] || {}),\r\n\t\t\t\t\tbasePower: Number(hpPower) || 60,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tif (!data && id.substr(0, 6) === 'return' && id.length > 6) {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\t...(window.BattleMovedex['return'] || {}),\r\n\t\t\t\t\tbasePower: Number(id.slice(6)),\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tif (!data && id.substr(0, 11) === 'frustration' && id.length > 11) {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\t...(window.BattleMovedex['frustration'] || {}),\r\n\t\t\t\t\tbasePower: Number(id.slice(11)),\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tif (!data) data = {exists: false};\r\n\t\t\tlet move = new Move(id, name, data);\r\n\t\t\twindow.BattleMovedex[id] = move;\r\n\t\t\treturn move;\r\n\t\t},\r\n\t};\r\n\r\n\tgetGen3Category(type: string) {\r\n\t\treturn [\r\n\t\t\t'Fire', 'Water', 'Grass', 'Electric', 'Ice', 'Psychic', 'Dark', 'Dragon',\r\n\t\t].includes(type) ? 'Special' : 'Physical';\r\n\t}\r\n\tgetKEPCategory(type: string) {\r\n\t\treturn [\r\n\t\t\t'Fire', 'Water', 'Grass', 'Electric', 'Ice', 'Psychic', 'Dark', 'Dragon', 'Fairy'\r\n\t\t].includes(type) ? 'Special' : 'Physical';\r\n\t}\r\n\tgetCSICategory(type: string) {\r\n\t\treturn [\r\n\t\t\t'Fire', 'Water', 'Grass', 'Electric', 'Ice', 'Psychic', 'Dark', 'Dragon', 'Cosmic'\r\n\t\t].includes(type) ? 'Special' : 'Physical';\r\n\t}\r\n\r\n\titems = {\r\n\t\tget: (nameOrItem: string | Item | null | undefined): Item => {\r\n\t\t\tif (nameOrItem && typeof nameOrItem !== 'string') {\r\n\t\t\t\t// TODO: don't accept Items here\r\n\t\t\t\treturn nameOrItem;\r\n\t\t\t}\r\n\t\t\tlet name = nameOrItem || '';\r\n\t\t\tlet id = toID(nameOrItem);\r\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\t\tname = BattleAliases[id];\r\n\t\t\t\tid = toID(name);\r\n\t\t\t}\r\n\t\t\tif (!window.BattleItems) window.BattleItems = {};\r\n\t\t\tlet data = window.BattleItems[id];\r\n\t\t\tif (data && typeof data.exists === 'boolean') return data;\r\n\t\t\tif (!data) data = {exists: false};\r\n\t\t\tlet item = new Item(id, name, data);\r\n\t\t\twindow.BattleItems[id] = item;\r\n\t\t\treturn item;\r\n\t\t},\r\n\t};\r\n\r\n\tabilities = {\r\n\t\tget: (nameOrAbility: string | Ability | null | undefined): Ability => {\r\n\t\t\tif (nameOrAbility && typeof nameOrAbility !== 'string') {\r\n\t\t\t\t// TODO: don't accept Abilities here\r\n\t\t\t\treturn nameOrAbility;\r\n\t\t\t}\r\n\t\t\tlet name = nameOrAbility || '';\r\n\t\t\tlet id = toID(nameOrAbility);\r\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\t\tname = BattleAliases[id];\r\n\t\t\t\tid = toID(name);\r\n\t\t\t}\r\n\t\t\tif (!window.BattleAbilities) window.BattleAbilities = {};\r\n\t\t\tlet data = window.BattleAbilities[id];\r\n\t\t\tif (data && typeof data.exists === 'boolean') return data;\r\n\t\t\tlet ability = new Ability(id, name, data);\r\n\t\t\twindow.BattleAbilities[id] = ability;\r\n\t\t\treturn ability;\r\n\t\t},\r\n\t};\r\n\r\n\tspecies = {\r\n\t\tget: (nameOrSpecies: string | Species | null | undefined, modded = false, debug = \"\"): Species => {\r\n\t\t\tif (nameOrSpecies && typeof nameOrSpecies !== 'string') {\r\n\t\t\t\t// TODO: don't accept Species' here\r\n\t\t\t\treturn nameOrSpecies;\r\n\t\t\t}\r\n\t\t\tlet name = nameOrSpecies || '';\r\n\t\t\tlet id = toID(nameOrSpecies);\r\n\t\t\tlet formid = id;\r\n\t\t\tif (!window.BattlePokedexAltForms) window.BattlePokedexAltForms = {};\r\n\t\t\tif (formid in window.BattlePokedexAltForms) return window.BattlePokedexAltForms[formid];\r\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\t\tname = BattleAliases[id];\r\n\t\t\t\tid = toID(name);\r\n\t\t\t} else if (window.BattlePokedex && !(id in BattlePokedex) && window.BattleBaseSpeciesChart) {\r\n\t\t\t\tfor (const baseSpeciesId of BattleBaseSpeciesChart) {\r\n\t\t\t\t\tif (formid.startsWith(baseSpeciesId)) {\r\n\t\t\t\t\t\tid = baseSpeciesId;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!window.BattlePokedex) window.BattlePokedex = {};\r\n\t\t\tlet data = window.BattlePokedex[id];\r\n\t\t\tlet species: Species;\r\n\t\t\tif (data && typeof data.exists === 'boolean') {\r\n\t\t\t\tspecies = data;\r\n\t\t\t} else {\r\n\t\t\t\tif (!data) data = {exists: false};\r\n\t\t\t\tif (!data.tier && id.slice(-5) === 'totem') {\r\n\t\t\t\t\tdata.tier = this.species.get(id.slice(0, -5)).tier;\r\n\t\t\t\t}\r\n\t\t\t\tif (!data.tier && data.baseSpecies && toID(data.baseSpecies) !== id) {\r\n\t\t\t\t\tdata.tier = this.species.get(data.baseSpecies).tier;\r\n\t\t\t\t}\r\n\t\t\t\tspecies = new Species(id, name, data);\r\n\t\t\t\twindow.BattlePokedex[id] = species;\r\n\t\t\t}\r\n\r\n\t\t\tif (species.cosmeticFormes) {\r\n\t\t\t\tfor (const forme of species.cosmeticFormes) {\r\n\t\t\t\t\tif (toID(forme) === formid) {\r\n\t\t\t\t\t\tspecies = new Species(formid, name, {\r\n\t\t\t\t\t\t\t...species,\r\n\t\t\t\t\t\t\tname: forme,\r\n\t\t\t\t\t\t\tforme: forme.slice(species.name.length + 1),\r\n\t\t\t\t\t\t\tbaseForme: \"\",\r\n\t\t\t\t\t\t\tbaseSpecies: species.name,\r\n\t\t\t\t\t\t\totherFormes: null,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\twindow.BattlePokedexAltForms[formid] = species;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn species;\r\n\t\t},\r\n\t};\r\n\r\n\ttypes = {\r\n\t\tallCache: null as Type[] | null,\r\n\t\tget: (type: any): Type => {\r\n\t\t\tif (!type || typeof type === 'string') {\r\n\t\t\t\tconst id = toID(type) as string;\r\n\t\t\t\tconst name = id.substr(0, 1).toUpperCase() + id.substr(1);\r\n\t\t\t\ttype = (window.BattleTypeChart && window.BattleTypeChart[id]) || {};\r\n\t\t\t\tif (type.damageTaken) type.exists = true;\r\n\t\t\t\tif (!type.id) type.id = id;\r\n\t\t\t\tif (!type.name) type.name = name;\r\n\t\t\t\tif (!type.effectType) {\r\n\t\t\t\t\ttype.effectType = 'Type';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn type;\r\n\t\t},\r\n\t\tall: (): readonly Type[] => {\r\n\t\t\tif (this.types.allCache) return this.types.allCache;\r\n\t\t\tconst types = [];\r\n\t\t\tfor (const id in (window.BattleTypeChart || {})) {\r\n\t\t\t\ttypes.push(Dex.types.get(id));\r\n\t\t\t}\r\n\t\t\tif (types.length) this.types.allCache = types;\r\n\t\t\treturn types;\r\n\t\t},\r\n\t\tisName: (name: string | null): boolean => {\r\n\t\t\tconst id = toID(name);\r\n\t\t\tif (name !== id.substr(0, 1).toUpperCase() + id.substr(1)) return false;\r\n\t\t\treturn (window.BattleTypeChart || {}).hasOwnProperty(id);\r\n\t\t},\r\n\t};\r\n\r\n\thasAbility(species: Species, ability: string) {\r\n\t\tfor (const i in species.abilities) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (ability === species.abilities[i]) return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t// getSpriteMod is used to find the correct mod folder for the sprite url to use\r\n\t// id is the name of the pokemon, type, or item. folder refers to \"front\", or \"back-shiny\" etc. overrideStandard is false for custom elements and true for canon elements\r\n\tgetSpriteMod(mod: string, id: string, folder: string, overrideStandard: boolean = false) { \r\n\t\tif (!window.ModSprites[id]) return '';\r\n\t\tif ((!mod || !window.ModSprites[id][mod]) && !overrideStandard) { // for custom elements only, it will use sprites from another mod if the mod provided doesn't have one\r\n\t\t\tfor (const modName in window.ModSprites[id]) {\r\n\t\t\t\tif (window.ModSprites[id][modName].includes(folder)) return modName;\r\n\t\t\t\tif (window.ModSprites[id][modName].includes('ani' + folder)) return modName;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (mod && window.ModSprites[id][mod] && window.ModSprites[id][mod].includes(folder)) return mod;\r\n\t\treturn '';\r\n\t}\r\n\r\n\tloadSpriteData(gen: 'xy' | 'bw') {\r\n\t\tif (this.loadedSpriteData[gen]) return;\r\n\t\tthis.loadedSpriteData[gen] = 1;\r\n\r\n\t\tlet path = $('script[src*=\"pokedex-mini.js\"]').attr('src') || '';\r\n\t\tlet qs = '?' + (path.split('?')[1] || '');\r\n\t\tpath = (path.match(/.+?(?=data\\/pokedex-mini\\.js)/) || [])[0] || '';\r\n\r\n\t\tlet el = document.createElement('script');\r\n\t\tel.src = path + 'data/pokedex-mini-bw.js' + qs;\r\n\t\tdocument.getElementsByTagName('body')[0].appendChild(el);\r\n\t}\r\n\r\n\tgetSpriteData(pokemon: Pokemon | Species | string, isFront: boolean, options: {\r\n\t\tgen?: number,\r\n\t\tshiny?: boolean,\r\n\t\tgender?: GenderName,\r\n\t\tafd?: boolean,\r\n\t\tnoScale?: boolean,\r\n\t\tmod: string,\r\n\t\tdynamax?: boolean,\r\n\t} = {gen: 6, mod: ''}) {\r\n\t\tlet mechanicsGen = options.gen || 6;\r\n\t\tif (options.mod && window.ModConfig[options.mod].spriteGen) mechanicsGen = window.ModConfig[options.mod].spriteGen;\r\n\t\tlet isDynamax = !!options.dynamax;\r\n\t\tif (pokemon instanceof Pokemon) {\r\n\t\t\tif (pokemon.volatiles.transform) {\r\n\t\t\t\toptions.shiny = pokemon.volatiles.transform[2];\r\n\t\t\t\toptions.gender = pokemon.volatiles.transform[3];\r\n\t\t\t} else {\r\n\t\t\t\toptions.shiny = pokemon.shiny;\r\n\t\t\t\toptions.gender = pokemon.gender;\r\n\t\t\t}\r\n\t\t\tlet isGigantamax = false;\r\n\t\t\tif (pokemon.volatiles.dynamax) {\r\n\t\t\t\tif (pokemon.volatiles.dynamax[1]) {\r\n\t\t\t\t\tisGigantamax = true;\r\n\t\t\t\t} else if (options.dynamax !== false) {\r\n\t\t\t\t\tisDynamax = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpokemon = pokemon.getSpeciesForme() + (isGigantamax ? '-Gmax' : '');\r\n\t\t}\r\n\t\tconst modSpecies = Dex.species.get(pokemon);\r\n\t\tlet resourcePrefix = Dex.resourcePrefix;\r\n\t\tlet spriteDir = 'sprites/';\r\n\t\tlet fakeSprite = false;\r\n\t\tlet modName = modSpecies.spriteid;\r\n\t\tlet id = toID(modName);\r\n\t\toptions.mod = this.getSpriteMod(options.mod, id, isFront ? 'front' : 'back', modSpecies.exists !== false);\r\n\t\tif (options.mod) {\r\n\t\t\tresourcePrefix = Dex.modResourcePrefix;\r\n\t\t\tspriteDir = `${options.mod}/sprites/`;\r\n\t\t\tfakeSprite = true;\r\n\t\t\tif (this.getSpriteMod(options.mod, id, (isFront ? 'front' : 'back') + '-shiny', modSpecies.exists !== false) === '') options.shiny = false;\r\n\t\t}\r\n\r\n\t\tconst species = Dex.species.get(pokemon);\r\n\t\t// Gmax sprites are already extremely large, so we don't need to double.\r\n\t\tif (species.name.endsWith('-Gmax')) isDynamax = false;\r\n\t\tlet spriteData = {\r\n\t\t\tgen: mechanicsGen,\r\n\t\t\tw: 96,\r\n\t\t\th: 96,\r\n\t\t\ty: 0,\r\n\t\t\turl: resourcePrefix + spriteDir,\r\n\t\t\tpixelated: true,\r\n\t\t\tisFrontSprite: false,\r\n\t\t\tcryurl: '',\r\n\t\t\tshiny: options.shiny,\r\n\t\t};\r\n\t\tlet name = species.spriteid;\r\n\t\tlet dir;\r\n\t\tlet facing;\r\n\t\tif (isFront) {\r\n\t\t\tspriteData.isFrontSprite = true;\r\n\t\t\tdir = '';\r\n\t\t\tfacing = 'front';\r\n\t\t} else {\r\n\t\t\tdir = '-back';\r\n\t\t\tfacing = 'back';\r\n\t\t}\r\n\t\tif (fakeSprite) dir = isFront ? 'front' : 'back';\r\n\t\t// Decide which gen sprites to use.\r\n\t\t//\r\n\t\t// There are several different generations we care about here:\r\n\t\t//\r\n\t\t//   - mechanicsGen: the generation number of the mechanics and battle (options.gen)\r\n\t\t//   - graphicsGen: the generation number of sprite/field graphics the user has requested.\r\n\t\t//     This will default to mechanicsGen, but may be altered depending on user preferences.\r\n\t\t//   - spriteData.gen: the generation number of a the specific Pokemon sprite in question.\r\n\t\t//     This defaults to graphicsGen, but if the graphicsGen doesn't have a sprite for the Pokemon\r\n\t\t//     (eg. Darmanitan in graphicsGen 2) then we go up gens until it exists.\r\n\t\t//\r\n\t\tlet graphicsGen = mechanicsGen;\r\n\t\tif (Dex.prefs('nopastgens')) graphicsGen = 6;\r\n\t\tif (Dex.prefs('bwgfx') && graphicsGen >= 6) graphicsGen = 5;\r\n\t\tspriteData.gen = Math.max(graphicsGen, Math.min(species.gen, 5));\r\n\t\tconst baseDir = ['', 'gen1', 'gen2', 'gen3', 'gen4', 'gen5', '', '', '', ''][spriteData.gen];\r\n\r\n\t\tlet animationData = null;\r\n\t\tlet miscData = null;\r\n\t\tlet speciesid = species.id;\r\n\t\tif (species.isTotem) speciesid = toID(name);\r\n\t\tif (baseDir === '' && window.BattlePokemonSprites) {\r\n\t\t\tanimationData = BattlePokemonSprites[speciesid];\r\n\t\t}\r\n\t\tif (baseDir === 'gen5' && window.BattlePokemonSpritesBW) {\r\n\t\t\tanimationData = BattlePokemonSpritesBW[speciesid];\r\n\t\t}\r\n\t\tif (window.BattlePokemonSprites) miscData = BattlePokemonSprites[speciesid];\r\n\t\tif (!miscData && window.BattlePokemonSpritesBW) miscData = BattlePokemonSpritesBW[speciesid];\r\n\t\tif (!animationData) animationData = {};\r\n\t\tif (!miscData) miscData = {};\r\n\r\n\t\tif (miscData.num !== 0 && miscData.num > -5000) {\r\n\t\t\tlet baseSpeciesid = toID(species.baseSpecies);\r\n\t\t\tspriteData.cryurl = 'audio/cries/' + baseSpeciesid;\r\n\t\t\tlet formeid = species.formeid;\r\n\t\t\tif (species.isMega || formeid && (\r\n\t\t\t\tformeid === '-crowned' ||\r\n\t\t\t\tformeid === '-eternal' ||\r\n\t\t\t\tformeid === '-eternamax' ||\r\n\t\t\t\tformeid === '-four' ||\r\n\t\t\t\tformeid === '-hangry' ||\r\n\t\t\t\tformeid === '-hero' ||\r\n\t\t\t\tformeid === '-lowkey' ||\r\n\t\t\t\tformeid === '-noice' ||\r\n\t\t\t\tformeid === '-primal' ||\r\n\t\t\t\tformeid === '-rapidstrike' ||\r\n\t\t\t\tformeid === '-roaming' ||\r\n\t\t\t\tformeid === '-school' ||\r\n\t\t\t\tformeid === '-sky' ||\r\n\t\t\t\tformeid === '-starter' ||\r\n\t\t\t\tformeid === '-super' ||\r\n\t\t\t\tformeid === '-therian' ||\r\n\t\t\t\tformeid === '-unbound' ||\r\n\t\t\t\tbaseSpeciesid === 'calyrex' ||\r\n\t\t\t\tbaseSpeciesid === 'kyurem' ||\r\n\t\t\t\tbaseSpeciesid === 'cramorant' ||\r\n\t\t\t\tbaseSpeciesid === 'indeedee' ||\r\n\t\t\t\tbaseSpeciesid === 'lycanroc' ||\r\n\t\t\t\tbaseSpeciesid === 'necrozma' ||\r\n\t\t\t\tbaseSpeciesid === 'oinkologne' ||\r\n\t\t\t\tbaseSpeciesid === 'oricorio' ||\r\n\t\t\t\tbaseSpeciesid === 'slowpoke' ||\r\n\t\t\t\tbaseSpeciesid === 'tatsugiri' ||\r\n\t\t\t\tbaseSpeciesid === 'zygarde'\r\n\t\t\t)) {\r\n\t\t\t\tspriteData.cryurl += formeid;\r\n\t\t\t}\r\n\t\t\tspriteData.cryurl += '.mp3';\r\n\t\t}\r\n\r\n\t\tif (options.shiny && mechanicsGen > 1) dir += '-shiny';\r\n\r\n\t\t// April Fool's 2014\r\n\t\tif (window.Config && Config.server && Config.server.afd || options.afd) {\r\n\t\t\tdir = 'afd' + dir;\r\n\t\t\tspriteData.url += dir + '/' + name + '.png';\r\n\t\t\t// Duplicate code but needed to make AFD tinymax work\r\n\t\t\t// April Fool's 2020\r\n\t\t\tif (isDynamax && !options.noScale) {\r\n\t\t\t\tspriteData.w *= 0.25;\r\n\t\t\t\tspriteData.h *= 0.25;\r\n\t\t\t\tspriteData.y += -22;\r\n\t\t\t} else if (species.isTotem && !options.noScale) {\r\n\t\t\t\tspriteData.w *= 0.5;\r\n\t\t\t\tspriteData.h *= 0.5;\r\n\t\t\t\tspriteData.y += -11;\r\n\t\t\t}\r\n\t\t\treturn spriteData;\r\n\t\t}\r\n\r\n\t\t// Mod Cries\r\n\t\tif (options.mod === 'digimon') {\r\n\t\t\tspriteData.cryurl = `sprites/${options.mod}/audio/${toID(species.baseSpecies)}`;\r\n\t\t\tspriteData.cryurl += '.mp3';\r\n\t\t}\r\n\t\t\r\n\t\tlet fakeAnim = false;\r\n\t\tif (fakeSprite && window.ModSprites[id][options.mod].includes('ani' + facing)){\r\n\t\t\tfakeAnim = true;\r\n\t\t\tanimationData[facing] = {};\r\n\t\t\tanimationData[facing].w = 192;\r\n\t\t\tanimationData[facing].h = 192;\r\n\t\t}\r\n\t\tif (animationData[facing + 'f'] && options.gender === 'F') facing += 'f';\r\n\t\tlet allowAnim = (!fakeSprite || (fakeSprite && fakeAnim)) && !Dex.prefs('noanim') && !Dex.prefs('nogif');\r\n\t\tif (allowAnim && spriteData.gen >= 6) spriteData.pixelated = false;\r\n\t\tif (allowAnim && animationData[facing] && spriteData.gen >= 5) {\r\n\t\t\tif (facing.slice(-1) === 'f') name += '-f';\r\n\t\t\tdir = baseDir + 'ani' + dir;\r\n\r\n\t\t\tspriteData.w = animationData[facing].w;\r\n\t\t\tspriteData.h = animationData[facing].h;\r\n\t\t\tspriteData.url += dir + '/' + name + '.gif';\r\n\t\t\tconsole.log(animationData[facing]);\r\n\t\t} else {\r\n\t\t\t// There is no entry or enough data in pokedex-mini.js\r\n\t\t\t// Handle these in case-by-case basis; either using BW sprites or matching the played gen.\r\n\t\t\tif (!fakeSprite) dir = (baseDir || 'gen5') + dir;\r\n\r\n\t\t\t// Gender differences don't exist prior to Gen 4,\r\n\t\t\t// so there are no sprites for it\r\n\t\t\tif (spriteData.gen >= 4 && miscData['frontf'] && options.gender === 'F') {\r\n\t\t\t\tname += '-f';\r\n\t\t\t}\r\n\r\n\t\t\tspriteData.url += dir + '/' + name + '.png';\r\n\t\t}\r\n\r\n\t\tif (!options.noScale) {\r\n\t\t\tif (graphicsGen > 4) {\r\n\t\t\t\t// no scaling\r\n\t\t\t} else if (spriteData.isFrontSprite) {\r\n\t\t\t\tspriteData.w *= 2;\r\n\t\t\t\tspriteData.h *= 2;\r\n\t\t\t\tspriteData.y += -16;\r\n\t\t\t} else {\r\n\t\t\t\t// old gen backsprites are multiplied by 1.5x by the 3D engine\r\n\t\t\t\tspriteData.w *= 2 / 1.5;\r\n\t\t\t\tspriteData.h *= 2 / 1.5;\r\n\t\t\t\tspriteData.y += -11;\r\n\t\t\t}\r\n\t\t\tif (spriteData.gen <= 2) spriteData.y += 2;\r\n\t\t}\r\n\t\tif (isDynamax && !options.noScale) {\r\n\t\t\tspriteData.w *= 2;\r\n\t\t\tspriteData.h *= 2;\r\n\t\t\tspriteData.y += -22;\r\n\t\t} else if (species.isTotem && !options.noScale) {\r\n\t\t\tspriteData.w *= 1.5;\r\n\t\t\tspriteData.h *= 1.5;\r\n\t\t\tspriteData.y += -11;\r\n\t\t}\r\n\r\n\t\treturn spriteData;\r\n\t}\r\n\r\n\tgetPokemonIconNum(id: ID, isFemale?: boolean, facingLeft?: boolean) {\r\n\t\tlet num = 0;\r\n\t\tif (window.BattlePokemonSprites?.[id]?.num) {\r\n\t\t\tnum = BattlePokemonSprites[id].num;\r\n\t\t} else if (window.BattlePokedex?.[id]?.num) {\r\n\t\t\tnum = BattlePokedex[id].num;\r\n\t\t}\r\n\t\tif (num < 0) num = 0;\r\n\t\tif (num > 1017) num = 0;\r\n\r\n\t\tif (window.BattlePokemonIconIndexes?.[id]) {\r\n\t\t\tnum = BattlePokemonIconIndexes[id];\r\n\t\t}\r\n\r\n\t\tif (isFemale) {\r\n\t\t\tif (['unfezant', 'frillish', 'jellicent', 'meowstic', 'pyroar'].includes(id)) {\r\n\t\t\t\tnum = BattlePokemonIconIndexes[id + 'f'];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (facingLeft) {\r\n\t\t\tif (BattlePokemonIconIndexesLeft[id]) {\r\n\t\t\t\tnum = BattlePokemonIconIndexesLeft[id];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn num;\r\n\t}\r\n\r\n\tgetPokemonIcon(pokemon: string | Pokemon | ServerPokemon | PokemonSet | null, facingLeft?: boolean, mod: string = '') {\r\n\t\tif (pokemon === 'pokeball') {\r\n\t\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-pokeball-sheet.png) no-repeat scroll -0px 4px`;\r\n\t\t} else if (pokemon === 'pokeball-statused') {\r\n\t\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-pokeball-sheet.png) no-repeat scroll -40px 4px`;\r\n\t\t} else if (pokemon === 'pokeball-fainted') {\r\n\t\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-pokeball-sheet.png) no-repeat scroll -80px 4px;opacity:.4;filter:contrast(0)`;\r\n\t\t} else if (pokemon === 'pokeball-none') {\r\n\t\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-pokeball-sheet.png) no-repeat scroll -80px 4px`;\r\n\t\t}\r\n\r\n\t\tlet id = toID(pokemon);\r\n\t\tif (!pokemon || typeof pokemon === 'string') pokemon = null;\r\n\t\t// @ts-ignore\r\n\t\tif (pokemon?.speciesForme) id = toID(pokemon.speciesForme);\r\n\t\t// @ts-ignore\r\n\t\tif (pokemon?.species) id = toID(pokemon.species);\r\n\t\t// @ts-ignore\r\n\t\tif (pokemon?.volatiles?.formechange && !pokemon.volatiles.transform) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tid = toID(pokemon.volatiles.formechange[1]);\r\n\t\t}\r\n\t\tlet num = this.getPokemonIconNum(id, pokemon?.gender === 'F', facingLeft);\r\n\r\n\t\tlet top = Math.floor(num / 12) * 30;\r\n\t\tlet left = (num % 12) * 40;\r\n\t\tlet fainted = ((pokemon as Pokemon | ServerPokemon)?.fainted ? `;opacity:.3;filter:grayscale(100%) brightness(.5)` : ``);\r\n\t\tDex.species.get(id);\r\n\t\tlet species = window.BattlePokedexAltForms && window.BattlePokedexAltForms[id] ? window.BattlePokedexAltForms[id] : Dex.species.get(id);\r\n\t\tmod = this.getSpriteMod(mod, id, 'icons', species.exists !== false);\r\n\t\tif (mod) return `background:transparent url(${this.modResourcePrefix}${mod}/sprites/icons/${id}.png) no-repeat scroll -0px -0px${fainted}`;\r\n\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-sheet.png?v14) no-repeat scroll -${left}px -${top}px${fainted}`;\r\n\t}\r\n\r\n\tgetTeambuilderSpriteData(pokemon: any, gen: number = 0, mod: string = ''): TeambuilderSpriteData {\r\n\t\tlet id = toID(pokemon.species);\r\n\t\tlet spriteid = pokemon.spriteid;\r\n\t\tlet species = window.BattlePokedexAltForms && window.BattlePokedexAltForms[id] ? window.BattlePokedexAltForms[id] : Dex.species.get(pokemon.species);;\r\n\t\tif (pokemon.species && !spriteid) {\r\n\t\t\tspriteid = species.spriteid || toID(pokemon.species);\r\n\t\t}\r\n\t\tif (mod && window.ModConfig[mod].spriteGen) gen = window.ModConfig[mod].spriteGen;\r\n\t\tmod = this.getSpriteMod(mod, id, 'front', species.exists !== false);\r\n\t\tif (mod) {\r\n\t\t\treturn {\r\n\t\t\t\tspriteDir: `${mod}/sprites/front`,\r\n\t\t\t\tspriteid,\r\n\t\t\t\tshiny: (this.getSpriteMod(mod, id, 'front-shiny', species.exists !== false) !== null && pokemon.shiny),\r\n\t\t\t\tx: 10,\r\n\t\t\t\ty: 5,\r\n\t\t\t};\r\n\t\t}\r\n\t\tif (species.exists === false) return { spriteDir: 'sprites/gen5', spriteid: '0', x: 10, y: 5 };\r\n\t\tconst spriteData: TeambuilderSpriteData = {\r\n\t\t\tspriteid,\r\n\t\t\tspriteDir: 'sprites/dex',\r\n\t\t\tx: -2,\r\n\t\t\ty: -3,\r\n\t\t};\r\n\t\tif (pokemon.shiny) spriteData.shiny = true;\r\n\t\tif (Dex.prefs('nopastgens')) gen = 6;\r\n\t\tif (Dex.prefs('bwgfx') && gen > 5) gen = 5;\r\n\t\tlet xydexExists = (!species.isNonstandard || species.isNonstandard === 'Past' || species.isNonstandard === 'CAP') || [\r\n\t\t\t\"pikachustarter\", \"eeveestarter\", \"meltan\", \"melmetal\", \"pokestarufo\", \"pokestarufo2\", \"pokestarbrycenman\", \"pokestarmt\", \"pokestarmt2\", \"pokestargiant\", \"pokestarhumanoid\", \"pokestarmonster\", \"pokestarf00\", \"pokestarf002\", \"pokestarspirit\",\r\n\t\t].includes(species.id);\r\n\t\tif (species.gen === 8 && species.isNonstandard !== 'CAP') xydexExists = false;\r\n\t\tif ((!gen || gen >= 6) && xydexExists) {\r\n\t\t\tif (species.gen >= 7) {\r\n\t\t\t\tspriteData.x = -6;\r\n\t\t\t\tspriteData.y = -7;\r\n\t\t\t} else if (id.substr(0, 6) === 'arceus') {\r\n\t\t\t\tspriteData.x = -2;\r\n\t\t\t\tspriteData.y = 7;\r\n\t\t\t} else if (id === 'garchomp') {\r\n\t\t\t\tspriteData.x = -2;\r\n\t\t\t\tspriteData.y = 2;\r\n\t\t\t} else if (id === 'garchompmega') {\r\n\t\t\t\tspriteData.x = -2;\r\n\t\t\t\tspriteData.y = 0;\r\n\t\t\t}\r\n\t\t\treturn spriteData;\r\n\t\t}\r\n\t\tspriteData.spriteDir = 'sprites/gen5';\r\n\t\tif (gen <= 1 && species.gen <= 1) spriteData.spriteDir = 'sprites/gen1';\r\n\t\telse if (gen <= 2 && species.gen <= 2) spriteData.spriteDir = 'sprites/gen2';\r\n\t\telse if (gen <= 3 && species.gen <= 3) spriteData.spriteDir = 'sprites/gen3';\r\n\t\telse if (gen <= 4 && species.gen <= 4) spriteData.spriteDir = 'sprites/gen4';\r\n\t\tspriteData.x = 10;\r\n\t\tspriteData.y = 5;\r\n\t\treturn spriteData;\r\n\t}\r\n\r\n\tgetTeambuilderSprite(pokemon: any, gen: number = 0, mod: string = '') {\r\n\t\tif (!pokemon) return '';\r\n\t\tconst data = this.getTeambuilderSpriteData(pokemon, gen, mod);\r\n\t\tconst shiny = (data.shiny ? '-shiny' : '');\r\n\t\tlet resourcePrefix = Dex.resourcePrefix;\r\n\t\tif (data.spriteDir.includes('front')) resourcePrefix = Dex.modResourcePrefix;\r\n\t\treturn 'background-image:url(' + resourcePrefix + data.spriteDir + shiny + '/' + data.spriteid + '.png);background-position:' + data.x + 'px ' + data.y + 'px;background-repeat:no-repeat';\r\n\t}\r\n\r\n\tgetItemIcon(item: any, mod: string = '') {\r\n\t\tlet num = 0;\r\n\t\tif (typeof item === 'string' && exports.BattleItems) item = exports.BattleItems[toID(item)];\r\n\t\tmod = this.getSpriteMod(mod, item.id, 'items');\r\n\t\tif (mod) return `background:transparent url(${this.modResourcePrefix}${mod}/sprites/items/${item.id}.png) no-repeat`;\r\n\t\tif (item?.spritenum) num = item.spritenum;\r\n\r\n\t\tlet top = Math.floor(num / 16) * 24;\r\n\t\tlet left = (num % 16) * 24;\r\n\t\treturn 'background:transparent url(' + Dex.resourcePrefix + 'sprites/itemicons-sheet.png?v1) no-repeat scroll -' + left + 'px -' + top + 'px';\r\n\t}\r\n\r\n\tgetTypeIcon(type: string | null, b?: boolean, mod: string = '') { // b is just for utilichart.js\r\n\t\ttype = this.types.get(type).name;\r\n\t\tif (!type) type = '???';\r\n\t\tlet sanitizedType = type.replace(/\\?/g, '%3f');\r\n\t\tmod = this.getSpriteMod(mod, toID(type), 'types');\r\n\t\tif (mod && (type !== '???')) {\r\n\t\t\treturn `<img src=\"${this.modResourcePrefix}${mod}/sprites/types/${toID(type)}.png\" alt=\"${type}\" class=\"pixelated${b ? ' b' : ''}\" />`;\r\n\t\t} else {\r\n\t\t\treturn `<img src=\"${Dex.resourcePrefix}sprites/types/${sanitizedType}.png\" alt=\"${type}\" height=\"14\" width=\"32\" class=\"pixelated${b ? ' b' : ''}\" />`;\r\n\t\t}\r\n\t}\r\n\r\n\tgetCategoryIcon(category: string | null) {\r\n\t\tconst categoryID = toID(category);\r\n\t\tlet sanitizedCategory = '';\r\n\t\tswitch (categoryID) {\r\n\t\tcase 'physical':\r\n\t\tcase 'special':\r\n\t\tcase 'status':\r\n\t\t\tsanitizedCategory = categoryID.charAt(0).toUpperCase() + categoryID.slice(1);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tsanitizedCategory = 'undefined';\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\treturn `<img src=\"${Dex.resourcePrefix}sprites/categories/${sanitizedCategory}.png\" alt=\"${sanitizedCategory}\" height=\"14\" width=\"32\" class=\"pixelated\" />`;\r\n\t}\r\n\r\n\tgetPokeballs() {\r\n\t\tif (this.pokeballs) return this.pokeballs;\r\n\t\tthis.pokeballs = [];\r\n\t\tif (!window.BattleItems) window.BattleItems = {};\r\n\t\tfor (const data of Object.values(window.BattleItems) as AnyObject[]) {\r\n\t\t\tif (!data.isPokeball) continue;\r\n\t\t\tthis.pokeballs.push(data.name);\r\n\t\t}\r\n\t\treturn this.pokeballs;\r\n\t}\r\n};\r\n\r\nclass ModdedDex {\r\n\tgen: number;\r\n\treadonly modid: ID;\r\n\treadonly cache = {\r\n\t\tMoves: {} as any as {[k: string]: Move},\r\n\t\tItems: {} as any as {[k: string]: Item},\r\n\t\tAbilities: {} as any as {[k: string]: Ability},\r\n\t\tSpecies: {} as any as {[k: string]: Species},\r\n\t\tTypes: {} as any as {[k: string]: Effect},\r\n\t};\r\n\tpokeballs: string[] | null = null;\r\n\tconstructor(modid: ID) {\r\n\t\tthis.modid = modid;\r\n\t\tconst gen = parseInt(modid.slice(3), 10);\r\n\t\tif (!modid.startsWith('gen') || !gen) this.gen = 9;\r\n\t\telse this.gen = gen;\r\n\t}\r\n\tmoves = {\r\n\t\tget: (name: string): Move => {\r\n\t\t\tlet id = toID(name);\r\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\t\tname = BattleAliases[id];\r\n\t\t\t\tid = toID(name);\r\n\t\t\t}\r\n\t\t\t// if (this.cache.Moves.hasOwnProperty(id)) return this.cache.Moves[id];\r\n\r\n\t\t\tlet data = {...Dex.moves.get(name)};\r\n\r\n\t\t\tconst table = window.BattleTeambuilderTable[this.modid];\r\n\t\t\tif (table.overrideMoveInfo[id]) {\r\n\t\t\t\tfor (const key in table.overrideMoveInfo[id]) {\r\n\t\t\t\t\tdata = {...Dex.moves.get(name), ...table.overrideMoveInfo[id]};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.gen <= 3 && data.category !== 'Status') {\r\n\t\t\t\tswitch(this.modid) {\r\n\t\t\t\t\tcase 'gen1expansionpack':\r\n\t\t\t\t\t\tdata.category = Dex.getKEPCategory(data.type);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'gen2crystalseviiislands':\r\n\t\t\t\t\t\tdata.category = Dex.getCSICategory(data.type);\t\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault: \r\n\t\t\t\t\t\tdata.category = Dex.getGen3Category(data.type);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst move = new Move(id, name, data);\r\n\t\t\tthis.cache.Moves[id] = move;\r\n\t\t\treturn move;\r\n\t\t},\r\n\t};\r\n\r\n\titems = {\r\n\t\tget: (name: string): Item => {\r\n\t\t\tlet id = toID(name);\r\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\t\tname = BattleAliases[id];\r\n\t\t\t\tid = toID(name);\r\n\t\t\t}\r\n\t\t\tif (this.cache.Items.hasOwnProperty(id)) return this.cache.Items[id];\r\n\r\n\t\t\tlet data = {...Dex.items.get(name)};\r\n\t\t\tconst table = window.BattleTeambuilderTable[this.modid];\r\n\t\t\tif (table.fullItemName && id in table.fullItemName) {\r\n\t\t\t\tdata.name = table.fullItemName[id];\r\n\t\t\t\tdata.exists = true;\r\n\t\t\t}\r\n\t\t\tif (id in table.overrideItemDesc) data.shortDesc = table.overrideItemDesc[id];\r\n\t\r\n\t\t\tfor (let i = this.gen; i < 9; i++) {\r\n\t\t\t\tconst table = window.BattleTeambuilderTable['gen' + i];\r\n\t\t\t\tif (table.overrideItemDesc && id in table.overrideItemDesc) {\r\n\t\t\t\t\tdata.shortDesc = table.overrideItemDesc[id];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst item = new Item(id, name, data);\r\n\t\t\tthis.cache.Items[id] = item;\r\n\t\t\treturn item;\r\n\t\t},\r\n\t};\r\n\r\n\tabilities = {\r\n\t\tget: (name: string): Ability => {\r\n\t\t\tlet id = toID(name);\r\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\t\tname = BattleAliases[id];\r\n\t\t\t\tid = toID(name);\r\n\t\t\t}\r\n\t\t\tif (this.cache.Abilities.hasOwnProperty(id)) return this.cache.Abilities[id];\r\n\r\n\t\t\tlet data = {...Dex.abilities.get(name)};\r\n\t\t\t\r\n\t\t\tfor (let i = Dex.gen - 1; i >= this.gen; i--) {\r\n\t\t\t\tconst table = window.BattleTeambuilderTable[`gen${i}`];\r\n\t\t\t\tif (id in table.overrideAbilityData) {\r\n\t\t\t\t\tObject.assign(data, table.overrideAbilityData[id]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.modid !== `gen${this.gen}`) {\r\n\t\t\t\tconst table = window.BattleTeambuilderTable[this.modid];\r\n\t\t\t\tif (table.overrideAbilityData && id in table.overrideAbilityData) {\r\n\t\t\t\t\tObject.assign(data, table.overrideAbilityData[id]);\r\n\t\t\t\t}\r\n\t\t\t\tif (table.overrideAbilityDesc && id in table.overrideAbilityDesc) {\r\n\t\t\t\t\tdata.shortDesc = table.overrideAbilityDesc[id];\r\n\t\t\t\t}\r\n\t\t\t\tif (table.fullAbilityName && id in table.fullAbilityName) {\r\n\t\t\t\t\tdata.name = table.fullAbilityName[id];\r\n\t\t\t\t\tdata.exists = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst ability = new Ability(id, name, data);\r\n\t\t\tthis.cache.Abilities[id] = ability;\r\n\t\t\treturn ability;\r\n\t\t},\r\n\t};\r\n\r\n\tspecies = {\r\n\t\tget: (name: string, hasData = true, debug = \"\"): Species => {\r\n\t\t\tif (name.id) name = name.id; \r\n\t\t\tlet id = toID(name);\r\n\t\t\tlet formid = id;\r\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\r\n\t\t\t\tname = BattleAliases[id];\r\n\t\t\t\tid = toID(name);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (name.includes('-')) this.species.get(name.split('-')[0]);\r\n\t\t\tconst table = window.BattleTeambuilderTable[this.modid];\r\n\t\t\tif (!table.BattlePokedexAltForms) table.BattlePokedexAltForms = {};\r\n\t\t\tif (formid in table.BattlePokedexAltForms) {\r\n\t\t\t\treturn table.BattlePokedexAltForms[formid];\r\n\t\t\t}\r\n\t\t\tif (!table.BattleBaseSpeciesChart) table.BattleBaseSpeciesChart = [];\r\n\t\t\tif (window.BattleAliases && id in BattleAliases && !table.overrideDexInfo[id]) {\r\n\t\t\t\tname = BattleAliases[id];\r\n\t\t\t\tid = toID(name);\r\n\t\t\t} else if (table.overrideDexInfo && !(id in table.overrideDexInfo) && table.BattleBaseSpeciesChart) {\r\n\t\t\t\tfor (const baseSpeciesId of table.BattleBaseSpeciesChart) {\r\n\t\t\t\t\tif (formid.startsWith(baseSpeciesId)) {\r\n\t\t\t\t\t\tid = baseSpeciesId;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// if (this.cache.Species.hasOwnProperty(id)) return this.cache.Species[id];\r\n\t\t\tvar data;\r\n\t\t\tif (hasData) {\r\n\t\t\t\tdata = {...Dex.species.get(name, true, \"from moddedDex: getSpecies 1\")};\r\n\t\t\t\tif (table.overrideDexInfo && table.overrideDexInfo[id]) {\r\n\t\t\t\t\tdata = {...Dex.species.get(name, true, \"from moddedDex: getSpecies 2\"), ...table.overrideDexInfo[id]};\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (table.overrideDexInfo && table.overrideDexInfo[id]) {\r\n\t\t\t\t\tdata = {...table.overrideDexInfo[id]};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (this.gen < 3 || this.modid === 'gen7letsgo') {\r\n\t\t\t\tdata.abilities = {0: \"None\"};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (table.overrideTier && id in table.overrideTier) data.tier = table.overrideTier[id];\r\n\t\t\tif (table.doubles?.overrideTier && id in table.doubles.overrideTier) data.doublesTier = table.doubles.overrideTier[id];\r\n\t\t\tif (!data.tier && id.slice(-5) === 'totem') {\r\n\t\t\t\tdata.tier = this.species.get(id.slice(0, -5)).tier;\r\n\t\t\t}\r\n\t\t\tif (!data.tier && data.baseSpecies && toID(data.baseSpecies) !== id) {\r\n\t\t\t\tdata.tier = this.species.get(data.baseSpecies).tier;\r\n\t\t\t}\r\n\t\t\tif (data.cosmeticFormes) {\r\n\t\t\t\tif (!table.BattleBaseSpeciesChart.includes(id)) table.BattleBaseSpeciesChart.push(id);\r\n\t\t\t\tfor (const forme of data.cosmeticFormes) {\r\n\t\t\t\t\tif (toID(forme) === formid) {\r\n\t\t\t\t\t\tdata = new Species(formid, name, {\r\n\t\t\t\t\t\t\t...data,\r\n\t\t\t\t\t\t\tname: forme,\r\n\t\t\t\t\t\t\tforme: forme.slice(data.name.length + 1),\r\n\t\t\t\t\t\t\tbaseForme: \"\",\r\n\t\t\t\t\t\t\tbaseSpecies: data.name,\r\n\t\t\t\t\t\t\totherFormes: null,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\ttable.BattlePokedexAltForms[formid] = data;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (data.gen > this.gen) data.tier = 'Illegal';\r\n\t\t\tconst species = new Species(id, name, data);\r\n\t\t\tthis.cache.Species[id] = species;\r\n\t\t\treturn species;\r\n\t\t},\r\n\t};\r\n\r\n\ttypes = {\r\n\t\tget: (name: string): Effect => {\r\n\t\t\tconst id = toID(name) as ID;\r\n\t\t\tname = id.substr(0, 1).toUpperCase() + id.substr(1);\r\n\r\n\t\t\t// if (this.cache.Types.hasOwnProperty(id)) return this.cache.Types[id];\r\n\r\n\t\t\tlet data = {...Dex.types.get(name)};\r\n\r\n\t\t\tfor (let i = 7; i >= this.gen; i--) {\r\n\t\t\t\tconst table = window.BattleTeambuilderTable['gen' + i];\r\n\t\t\t\tif (id in table.removeType) {\r\n\t\t\t\t\tdata.exists = false;\r\n\t\t\t\t\t// don't bother correcting its attributes given it doesn't exist\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (id in table.overrideTypeChart) {\r\n\t\t\t\t\tdata = {...data, ...table.overrideTypeChart[id]};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.cache.Types[id] = data;\r\n\t\t\treturn data;\r\n\t\t},\r\n\t};\r\n\r\n\tgetPokeballs() {\r\n\t\tif (this.pokeballs) return this.pokeballs;\r\n\t\tthis.pokeballs = [];\r\n\t\tif (!window.BattleItems) window.BattleItems = {};\r\n\t\tfor (const data of Object.values(window.BattleItems) as AnyObject[]) {\r\n\t\t\tif (data.gen && data.gen > this.gen) continue;\r\n\t\t\tif (!data.isPokeball) continue;\r\n\t\t\tthis.pokeballs.push(data.name);\r\n\t\t}\r\n\t\treturn this.pokeballs;\r\n\t}\r\n}\r\n\r\nif (typeof require === 'function') {\r\n\t// in Node\r\n\t(global as any).Dex = Dex;\r\n\t(global as any).toID = toID;\r\n}\r\n"],"mappings":"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"}