{"version":3,"file":"battle.js","names":["Pokemon","data","side","name","speciesForme","ident","details","searchid","slot","fainted","hp","maxhp","level","gender","shiny","hpcolor","moves","ability","baseAbility","item","itemEffect","prevItem","prevItemEffect","terastallized","teraType","boosts","status","statusStage","volatiles","turnstatuses","movestatuses","lastMove","moveTrack","statusData","sleepTurns","toxicTurns","timesAttacked","sprite","battle","scene","addPokemonSprite","_proto","prototype","isActive","active","includes","getHPColor","ratio","getHPColorClass","getPixelRange","pixels","color","epsilon","getFormattedRange","range","precision","separator","percentage","Math","abs","floor","toFixed","lower","upper","ceil","getDamageRange","damage","length","undefined","oldrange","newrange","r","healthParse","hpstring","parsedamage","heal","parenIndex","lastIndexOf","parseFloat","isNaN","ret","percent","round","substr","oldhp","oldmaxhp","oldwidth","hpWidth","oldcolor","parseHealth","oldnum","delta","deltawidth","checkDetails","indexOf","replace","getIdent","slots","removeVolatile","volatile","removeEffect","hasVolatile","addVolatile","_len","arguments","args","Array","_key","concat","addEffect","removeTurnstatus","hasTurnstatus","addTurnstatus","toID","clearTurnstatuses","id","updateStatbar","removeMovestatus","hasMovestatus","addMovestatus","clearMovestatuses","clearVolatiles","clearEffects","rememberMove","moveName","pp","recursionSource","Dex","get","charAt","transform","_i2","_this$moveTrack2","entry","push","rememberAbility","isNotBase","abilities","getBoost","boostStat","boostStatTable","atk","def","spa","spd","spe","accuracy","evasion","spc","isRBY","gen","tier","goodBoostTable","badBoostTable","getWeightKg","serverPokemon","_this$volatiles$autot","autotomizeFactor","autotomize","max","getSpecies","weightkg","getBoostType","clearVolatile","i","splice","copyVolatileFrom","pokemon","copySource","volatilesToRemove","_i4","_Dex$statNamesExceptH2","statNamesExceptHP","statName","_i6","removeTransform","copyTypesFrom","preterastallized","_pokemon$getTypes","getTypes","types","addedType","join","typechange","split","filter","typeName","typeadd","isGrounded","hasPseudoWeather","effectiveAbility","getTypeList","dex","ngasActive","isPermanent","_this$getTypes","getSpeciesForme","formechange","species","getBaseSpecies","reset","maxWidth","getHPText","destroy","Side","n","sideid","isFar","foe","ally","avatar","rating","totalPokemon","x","y","z","missedPokemon","wisher","lastPokemon","sideConditions","faintCounter","_proto2","rollTrainerSprites","sprites","random","behindx","offset","behindy","leftof","behind","clearPokemon","_i8","_this$pokemon2","updateSprites","updateSpritesForSide","setAvatar","setName","addSideCondition","effect","persist","condition","removeSideCondition","addPokemon","replaceSlot","oldItem","parseDetails","poke","speciesClause","existingTable","toRemove","poke1i","poke1","poke2i","poke2","illusionFound","_i10","_this$pokemon4","curPoke","_i12","_this$pokemon6","updateSidebar","switchIn","kwArgs","getEffect","from","animSummon","dragIn","oldpokemon","animDragOut","animDragIn","Object","assign","animUnsummon","switchOut","log","swapTo","target","oslot","swapWith","nslot","faint","animFaint","Battle","_this","options","sidesSwitched","stepQueue","preemptStepQueue","waitForAnimations","currentStep","seeking","activeMoveIsSpread","subscription","mute","messageFadeTime","messageShownTime","turnsSinceMoved","turn","atQueueEnd","started","ended","isReplay","usesUpkeep","weather","pseudoWeather","weatherTimeLeft","weatherMinTimeLeft","mySide","nearSide","farSide","p1","p2","p3","p4","pokemonControlled","sides","myPokemon","myAllyPokemon","mod","teamPreviewCount","gameType","rated","rules","isBlitz","endLastTurnPending","totalTimeLeft","graceTimeLeft","kickingInactive","roomid","hardcoreMode","ignoreNicks","prefs","ignoreOpponent","ignoreSpects","debug","joinButtons","autoresize","paused","onResize","width","$","window","_this$scene$$frame","_this$scene$$frame2","scale","$frame","css","_this$scene$$frame3","$logFrame","BattleScene","BattleSceneStub","Error","format","slice","ModConfig","formatid","formats","resetStep","addEventListener","_proto3","subscribe","listener","removePseudoWeather","updateWeather","addPseudoWeather","minTimeLeft","timeLeft","_i14","_this$pseudoWeather2","_ref","pseudoWeatherName","getAllActive","pokemonList","_i16","_side$active2","_i18","_this$getAllActive2","abilityActive","_this2","a","_i20","_this$getAllActive4","_this$subscription","pause","call","_i22","_this$sides2","resetTurnsSinceMoved","nextStep","removeEventListener","preempt","add","resetToCurrentTurn","seekTurn","Infinity","switchSides","setPerspective","startsWith","start","winner","_this$subscription2","prematureEnd","_this$subscription3","endLastTurn","updateStatbars","setHardcoreMode","mode","updateSidebars","setTurn","turnNum","updateTurnCounters","incrementTurn","stopSeeking","_this$subscription4","updateAcceleration","changeWeather","weatherName","isUpkeep","upkeepWeather","isExtremeWeather","activateAbility","swapSideConditions","side1","side2","_i24","_ref2","_i26","_this$pseudoWeather4","pWeather","_i28","_this$sides4","cond","_i30","_ref4","useMove","move","fromeffect","callerMoveForPressure","isZ","items","zMoveFrom","BattleItems","zMoveType","type","foeTargets","moveTarget","pressureTarget","_i32","_this$getAllActive6","_i34","animateMove","spread","still","miss","notarget","prepare","anim","runPrepareAnim","usedMove","runMoveAnim","targets","_i36","_kwArgs$spread$split2","hitTarget","curTarget","getPokemon","cantUseMove","BattleStatusAnims","runStatusAnim","resultAnim","runOtherAnim","animReset","effectOrName","effectType","abilityActivateAnim","runMinor","nextArgs","nextKwargs","then","silent","closeMessagebar","simult","CONSUMED","ofpoke","of","itemPoke","category","damageinfo","hover","damageAnim","_i38","_poke$moveTrack2","trackedMove","runResidualAnim","_this$parsePokemonId","parsePokemonId","siden","healAnim","k","cpoke","formattedRange","diff","stat","amount","parseInt","stats","_i40","tmp","frompoke","_i42","volatilesToCopy","_i44","timeOffset","_i46","_this$getAllActive8","_window$Config","Config","server","afd","moveid","thaw","_i48","_poke22$side$pokemon2","updateStatbarIfExists","eat","weaken","fail","wait","newSpeciesForme","commaIndex","trim","megaStone","isCustomAnim","animTransform","tpoke","targetForme","endsWith","_i50","_tpoke$moveTrack2","resetStatbar","sanitizeName","typeAnim","already","block","interrupt","time","_i52","_poke36$side$pokemon2","Number","number","pokeability","targetability","ability2","foeActive","_i54","_poke36$side$foe$acti2","maybeTarget","broken","getSide","persistent","upkeep","maxTimeLeft","pwID","_i56","_this$getAllActive10","checkActive","beforeMove","afterMove","pokemonid","output","isTeamPreview","splitDetails","pop","_hpstring$split","_hp$split","curhp","colorchar","test","slotChart","b","c","d","e","f","getSwitchedPokemon","_this$parsePokemonId2","parsedPokemonid","rememberTeamPreviewPokemon","_this$parsePokemonId3","findCorrespondingPokemon","_this$parsePokemonId4","_i58","_this$sides$siden$pok2","faintedOnly","_this$parsePokemonId5","isInactive","_i60","_side$pokemon2","sidename","command","instantAdd","run","runMajor","resetSides","_i62","_this$sides6","updateGen","ruleName","_args$1$split","totalTime","graceTime","_window$app","hasIndex","userid","app","user","room","rooms","BattleTextParser","parseNameParts","toUserid","users","userCount","userList","updateUserCount","updateNoUsersOnline","remove","oldid","set","away","hideJoinButtons","_this$parsePokemonId6","teamPreview","_args$2$match","match","targetIndex","forGen","_this$subscription5","setFrameHTML","BattleLog","sanitizeHTML","setControlsHTML","str","shift","preemptCatchup","_BattleTextParser$par","parseBattleLine","maybeCloseMessagebar","nextLine","_BattleTextParser$par2","err","_this$subscription6","stack","_i64","line","updateBgm","_this$subscription7","play","_this$subscription8","resume","skipTurn","seekBy","deltaTurn","_this$seeking","forceReset","_this$subscription9","animationOn","animationOff","_this$subscription10","shouldStep","_this3","Date","now","startAnimations","animations","interruptionCount","_this$subscription11","finishAnimations","setTimeout","done","setQueue","queue","setMute","require","global"],"sources":["../src/battle.ts"],"sourcesContent":["/**\r\n * Pokemon Showdown Battle\r\n *\r\n * This is the main file for handling battle animations\r\n *\r\n * Licensing note: PS's client has complicated licensing:\r\n * - The client as a whole is AGPLv3\r\n * - The battle replay/animation engine (battle-*.ts) by itself is MIT\r\n *\r\n * Layout:\r\n *\r\n * - Battle\r\n *   - Side\r\n *     - Pokemon\r\n *   - BattleScene\r\n *     - BattleLog\r\n *       - BattleTextParser\r\n *\r\n * When a Battle receives a message, it splits the message into tokens\r\n * and parses what happens, updating its own state, and then telling\r\n * BattleScene to do any relevant animations. The tokens then get\r\n * passed directly into BattleLog. If the message is an in-battle\r\n * message, it'll be extracted by BattleTextParser, which adds it to\r\n * both the battle log itself, as well as the messagebar.\r\n *\r\n * @author Guangcong Luo <guangcongluo@gmail.com>\r\n * @license MIT\r\n */\r\n\r\nimport {BattleSceneStub} from './battle-scene-stub';\r\nimport {BattleLog} from './battle-log';\r\nimport {BattleScene, PokemonSprite, BattleStatusAnims} from './battle-animations';\r\n\r\n/** [id, element?, ...misc] */\r\nexport type EffectState = any[] & {0: ID};\r\n/** [name, minTimeLeft, maxTimeLeft] */\r\nexport type WeatherState = [string, number, number];\r\nexport type HPColor = 'r' | 'y' | 'g';\r\n\r\nexport class Pokemon implements PokemonDetails, PokemonHealth {\r\n\tname = '';\r\n\tspeciesForme = '';\r\n\r\n\t/**\r\n\t * A string representing information extractable from textual\r\n\t * messages: side, nickname.\r\n\t *\r\n\t * Will be the empty string between Team Preview and the first\r\n\t * switch-in.\r\n\t *\r\n\t * Examples: `p1: Unown` or `p2: Sparky`\r\n\t */\r\n\tident = '';\r\n\t/**\r\n\t * A string representing visible information not included in\r\n\t * ident: species, level, gender, shininess. Level is left off\r\n\t * if it's 100; gender is left off if it's genderless.\r\n\t *\r\n\t * Note: Can be partially filled out in Team Preview, because certain\r\n\t * forme information and shininess isn't visible there. In those\r\n\t * cases, details can change during the first switch-in, but will\r\n\t * otherwise not change over the course of a game.\r\n\t *\r\n\t * Examples: `Mimikyu, L50, F`, `Steelix, M, shiny`\r\n\t */\r\n\tdetails = '';\r\n\t/**\r\n\t * `` `${ident}|${details}` ``. Tracked for ease of searching.\r\n\t *\r\n\t * As with ident, blank before the first switch-in, and will only\r\n\t * change during the first switch-in.\r\n\t */\r\n\tsearchid = '';\r\n\r\n\tside: Side;\r\n\tslot = 0;\r\n\r\n\tfainted = false;\r\n\thp = 0;\r\n\tmaxhp = 1000;\r\n\tlevel = 100;\r\n\tgender: GenderName = 'N';\r\n\tshiny = false;\r\n\r\n\thpcolor: HPColor = 'g';\r\n\tmoves: string[] = [];\r\n\tability = '';\r\n\tbaseAbility = '';\r\n\titem = '';\r\n\titemEffect = '';\r\n\tprevItem = '';\r\n\tprevItemEffect = '';\r\n\tterastallized: string | '' = '';\r\n\tteraType = '';\r\n\r\n\tboosts: {[stat: string]: number} = {};\r\n\tstatus: StatusName | 'tox' | '' | '???' = '';\r\n\tstatusStage = 0;\r\n\tvolatiles: {[effectid: string]: EffectState} = {};\r\n\tturnstatuses: {[effectid: string]: EffectState} = {};\r\n\tmovestatuses: {[effectid: string]: EffectState} = {};\r\n\tlastMove = '';\r\n\r\n\t/** [[moveName, ppUsed]] */\r\n\tmoveTrack: [string, number][] = [];\r\n\tstatusData = {sleepTurns: 0, toxicTurns: 0};\r\n\ttimesAttacked = 0;\r\n\r\n\tsprite: PokemonSprite;\r\n\r\n\tconstructor(data: PokemonDetails, side: Side) {\r\n\t\tthis.side = side;\r\n\t\tthis.speciesForme = data.speciesForme;\r\n\r\n\t\tthis.details = data.details;\r\n\t\tthis.name = data.name;\r\n\t\tthis.level = data.level;\r\n\t\tthis.shiny = data.shiny;\r\n\t\tthis.gender = data.gender || 'N';\r\n\t\tthis.ident = data.ident;\r\n\t\tthis.terastallized = data.terastallized || '';\r\n\t\tthis.searchid = data.searchid;\r\n\r\n\t\tthis.sprite = side.battle.scene.addPokemonSprite(this);\r\n\t}\r\n\r\n\tisActive() {\r\n\t\treturn this.side.active.includes(this);\r\n\t}\r\n\r\n\t/** @deprecated */\r\n\tprivate getHPColor(): HPColor {\r\n\t\tif (this.hpcolor) return this.hpcolor;\r\n\t\tlet ratio = this.hp / this.maxhp;\r\n\t\tif (ratio > 0.5) return 'g';\r\n\t\tif (ratio > 0.2) return 'y';\r\n\t\treturn 'r';\r\n\t}\r\n\t/** @deprecated */\r\n\tprivate getHPColorClass() {\r\n\t\tswitch (this.getHPColor()) {\r\n\t\tcase 'y': return 'hpbar hpbar-yellow';\r\n\t\tcase 'r': return 'hpbar hpbar-red';\r\n\t\t}\r\n\t\treturn 'hpbar';\r\n\t}\r\n\tstatic getPixelRange(pixels: number, color: HPColor | ''): [number, number] {\r\n\t\tlet epsilon = 0.5 / 714;\r\n\r\n\t\tif (pixels === 0) return [0, 0];\r\n\t\tif (pixels === 1) return [0 + epsilon, 2 / 48 - epsilon];\r\n\t\tif (pixels === 9) {\r\n\t\t\tif (color === 'y') { // ratio is > 0.2\r\n\t\t\t\treturn [0.2 + epsilon, 10 / 48 - epsilon];\r\n\t\t\t} else { // ratio is <= 0.2\r\n\t\t\t\treturn [9 / 48, 0.2];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (pixels === 24) {\r\n\t\t\tif (color === 'g') { // ratio is > 0.5\r\n\t\t\t\treturn [0.5 + epsilon, 25 / 48 - epsilon];\r\n\t\t\t} else { // ratio is exactly 0.5\r\n\t\t\t\treturn [0.5, 0.5];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (pixels === 48) return [1, 1];\r\n\r\n\t\treturn [pixels / 48, (pixels + 1) / 48 - epsilon];\r\n\t}\r\n\tstatic getFormattedRange(range: [number, number], precision: number, separator: string) {\r\n\t\tif (range[0] === range[1]) {\r\n\t\t\tlet percentage = Math.abs(range[0] * 100);\r\n\t\t\tif (Math.floor(percentage) === percentage) {\r\n\t\t\t\treturn percentage + '%';\r\n\t\t\t}\r\n\t\t\treturn percentage.toFixed(precision) + '%';\r\n\t\t}\r\n\t\tlet lower;\r\n\t\tlet upper;\r\n\t\tif (precision === 0) {\r\n\t\t\tlower = Math.floor(range[0] * 100);\r\n\t\t\tupper = Math.ceil(range[1] * 100);\r\n\t\t} else {\r\n\t\t\tlower = (range[0] * 100).toFixed(precision);\r\n\t\t\tupper = (range[1] * 100).toFixed(precision);\r\n\t\t}\r\n\t\treturn '' + lower + separator + upper + '%';\r\n\t}\r\n\t// Returns [min, max] damage dealt as a proportion of total HP from 0 to 1\r\n\tgetDamageRange(damage: any): [number, number] {\r\n\t\tif (damage[1] !== 48) {\r\n\t\t\tlet ratio = damage[0] / damage[1];\r\n\t\t\treturn [ratio, ratio];\r\n\t\t} else if (damage.length === undefined) {\r\n\t\t\t// wrong pixel damage.\r\n\t\t\t// this case exists for backward compatibility only.\r\n\t\t\treturn [damage[2] / 100, damage[2] / 100];\r\n\t\t}\r\n\t\t// pixel damage\r\n\t\tlet oldrange = Pokemon.getPixelRange(damage[3], damage[4]);\r\n\t\tlet newrange = Pokemon.getPixelRange(damage[3] + damage[0], this.hpcolor);\r\n\t\tif (damage[0] === 0) {\r\n\t\t\t// no change in displayed pixel width\r\n\t\t\treturn [0, newrange[1] - newrange[0]];\r\n\t\t}\r\n\t\tif (oldrange[0] < newrange[0]) { // swap order\r\n\t\t\tlet r = oldrange;\r\n\t\t\toldrange = newrange;\r\n\t\t\tnewrange = r;\r\n\t\t}\r\n\t\treturn [oldrange[0] - newrange[1], oldrange[1] - newrange[0]];\r\n\t}\r\n\thealthParse(hpstring: string, parsedamage?: boolean, heal?: boolean):\r\n\t\t[number, number, number] | [number, number, number, number, HPColor] | null {\r\n\t\t// returns [delta, denominator, percent(, oldnum, oldcolor)] or null\r\n\t\tif (!hpstring || !hpstring.length) return null;\r\n\t\tlet parenIndex = hpstring.lastIndexOf('(');\r\n\t\tif (parenIndex >= 0) {\r\n\t\t\t// old style damage and health reporting\r\n\t\t\tif (parsedamage) {\r\n\t\t\t\tlet damage = parseFloat(hpstring);\r\n\t\t\t\t// unusual check preseved for backward compatbility\r\n\t\t\t\tif (isNaN(damage)) damage = 50;\r\n\t\t\t\tif (heal) {\r\n\t\t\t\t\tthis.hp += this.maxhp * damage / 100;\r\n\t\t\t\t\tif (this.hp > this.maxhp) this.hp = this.maxhp;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.hp -= this.maxhp * damage / 100;\r\n\t\t\t\t}\r\n\t\t\t\t// parse the absolute health information\r\n\t\t\t\tlet ret = this.healthParse(hpstring);\r\n\t\t\t\tif (ret && (ret[1] === 100)) {\r\n\t\t\t\t\t// support for old replays with nearest-100th damage and health\r\n\t\t\t\t\treturn [damage, 100, damage];\r\n\t\t\t\t}\r\n\t\t\t\t// complicated expressions preserved for backward compatibility\r\n\t\t\t\tlet percent = Math.round(Math.ceil(damage * 48 / 100) / 48 * 100);\r\n\t\t\t\tlet pixels = Math.ceil(damage * 48 / 100);\r\n\t\t\t\treturn [pixels, 48, percent];\r\n\t\t\t}\r\n\t\t\tif (hpstring.substr(hpstring.length - 1) !== ')') {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\thpstring = hpstring.substr(parenIndex + 1, hpstring.length - parenIndex - 2);\r\n\t\t}\r\n\r\n\t\tlet oldhp = this.fainted ? 0 : (this.hp || 1);\r\n\t\tlet oldmaxhp = this.maxhp;\r\n\t\tlet oldwidth = this.hpWidth(100);\r\n\t\tlet oldcolor = this.hpcolor;\r\n\r\n\t\tthis.side.battle.parseHealth(hpstring, this);\r\n\t\tif (oldmaxhp === 0) { // max hp not known before parsing this message\r\n\t\t\toldmaxhp = oldhp = this.maxhp;\r\n\t\t}\r\n\r\n\t\tlet oldnum = oldhp ? (Math.floor(this.maxhp * oldhp / oldmaxhp) || 1) : 0;\r\n\t\tlet delta = this.hp - oldnum;\r\n\t\tlet deltawidth = this.hpWidth(100) - oldwidth;\r\n\t\treturn [delta, this.maxhp, deltawidth, oldnum, oldcolor];\r\n\t}\r\n\tcheckDetails(details?: string) {\r\n\t\tif (!details) return false;\r\n\t\tif (details === this.details) return true;\r\n\t\tif (this.searchid) return false;\r\n\t\tif (details.indexOf(', shiny') >= 0) {\r\n\t\t\tif (this.checkDetails(details.replace(', shiny', ''))) return true;\r\n\t\t}\r\n\t\t// the actual forme was hidden on Team Preview\r\n\t\tdetails = details.replace(/(-[A-Za-z0-9-]+)?(, |$)/, '-*$2');\r\n\t\treturn (details === this.details);\r\n\t}\r\n\tgetIdent() {\r\n\t\tlet slots = ['a', 'b', 'c', 'd', 'e', 'f'];\r\n\t\treturn this.ident.substr(0, 2) + slots[this.slot] + this.ident.substr(2);\r\n\t}\r\n\tremoveVolatile(volatile: ID) {\r\n\t\tthis.side.battle.scene.removeEffect(this, volatile);\r\n\t\tif (!this.hasVolatile(volatile)) return;\r\n\t\tdelete this.volatiles[volatile];\r\n\t}\r\n\taddVolatile(volatile: ID, ...args: any[]) {\r\n\t\tif (this.hasVolatile(volatile) && !args.length) return;\r\n\t\tthis.volatiles[volatile] = [volatile, ...args] as EffectState;\r\n\t\tthis.side.battle.scene.addEffect(this, volatile);\r\n\t}\r\n\thasVolatile(volatile: ID) {\r\n\t\treturn !!this.volatiles[volatile];\r\n\t}\r\n\tremoveTurnstatus(volatile: ID) {\r\n\t\tthis.side.battle.scene.removeEffect(this, volatile);\r\n\t\tif (!this.hasTurnstatus(volatile)) return;\r\n\t\tdelete this.turnstatuses[volatile];\r\n\t}\r\n\taddTurnstatus(volatile: ID) {\r\n\t\tvolatile = toID(volatile);\r\n\t\tthis.side.battle.scene.addEffect(this, volatile);\r\n\t\tif (this.hasTurnstatus(volatile)) return;\r\n\t\tthis.turnstatuses[volatile] = [volatile];\r\n\t}\r\n\thasTurnstatus(volatile: ID) {\r\n\t\treturn !!this.turnstatuses[volatile];\r\n\t}\r\n\tclearTurnstatuses() {\r\n\t\tfor (let id in this.turnstatuses) {\r\n\t\t\tthis.removeTurnstatus(id as ID);\r\n\t\t}\r\n\t\tthis.turnstatuses = {};\r\n\t\tthis.side.battle.scene.updateStatbar(this);\r\n\t}\r\n\tremoveMovestatus(volatile: ID) {\r\n\t\tthis.side.battle.scene.removeEffect(this, volatile);\r\n\t\tif (!this.hasMovestatus(volatile)) return;\r\n\t\tdelete this.movestatuses[volatile];\r\n\t}\r\n\taddMovestatus(volatile: ID) {\r\n\t\tvolatile = toID(volatile);\r\n\t\tif (this.hasMovestatus(volatile)) return;\r\n\t\tthis.movestatuses[volatile] = [volatile];\r\n\t\tthis.side.battle.scene.addEffect(this, volatile);\r\n\t}\r\n\thasMovestatus(volatile: ID) {\r\n\t\treturn !!this.movestatuses[volatile];\r\n\t}\r\n\tclearMovestatuses() {\r\n\t\tfor (let id in this.movestatuses) {\r\n\t\t\tthis.removeMovestatus(id as ID);\r\n\t\t}\r\n\t\tthis.movestatuses = {};\r\n\t}\r\n\tclearVolatiles() {\r\n\t\tthis.volatiles = {};\r\n\t\tthis.clearTurnstatuses();\r\n\t\tthis.clearMovestatuses();\r\n\t\tthis.side.battle.scene.clearEffects(this);\r\n\t}\r\n\trememberMove(moveName: string, pp = 1, recursionSource?: string) {\r\n\t\tif (recursionSource === this.ident) return;\r\n\t\tmoveName = Dex.moves.get(moveName).name;\r\n\t\tif (moveName.charAt(0) === '*') return;\r\n\t\tif (moveName === 'Struggle') return;\r\n\t\tif (this.volatiles.transform) {\r\n\t\t\t// make sure there is no infinite recursion if both Pokemon are transformed into each other\r\n\t\t\tif (!recursionSource) recursionSource = this.ident;\r\n\t\t\tthis.volatiles.transform[1].rememberMove(moveName, 0, recursionSource);\r\n\t\t\tmoveName = '*' + moveName;\r\n\t\t}\r\n\t\tfor (const entry of this.moveTrack) {\r\n\t\t\tif (moveName === entry[0]) {\r\n\t\t\t\tentry[1] += pp;\r\n\t\t\t\tif (entry[1] < 0) entry[1] = 0;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.moveTrack.push([moveName, pp]);\r\n\t}\r\n\trememberAbility(ability: string, isNotBase?: boolean) {\r\n\t\tability = Dex.abilities.get(ability).name;\r\n\t\tthis.ability = ability;\r\n\t\tif (!this.baseAbility && !isNotBase) {\r\n\t\t\tthis.baseAbility = ability;\r\n\t\t}\r\n\t}\r\n\tgetBoost(boostStat: BoostStatName) {\r\n\t\tlet boostStatTable = {\r\n\t\t\tatk: 'Atk',\r\n\t\t\tdef: 'Def',\r\n\t\t\tspa: 'SpA',\r\n\t\t\tspd: 'SpD',\r\n\t\t\tspe: 'Spe',\r\n\t\t\taccuracy: 'Accuracy',\r\n\t\t\tevasion: 'Evasion',\r\n\t\t\tspc: 'Spc',\r\n\t\t};\r\n\t\tif (!this.boosts[boostStat]) {\r\n\t\t\treturn '1&times;&nbsp;' + boostStatTable[boostStat];\r\n\t\t}\r\n\t\tif (this.boosts[boostStat] > 6) this.boosts[boostStat] = 6;\r\n\t\tif (this.boosts[boostStat] < -6) this.boosts[boostStat] = -6;\r\n\t\tconst isRBY = this.side.battle.gen <= 1 && !this.side.battle.tier.includes('Stadium');\r\n\t\tif (!isRBY && (boostStat === 'accuracy' || boostStat === 'evasion')) {\r\n\t\t\tif (this.boosts[boostStat] > 0) {\r\n\t\t\t\tlet goodBoostTable = [\r\n\t\t\t\t\t'1&times;', '1.33&times;', '1.67&times;', '2&times;', '2.33&times;', '2.67&times;', '3&times;',\r\n\t\t\t\t];\r\n\t\t\t\t// let goodBoostTable = ['Normal', '+1', '+2', '+3', '+4', '+5', '+6'];\r\n\t\t\t\treturn '' + goodBoostTable[this.boosts[boostStat]] + '&nbsp;' + boostStatTable[boostStat];\r\n\t\t\t}\r\n\t\t\tlet badBoostTable = [\r\n\t\t\t\t'1&times;', '0.75&times;', '0.6&times;', '0.5&times;', '0.43&times;', '0.38&times;', '0.33&times;',\r\n\t\t\t];\r\n\t\t\t// let badBoostTable = ['Normal', '&minus;1', '&minus;2', '&minus;3', '&minus;4', '&minus;5', '&minus;6'];\r\n\t\t\treturn '' + badBoostTable[-this.boosts[boostStat]] + '&nbsp;' + boostStatTable[boostStat];\r\n\t\t}\r\n\t\tif (this.boosts[boostStat] > 0) {\r\n\t\t\tlet goodBoostTable = [\r\n\t\t\t\t'1&times;', '1.5&times;', '2&times;', '2.5&times;', '3&times;', '3.5&times;', '4&times;',\r\n\t\t\t];\r\n\t\t\t// let goodBoostTable = ['Normal', '+1', '+2', '+3', '+4', '+5', '+6'];\r\n\t\t\treturn '' + goodBoostTable[this.boosts[boostStat]] + '&nbsp;' + boostStatTable[boostStat];\r\n\t\t}\r\n\t\tlet badBoostTable = [\r\n\t\t\t'1&times;', '0.67&times;', '0.5&times;', '0.4&times;', '0.33&times;', '0.29&times;', '0.25&times;',\r\n\t\t];\r\n\t\t// let badBoostTable = ['Normal', '&minus;1', '&minus;2', '&minus;3', '&minus;4', '&minus;5', '&minus;6'];\r\n\t\treturn '' + badBoostTable[-this.boosts[boostStat]] + '&nbsp;' + boostStatTable[boostStat];\r\n\t}\r\n\tgetWeightKg(serverPokemon?: ServerPokemon) {\r\n\t\tlet autotomizeFactor = this.volatiles.autotomize?.[1] * 100 || 0;\r\n\t\treturn Math.max(this.getSpecies(serverPokemon).weightkg - autotomizeFactor, 0.1);\r\n\t}\r\n\tgetBoostType(boostStat: BoostStatName) {\r\n\t\tif (!this.boosts[boostStat]) return 'neutral';\r\n\t\tif (this.boosts[boostStat] > 0) return 'good';\r\n\t\treturn 'bad';\r\n\t}\r\n\tclearVolatile() {\r\n\t\tthis.ability = this.baseAbility;\r\n\t\tthis.boosts = {};\r\n\t\tthis.clearVolatiles();\r\n\t\tfor (let i = 0; i < this.moveTrack.length; i++) {\r\n\t\t\tif (this.moveTrack[i][0].charAt(0) === '*') {\r\n\t\t\t\tthis.moveTrack.splice(i, 1);\r\n\t\t\t\ti--;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// this.lastMove = '';\r\n\t\tthis.statusStage = 0;\r\n\t\tthis.statusData.toxicTurns = 0;\r\n\t\tif (this.side.battle.gen === 5) this.statusData.sleepTurns = 0;\r\n\t}\r\n\t/**\r\n\t * copyAll = false means Baton Pass,\r\n\t * copyAll = true means Illusion breaking\r\n\t * copyAll = 'shedtail' means Shed Tail\r\n\t */\r\n\tcopyVolatileFrom(pokemon: Pokemon, copySource?: | 'shedtail' | boolean) {\r\n\t\tthis.boosts = pokemon.boosts;\r\n\t\tthis.volatiles = pokemon.volatiles;\r\n\t\t// this.lastMove = pokemon.lastMove; // I think\r\n\t\tif (!copySource) {\r\n\t\t\tconst volatilesToRemove = [\r\n\t\t\t\t'airballoon', 'attract', 'autotomize', 'disable', 'encore', 'foresight', 'gmaxchistrike', 'imprison', 'laserfocus', 'mimic', 'miracleeye', 'nightmare', 'saltcure', 'smackdown', 'stockpile1', 'stockpile2', 'stockpile3', 'syrupbomb', 'torment', 'typeadd', 'typechange', 'yawn',\r\n\t\t\t];\r\n\t\t\tfor (const statName of Dex.statNamesExceptHP) {\r\n\t\t\t\tvolatilesToRemove.push('protosynthesis' + statName);\r\n\t\t\t\tvolatilesToRemove.push('quarkdrive' + statName);\r\n\t\t\t}\r\n\t\t\tfor (const volatile of volatilesToRemove) {\r\n\t\t\t\tdelete this.volatiles[volatile];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (copySource === 'shedtail') {\r\n\t\t\tfor (let i in this.volatiles) {\r\n\t\t\t\tif (i === 'substitute') continue;\r\n\t\t\t\tdelete this.volatiles[i];\r\n\t\t\t}\r\n\t\t\tthis.boosts = {};\r\n\t\t}\r\n\t\tdelete this.volatiles['transform'];\r\n\t\tdelete this.volatiles['formechange'];\r\n\r\n\t\tpokemon.boosts = {};\r\n\t\tpokemon.volatiles = {};\r\n\t\tpokemon.side.battle.scene.removeTransform(pokemon);\r\n\t\tpokemon.statusStage = 0;\r\n\t}\r\n\tcopyTypesFrom(pokemon: Pokemon, preterastallized = false) {\r\n\t\tconst [types, addedType] = pokemon.getTypes(undefined, preterastallized);\r\n\t\tthis.addVolatile('typechange' as ID, types.join('/'));\r\n\t\tif (addedType) {\r\n\t\t\tthis.addVolatile('typeadd' as ID, addedType);\r\n\t\t} else {\r\n\t\t\tthis.removeVolatile('typeadd' as ID);\r\n\t\t}\r\n\t}\r\n\tgetTypes(serverPokemon?: ServerPokemon, preterastallized = false): [ReadonlyArray<TypeName>, TypeName | ''] {\r\n\t\tlet types: ReadonlyArray<TypeName>;\r\n\t\tif (this.terastallized && !preterastallized) {\r\n\t\t\ttypes = [this.terastallized as TypeName];\r\n\t\t} else if (this.volatiles.typechange) {\r\n\t\t\ttypes = this.volatiles.typechange[1].split('/');\r\n\t\t} else {\r\n\t\t\ttypes = this.getSpecies(serverPokemon).types;\r\n\t\t}\r\n\t\tif (this.hasTurnstatus('roost' as ID) && types.includes('Flying')) {\r\n\t\t\ttypes = types.filter(typeName => typeName !== 'Flying');\r\n\t\t\tif (!types.length) types = ['Normal'];\r\n\t\t}\r\n\t\tconst addedType = (this.volatiles.typeadd ? this.volatiles.typeadd[1] : '');\r\n\t\treturn [types, addedType];\r\n\t}\r\n\tisGrounded(serverPokemon?: ServerPokemon) {\r\n\t\tconst battle = this.side.battle;\r\n\t\tif (battle.hasPseudoWeather('Gravity')) {\r\n\t\t\treturn true;\r\n\t\t} else if (this.volatiles['ingrain'] && battle.gen >= 4) {\r\n\t\t\treturn true;\r\n\t\t} else if (this.volatiles['smackdown']) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tlet item = toID(serverPokemon ? serverPokemon.item : this.item);\r\n\t\tlet ability = toID(this.effectiveAbility(serverPokemon));\r\n\t\tif (battle.hasPseudoWeather('Magic Room') || this.volatiles['embargo'] || ability === 'klutz') {\r\n\t\t\titem = '' as ID;\r\n\t\t}\r\n\r\n\t\tif (item === 'ironball') {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (ability === 'levitate') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (this.volatiles['magnetrise'] || this.volatiles['telekinesis']) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (item === 'airballoon') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn !this.getTypeList(serverPokemon).includes('Flying');\r\n\t}\r\n\teffectiveAbility(serverPokemon?: ServerPokemon) {\r\n\t\tif (this.fainted || this.volatiles['gastroacid']) return '';\r\n\t\tconst ability = this.side.battle.dex.abilities.get(\r\n\t\t\tserverPokemon?.ability || this.ability || serverPokemon?.baseAbility || ''\r\n\t\t);\r\n\t\tif (this.side.battle.ngasActive() && !ability.isPermanent) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\treturn ability.name;\r\n\t}\r\n\tgetTypeList(serverPokemon?: ServerPokemon, preterastallized = false) {\r\n\t\tconst [types, addedType] = this.getTypes(serverPokemon, preterastallized);\r\n\t\treturn addedType ? types.concat(addedType) : types;\r\n\t}\r\n\tgetSpeciesForme(serverPokemon?: ServerPokemon): string {\r\n\t\treturn this.volatiles.formechange ? this.volatiles.formechange[1] :\r\n\t\t\t(serverPokemon ? serverPokemon.speciesForme : this.speciesForme);\r\n\t}\r\n\tgetSpecies(serverPokemon?: ServerPokemon) {\r\n\t\treturn this.side.battle.dex.species.get(this.getSpeciesForme(serverPokemon));\r\n\t}\r\n\tgetBaseSpecies() {\r\n\t\treturn this.side.battle.dex.species.get(this.speciesForme);\r\n\t}\r\n\treset() {\r\n\t\tthis.clearVolatile();\r\n\t\tthis.hp = this.maxhp;\r\n\t\tthis.fainted = false;\r\n\t\tthis.status = '';\r\n\t\tthis.moveTrack = [];\r\n\t\tthis.name = this.name || this.speciesForme;\r\n\t}\r\n\t// This function is used for two things:\r\n\t//   1) The percentage to display beside the HP bar.\r\n\t//   2) The width to draw an HP bar.\r\n\t//\r\n\t// This function is NOT used in the calculation of any other displayed\r\n\t// percentages or ranges, which have their own, more complex, formulae.\r\n\thpWidth(maxWidth: number) {\r\n\t\tif (this.fainted || !this.hp) return 0;\r\n\r\n\t\t// special case for low health...\r\n\t\tif (this.hp === 1 && this.maxhp > 45) return 1;\r\n\r\n\t\tif (this.maxhp === 48) {\r\n\t\t\t// Draw the health bar to the middle of the range.\r\n\t\t\t// This affects the width of the visual health bar *only*; it\r\n\t\t\t// does not affect the ranges displayed in any way.\r\n\t\t\tlet range = Pokemon.getPixelRange(this.hp, this.hpcolor);\r\n\t\t\tlet ratio = (range[0] + range[1]) / 2;\r\n\t\t\treturn Math.round(maxWidth * ratio) || 1;\r\n\t\t}\r\n\t\tlet percentage = Math.ceil(100 * this.hp / this.maxhp);\r\n\t\tif ((percentage === 100) && (this.hp < this.maxhp)) {\r\n\t\t\tpercentage = 99;\r\n\t\t}\r\n\t\treturn percentage * maxWidth / 100;\r\n\t}\r\n\tgetHPText(precision = 1) {\r\n\t\treturn Pokemon.getHPText(this, precision);\r\n\t}\r\n\tstatic getHPText(pokemon: PokemonHealth, precision = 1) {\r\n\t\tif (pokemon.maxhp === 100) return pokemon.hp + '%';\r\n\t\tif (pokemon.maxhp !== 48) return (100 * pokemon.hp / pokemon.maxhp).toFixed(precision) + '%';\r\n\t\tlet range = Pokemon.getPixelRange(pokemon.hp, pokemon.hpcolor);\r\n\t\treturn Pokemon.getFormattedRange(range, precision, '–');\r\n\t}\r\n\tdestroy() {\r\n\t\tif (this.sprite) this.sprite.destroy();\r\n\t\tthis.sprite = null!;\r\n\t\tthis.side = null!;\r\n\t}\r\n}\r\n\r\nexport class Side {\r\n\tbattle: Battle;\r\n\tname = '';\r\n\tid = '';\r\n\tsideid: SideID;\r\n\tn: number;\r\n\tisFar: boolean;\r\n\tfoe: Side = null!;\r\n\tally: Side | null = null;\r\n\tavatar: string = 'unknown';\r\n\trating: string = '';\r\n\ttotalPokemon = 6;\r\n\tx = 0;\r\n\ty = 0;\r\n\tz = 0;\r\n\tmissedPokemon: Pokemon = null!;\r\n\r\n\twisher: Pokemon | null = null;\r\n\r\n\tactive = [null] as (Pokemon | null)[];\r\n\tlastPokemon = null as Pokemon | null;\r\n\tpokemon = [] as Pokemon[];\r\n\r\n\t/** [effectName, levels, minDuration, maxDuration] */\r\n\tsideConditions: {[id: string]: [string, number, number, number]} = {};\r\n\tfaintCounter = 0;\r\n\r\n\tconstructor(battle: Battle, n: number) {\r\n\t\tthis.battle = battle;\r\n\t\tthis.n = n;\r\n\t\tthis.sideid = ['p1', 'p2', 'p3', 'p4'][n] as SideID;\r\n\t\tthis.isFar = !!(n % 2);\r\n\t}\r\n\r\n\trollTrainerSprites() {\r\n\t\tlet sprites = ['lucas', 'dawn', 'ethan', 'lyra', 'hilbert', 'hilda'];\r\n\t\tthis.avatar = sprites[Math.floor(Math.random() * sprites.length)];\r\n\t}\r\n\r\n\tbehindx(offset: number) {\r\n\t\treturn this.x + (!this.isFar ? -1 : 1) * offset;\r\n\t}\r\n\tbehindy(offset: number) {\r\n\t\treturn this.y + (!this.isFar ? 1 : -1) * offset;\r\n\t}\r\n\tleftof(offset: number) {\r\n\t\treturn (!this.isFar ? -1 : 1) * offset;\r\n\t}\r\n\tbehind(offset: number) {\r\n\t\treturn this.z + (!this.isFar ? -1 : 1) * offset;\r\n\t}\r\n\r\n\tclearPokemon() {\r\n\t\tfor (const pokemon of this.pokemon) pokemon.destroy();\r\n\t\tthis.pokemon = [];\r\n\t\tfor (let i = 0; i < this.active.length; i++) this.active[i] = null;\r\n\t\tthis.lastPokemon = null;\r\n\t}\r\n\treset() {\r\n\t\tthis.clearPokemon();\r\n\t\tthis.updateSprites();\r\n\t\tthis.sideConditions = {};\r\n\t\tthis.faintCounter = 0;\r\n\t}\r\n\tupdateSprites() {\r\n\t\tthis.z = (this.isFar ? 200 : 0);\r\n\t\tthis.battle.scene.updateSpritesForSide(this);\r\n\t}\r\n\tsetAvatar(avatar: string) {\r\n\t\tthis.avatar = avatar;\r\n\t}\r\n\tsetName(name: string, avatar?: string) {\r\n\t\tif (name) this.name = name;\r\n\t\tthis.id = toID(this.name);\r\n\t\tif (avatar) {\r\n\t\t\tthis.setAvatar(avatar);\r\n\t\t} else {\r\n\t\t\tthis.rollTrainerSprites();\r\n\t\t\tif (this.foe && this.avatar === this.foe.avatar) this.rollTrainerSprites();\r\n\t\t}\r\n\t}\r\n\taddSideCondition(effect: Effect, persist: boolean) {\r\n\t\tlet condition = effect.id;\r\n\t\tif (this.sideConditions[condition]) {\r\n\t\t\tif (condition === 'spikes' || condition === 'toxicspikes') {\r\n\t\t\t\tthis.sideConditions[condition][1]++;\r\n\t\t\t}\r\n\t\t\tthis.battle.scene.addSideCondition(this.n, condition);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Side conditions work as: [effectName, levels, minDuration, maxDuration]\r\n\t\tswitch (condition) {\r\n\t\tcase 'auroraveil':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, 8];\r\n\t\t\tbreak;\r\n\t\tcase 'reflect':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, this.battle.gen >= 4 ? 8 : 0];\r\n\t\t\tbreak;\r\n\t\tcase 'safeguard':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, persist ? 7 : 5, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'lightscreen':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, this.battle.gen >= 4 ? 8 : 0];\r\n\t\t\tbreak;\r\n\t\tcase 'mist':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'tailwind':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, this.battle.gen >= 5 ? persist ? 6 : 4 : persist ? 5 : 3, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'luckychant':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'stealthrock':\r\n\t\tcase 'spikes':\r\n\t\tcase 'toxicspikes':\r\n\t\tcase 'stickyweb':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 0, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'gmaxwildfire':\r\n\t\tcase 'gmaxvolcalith':\r\n\t\tcase 'gmaxvinelash':\r\n\t\tcase 'gmaxcannonade':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 4, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'grasspledge':\r\n\t\t\tthis.sideConditions[condition] = ['Swamp', 1, 4, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'waterpledge':\r\n\t\t\tthis.sideConditions[condition] = ['Rainbow', 1, 4, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'firepledge':\r\n\t\t\tthis.sideConditions[condition] = ['Sea of Fire', 1, 4, 0];\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 0, 0];\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.battle.scene.addSideCondition(this.n, condition);\r\n\t}\r\n\tremoveSideCondition(condition: string) {\r\n\t\tconst id = toID(condition);\r\n\t\tif (!this.sideConditions[id]) return;\r\n\t\tdelete this.sideConditions[id];\r\n\t\tthis.battle.scene.removeSideCondition(this.n, id);\r\n\t}\r\n\taddPokemon(name: string, ident: string, details: string, replaceSlot = -1) {\r\n\t\tconst oldItem = replaceSlot >= 0 ? this.pokemon[replaceSlot].item : undefined;\r\n\r\n\t\tconst data = this.battle.parseDetails(name, ident, details);\r\n\t\tconst poke = new Pokemon(data, this);\r\n\t\tif (oldItem) poke.item = oldItem;\r\n\r\n\t\tif (!poke.ability && poke.baseAbility) poke.ability = poke.baseAbility;\r\n\t\tpoke.reset();\r\n\r\n\t\tif (replaceSlot >= 0) {\r\n\t\t\tthis.pokemon[replaceSlot] = poke;\r\n\t\t} else {\r\n\t\t\tthis.pokemon.push(poke);\r\n\t\t}\r\n\t\tif (this.pokemon.length > this.totalPokemon || this.battle.speciesClause) {\r\n\t\t\t// check for Illusion\r\n\t\t\tlet existingTable: {[searchid: string]: number} = {};\r\n\t\t\tlet toRemove = -1;\r\n\t\t\tfor (let poke1i = 0; poke1i < this.pokemon.length; poke1i++) {\r\n\t\t\t\tlet poke1 = this.pokemon[poke1i];\r\n\t\t\t\tif (!poke1.searchid) continue;\r\n\t\t\t\tif (poke1.searchid in existingTable) {\r\n\t\t\t\t\tlet poke2i = existingTable[poke1.searchid];\r\n\t\t\t\t\tlet poke2 = this.pokemon[poke2i];\r\n\t\t\t\t\tif (poke === poke1) {\r\n\t\t\t\t\t\ttoRemove = poke2i;\r\n\t\t\t\t\t} else if (poke === poke2) {\r\n\t\t\t\t\t\ttoRemove = poke1i;\r\n\t\t\t\t\t} else if (this.active.indexOf(poke1) >= 0) {\r\n\t\t\t\t\t\ttoRemove = poke2i;\r\n\t\t\t\t\t} else if (this.active.indexOf(poke2) >= 0) {\r\n\t\t\t\t\t\ttoRemove = poke1i;\r\n\t\t\t\t\t} else if (poke1.fainted && !poke2.fainted) {\r\n\t\t\t\t\t\ttoRemove = poke2i;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttoRemove = poke1i;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\texistingTable[poke1.searchid] = poke1i;\r\n\t\t\t}\r\n\t\t\tif (toRemove >= 0) {\r\n\t\t\t\tif (this.pokemon[toRemove].fainted) {\r\n\t\t\t\t\t// A fainted Pokemon was actually a Zoroark\r\n\t\t\t\t\tlet illusionFound = null;\r\n\t\t\t\t\tfor (const curPoke of this.pokemon) {\r\n\t\t\t\t\t\tif (curPoke === poke) continue;\r\n\t\t\t\t\t\tif (curPoke.fainted) continue;\r\n\t\t\t\t\t\tif (this.active.indexOf(curPoke) >= 0) continue;\r\n\t\t\t\t\t\tif (curPoke.speciesForme === 'Zoroark' || curPoke.speciesForme === 'Zorua' || curPoke.ability === 'Illusion') {\r\n\t\t\t\t\t\t\tillusionFound = curPoke;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!illusionFound) {\r\n\t\t\t\t\t\t// This is Hackmons; we'll just guess a random unfainted Pokemon.\r\n\t\t\t\t\t\t// This will keep the fainted Pokemon count correct, and will\r\n\t\t\t\t\t\t// eventually become correct as incorrect guesses are switched in\r\n\t\t\t\t\t\t// and reguessed.\r\n\t\t\t\t\t\tfor (const curPoke of this.pokemon) {\r\n\t\t\t\t\t\t\tif (curPoke === poke) continue;\r\n\t\t\t\t\t\t\tif (curPoke.fainted) continue;\r\n\t\t\t\t\t\t\tif (this.active.indexOf(curPoke) >= 0) continue;\r\n\t\t\t\t\t\t\tillusionFound = curPoke;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (illusionFound) {\r\n\t\t\t\t\t\tillusionFound.fainted = true;\r\n\t\t\t\t\t\tillusionFound.hp = 0;\r\n\t\t\t\t\t\tillusionFound.status = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.pokemon.splice(toRemove, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.battle.scene.updateSidebar(this);\r\n\r\n\t\treturn poke;\r\n\t}\r\n\r\n\tswitchIn(pokemon: Pokemon, kwArgs: KWArgs, slot = pokemon.slot) {\r\n\t\tthis.active[slot] = pokemon;\r\n\t\tpokemon.slot = slot;\r\n\t\tpokemon.clearVolatile();\r\n\t\tpokemon.lastMove = '';\r\n\t\tthis.battle.lastMove = 'switch-in';\r\n\t\tconst effect = Dex.getEffect(kwArgs.from);\r\n\t\tif (['batonpass', 'zbatonpass', 'shedtail'].includes(effect.id)) {\r\n\t\t\tpokemon.copyVolatileFrom(this.lastPokemon!, effect.id === 'shedtail' ? 'shedtail' : false);\r\n\t\t}\r\n\r\n\t\tthis.battle.scene.animSummon(pokemon, slot);\r\n\t}\r\n\tdragIn(pokemon: Pokemon, slot = pokemon.slot) {\r\n\t\tlet oldpokemon = this.active[slot];\r\n\t\tif (oldpokemon === pokemon) return;\r\n\t\tthis.lastPokemon = oldpokemon;\r\n\t\tif (oldpokemon) {\r\n\t\t\tthis.battle.scene.animDragOut(oldpokemon);\r\n\t\t\toldpokemon.clearVolatile();\r\n\t\t}\r\n\t\tpokemon.clearVolatile();\r\n\t\tpokemon.lastMove = '';\r\n\t\tthis.battle.lastMove = 'switch-in';\r\n\t\tthis.active[slot] = pokemon;\r\n\t\tpokemon.slot = slot;\r\n\r\n\t\tthis.battle.scene.animDragIn(pokemon, slot);\r\n\t}\r\n\treplace(pokemon: Pokemon, slot = pokemon.slot) {\r\n\t\tlet oldpokemon = this.active[slot];\r\n\t\tif (pokemon === oldpokemon) return;\r\n\t\tthis.lastPokemon = oldpokemon;\r\n\t\tpokemon.clearVolatile();\r\n\t\tif (oldpokemon) {\r\n\t\t\tpokemon.lastMove = oldpokemon.lastMove;\r\n\t\t\tpokemon.hp = oldpokemon.hp;\r\n\t\t\tpokemon.maxhp = oldpokemon.maxhp;\r\n\t\t\tpokemon.hpcolor = oldpokemon.hpcolor;\r\n\t\t\tpokemon.status = oldpokemon.status;\r\n\t\t\tpokemon.copyVolatileFrom(oldpokemon, true);\r\n\t\t\tpokemon.statusData = {...oldpokemon.statusData};\r\n\t\t\tif (oldpokemon.terastallized) {\r\n\t\t\t\tpokemon.terastallized = oldpokemon.terastallized;\r\n\t\t\t\tpokemon.teraType = oldpokemon.terastallized;\r\n\t\t\t\toldpokemon.terastallized = '';\r\n\t\t\t\toldpokemon.teraType = '';\r\n\t\t\t}\r\n\t\t\t// we don't know anything about the illusioned pokemon except that it's not fainted\r\n\t\t\t// technically we also know its status but only at the end of the turn, not here\r\n\t\t\toldpokemon.fainted = false;\r\n\t\t\toldpokemon.hp = oldpokemon.maxhp;\r\n\t\t\toldpokemon.status = '???';\r\n\t\t}\r\n\t\tthis.active[slot] = pokemon;\r\n\t\tpokemon.slot = slot;\r\n\r\n\t\tif (oldpokemon) {\r\n\t\t\tthis.battle.scene.animUnsummon(oldpokemon, true);\r\n\t\t}\r\n\t\tthis.battle.scene.animSummon(pokemon, slot, true);\r\n\t}\r\n\tswitchOut(pokemon: Pokemon, kwArgs: KWArgs, slot = pokemon.slot) {\r\n\t\tconst effect = Dex.getEffect(kwArgs.from);\r\n\t\tif (!['batonpass', 'zbatonpass', 'shedtail'].includes(effect.id)) {\r\n\t\t\tpokemon.clearVolatile();\r\n\t\t} else {\r\n\t\t\tpokemon.removeVolatile('transform' as ID);\r\n\t\t\tpokemon.removeVolatile('formechange' as ID);\r\n\t\t}\r\n\t\tif (!['batonpass', 'zbatonpass', 'shedtail', 'teleport'].includes(effect.id)) {\r\n\t\t\tthis.battle.log(['switchout', pokemon.ident], {from: effect.id});\r\n\t\t}\r\n\t\tpokemon.statusData.toxicTurns = 0;\r\n\t\tif (this.battle.gen === 5) pokemon.statusData.sleepTurns = 0;\r\n\t\tthis.lastPokemon = pokemon;\r\n\t\tthis.active[slot] = null;\r\n\r\n\t\tthis.battle.scene.animUnsummon(pokemon);\r\n\t}\r\n\tswapTo(pokemon: Pokemon, slot: number) {\r\n\t\tif (pokemon.slot === slot) return;\r\n\t\tlet target = this.active[slot];\r\n\r\n\t\tlet oslot = pokemon.slot;\r\n\r\n\t\tpokemon.slot = slot;\r\n\t\tif (target) target.slot = oslot;\r\n\r\n\t\tthis.active[slot] = pokemon;\r\n\t\tthis.active[oslot] = target;\r\n\r\n\t\tthis.battle.scene.animUnsummon(pokemon, true);\r\n\t\tif (target) this.battle.scene.animUnsummon(target, true);\r\n\r\n\t\tthis.battle.scene.animSummon(pokemon, slot, true);\r\n\t\tif (target) this.battle.scene.animSummon(target, oslot, true);\r\n\t}\r\n\tswapWith(pokemon: Pokemon, target: Pokemon, kwArgs: KWArgs) {\r\n\t\t// method provided for backwards compatibility only\r\n\t\tif (pokemon === target) return;\r\n\r\n\t\tlet oslot = pokemon.slot;\r\n\t\tlet nslot = target.slot;\r\n\r\n\t\tpokemon.slot = nslot;\r\n\t\ttarget.slot = oslot;\r\n\t\tthis.active[nslot] = pokemon;\r\n\t\tthis.active[oslot] = target;\r\n\r\n\t\tthis.battle.scene.animUnsummon(pokemon, true);\r\n\t\tthis.battle.scene.animUnsummon(target, true);\r\n\r\n\t\tthis.battle.scene.animSummon(pokemon, nslot, true);\r\n\t\tthis.battle.scene.animSummon(target, oslot, true);\r\n\t}\r\n\tfaint(pokemon: Pokemon, slot = pokemon.slot) {\r\n\t\tpokemon.clearVolatile();\r\n\t\tthis.lastPokemon = pokemon;\r\n\t\tthis.active[slot] = null;\r\n\r\n\t\tpokemon.fainted = true;\r\n\t\tpokemon.hp = 0;\r\n\t\tpokemon.terastallized = '';\r\n\t\tpokemon.details = pokemon.details.replace(/, tera:[a-z]+/i, '');\r\n\t\tpokemon.searchid = pokemon.searchid.replace(/, tera:[a-z]+/i, '');\r\n\t\tif (pokemon.side.faintCounter < 100) pokemon.side.faintCounter++;\r\n\r\n\t\tthis.battle.scene.animFaint(pokemon);\r\n\t}\r\n\tdestroy() {\r\n\t\tthis.clearPokemon();\r\n\t\tthis.battle = null!;\r\n\t\tthis.foe = null!;\r\n\t}\r\n}\r\n\r\nexport interface PokemonDetails {\r\n\tdetails: string;\r\n\tname: string;\r\n\tspeciesForme: string;\r\n\tlevel: number;\r\n\tshiny: boolean;\r\n\tgender: GenderName | '';\r\n\tident: string;\r\n\tterastallized: string;\r\n\tsearchid: string;\r\n}\r\nexport interface PokemonHealth {\r\n\thp: number;\r\n\tmaxhp: number;\r\n\thpcolor: HPColor | '';\r\n\tstatus: StatusName | 'tox' | '' | '???';\r\n\tfainted?: boolean;\r\n}\r\nexport interface ServerPokemon extends PokemonDetails, PokemonHealth {\r\n\tident: string;\r\n\tdetails: string;\r\n\tcondition: string;\r\n\tactive: boolean;\r\n\t/** unboosted stats */\r\n\tstats: {\r\n\t\tatk: number,\r\n\t\tdef: number,\r\n\t\tspa: number,\r\n\t\tspd: number,\r\n\t\tspe: number,\r\n\t};\r\n\t/** currently an ID, will revise to name */\r\n\tmoves: string[];\r\n\t/** currently an ID, will revise to name */\r\n\tbaseAbility: string;\r\n\t/** currently an ID, will revise to name */\r\n\tability?: string;\r\n\t/** currently an ID, will revise to name */\r\n\titem: string;\r\n\t/** currently an ID, will revise to name */\r\n\tpokeball: string;\r\n\t/** false if the pokemon cannot gigantamax, otherwise a string containing the full name of its G-max move */\r\n\tgigantamax: string | false;\r\n\t/** always the Tera Type of the Pokemon, regardless of whether it is terastallized or not */\r\n\tteraType: string;\r\n\t/** falsy if the pokemon is not terastallized, otherwise it is the Tera Type of the Pokemon */\r\n\tterastallized: string;\r\n}\r\n\r\nexport class Battle {\r\n\tscene: BattleSceneStub;\r\n\r\n\tsidesSwitched = false;\r\n\r\n\tstepQueue: string[];\r\n\t/** See battle.instantAdd */\r\n\tpreemptStepQueue: string[] = [];\r\n\twaitForAnimations: true | false | 'simult' = true;\r\n\t/** the index of `stepQueue` currently being animated */\r\n\tcurrentStep = 0;\r\n\t/** null = not seeking, 0 = seek start, Infinity = seek end, otherwise: seek turn number */\r\n\tseeking: number | null = null;\r\n\r\n\tactiveMoveIsSpread: string | null = null;\r\n\r\n\tsubscription: ((state:\r\n\t\t'playing' | 'paused' | 'turn' | 'atqueueend' | 'callback' | 'ended' | 'error'\r\n\t) => void) | null;\r\n\r\n\tmute = false;\r\n\tmessageFadeTime = 300;\r\n\tmessageShownTime = 1;\r\n\t/** for tracking when to accelerate animations in long battles full of double switches */\r\n\tturnsSinceMoved = 0;\r\n\r\n\t/**\r\n\t * * `-1` = non-battle RoomGames, or hasn't hit Team Preview or `|start`\r\n\t * * `0` = after Team Preview or `|start` but before `|turn|1`\r\n\t */\r\n\tturn = -1;\r\n\t/**\r\n\t * Are we at the end of the queue and waiting for more input?\r\n\t *\r\n\t * In addition to at the end of a battle, this is also true if you're\r\n\t * playing/watching a battle live, and waiting for a player to make a move.\r\n\t */\r\n\tatQueueEnd = false;\r\n\t/**\r\n\t * Has the battle ever been played or fast-forwarded?\r\n\t *\r\n\t * This is not exactly `turn > 0` because if you start playing a replay,\r\n\t * then pause before turn 1, `turn` will still be 0, but playback should\r\n\t * be considered started (for the purposes of displaying \"Play\" vs \"Resume\")\r\n\t */\r\n\tstarted = false;\r\n\t/**\r\n\t * Has playback gotten to the point where a player has won or tied?\r\n\t * (Affects whether BGM is playing)\r\n\t */\r\n\tended = false;\r\n\tisReplay = false;\r\n\tusesUpkeep = false;\r\n\tweather = '' as ID;\r\n\tpseudoWeather = [] as WeatherState[];\r\n\tweatherTimeLeft = 0;\r\n\tweatherMinTimeLeft = 0;\r\n\t/**\r\n\t * The side from which perspective we're viewing. Should be identical to\r\n\t * `nearSide` except in multi battles, where `nearSide` is always the first\r\n\t * near side, and `mySide` is the active player.\r\n\t */\r\n\tmySide: Side = null!;\r\n\tnearSide: Side = null!;\r\n\tfarSide: Side = null!;\r\n\tp1: Side = null!;\r\n\tp2: Side = null!;\r\n\tp3?: Side = null!;\r\n\tp4?: Side = null!;\r\n\tpokemonControlled = 0;\r\n\tsides: Side[] = null!;\r\n\tmyPokemon: ServerPokemon[] | null = null;\r\n\tmyAllyPokemon: ServerPokemon[] | null = null;\r\n\tlastMove = '';\r\n\r\n\tmod = '' as ID;\r\n\tgen = 8;\r\n\tdex: ModdedDex = Dex;\r\n\tteamPreviewCount = 0;\r\n\tspeciesClause = false;\r\n\ttier = '';\r\n\tgameType: 'singles' | 'doubles' | 'triples' | 'multi' | 'freeforall' = 'singles';\r\n\trated: string | boolean = false;\r\n\trules: {[ruleName: string]: 1 | 0} = {};\r\n\tisBlitz = false;\r\n\tendLastTurnPending = false;\r\n\ttotalTimeLeft = 0;\r\n\tgraceTimeLeft = 0;\r\n\t/**\r\n\t * true: timer on, state unknown\r\n\t * false: timer off\r\n\t * number: seconds left this turn\r\n\t */\r\n\tkickingInactive: number | boolean = false;\r\n\r\n\t// options\r\n\tid = '';\r\n\t/** used to forward some information to the room in the old client */\r\n\troomid = '';\r\n\thardcoreMode = false;\r\n\tignoreNicks = !!Dex.prefs('ignorenicks');\r\n\tignoreOpponent = !!Dex.prefs('ignoreopp');\r\n\tignoreSpects = !!Dex.prefs('ignorespects');\r\n\tdebug: boolean;\r\n\tjoinButtons = false;\r\n\tautoresize: boolean;\r\n\r\n\t/**\r\n\t * The actual pause state. Will only be true if playback is actually\r\n\t * paused, not just waiting for the opponent to make a move.\r\n\t */\r\n\tpaused: boolean;\r\n\r\n\tconstructor(options: {\r\n\t\t$frame?: JQuery<HTMLElement>,\r\n\t\t$logFrame?: JQuery<HTMLElement>,\r\n\t\tid?: ID,\r\n\t\tlog?: string[] | string,\r\n\t\tpaused?: boolean,\r\n\t\tisReplay?: boolean,\r\n\t\tdebug?: boolean,\r\n\t\tsubscription?: Battle['subscription'],\r\n\t\t/** autoresize `$frame` for browsers below 640px width (mobile) */\r\n\t\tautoresize?: boolean,\r\n\t} = {}) {\r\n\t\tthis.id = options.id || '';\r\n\r\n\t\tif (options.$frame && options.$logFrame) {\r\n\t\t\tthis.scene = new BattleScene(this, options.$frame, options.$logFrame);\r\n\t\t} else if (!options.$frame && !options.$logFrame) {\r\n\t\t\tthis.scene = new BattleSceneStub();\r\n\t\t} else {\r\n\t\t\tthrow new Error(`You must specify $frame and $logFrame simultaneously`);\r\n\t\t}\r\n\r\n\t\tconst format = this.id.slice(this.id.indexOf('-') + 1, this.id.lastIndexOf('-'));\r\n\t\tfor (const mod in window.ModConfig) {\r\n\t\t\tfor (const formatid in window.ModConfig[mod].formats) {\r\n\t\t\t\tif (format === formatid) {\r\n\t\t\t\t\tthis.mod = mod as ID;\r\n\t\t\t\t\tthis.dex = Dex.mod(mod as ID);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.mod) break;\r\n\t\t}\r\n\t\tif (this.id.includes('digimon')) this.mod = 'digimon' as ID;\r\n\r\n\t\tthis.paused = !!options.paused;\r\n\t\tthis.started = !this.paused;\r\n\t\tthis.debug = !!options.debug;\r\n\t\tif (typeof options.log === 'string') options.log = options.log.split('\\n');\r\n\t\tthis.stepQueue = options.log || [];\r\n\t\tthis.subscription = options.subscription || null;\r\n\t\tthis.autoresize = !!options.autoresize;\r\n\r\n\t\tthis.p1 = new Side(this, 0);\r\n\t\tthis.p2 = new Side(this, 1);\r\n\t\tthis.sides = [this.p1, this.p2];\r\n\t\tthis.p2.foe = this.p1;\r\n\t\tthis.p1.foe = this.p2;\r\n\t\tthis.nearSide = this.mySide = this.p1;\r\n\t\tthis.farSide = this.p2;\r\n\r\n\t\tthis.resetStep();\r\n\t\tif (this.autoresize) {\r\n\t\t\twindow.addEventListener('resize', this.onResize);\r\n\t\t\tthis.onResize();\r\n\t\t}\r\n\t}\r\n\r\n\tonResize = () => {\r\n\t\tconst width = $(window).width()!;\r\n\t\tif (width < 950 || this.hardcoreMode) {\r\n\t\t\tthis.messageShownTime = 500;\r\n\t\t} else {\r\n\t\t\tthis.messageShownTime = 1;\r\n\t\t}\r\n\t\tif (width && width < 640) {\r\n\t\t\tconst scale = (width / 640);\r\n\t\t\tthis.scene.$frame?.css('transform', 'scale(' + scale + ')');\r\n\t\t\tthis.scene.$frame?.css('transform-origin', 'top left');\r\n\t\t\t// this.$foeHint.css('transform', 'scale(' + scale + ')');\r\n\t\t} else {\r\n\t\t\tthis.scene.$frame?.css('transform', 'none');\r\n\t\t\t// this.$foeHint.css('transform', 'none');\r\n\t\t}\r\n\t};\r\n\r\n\tsubscribe(listener: Battle['subscription']) {\r\n\t\tthis.subscription = listener;\r\n\t}\r\n\r\n\tremovePseudoWeather(weather: string) {\r\n\t\tfor (let i = 0; i < this.pseudoWeather.length; i++) {\r\n\t\t\tif (this.pseudoWeather[i][0] === weather) {\r\n\t\t\t\tthis.pseudoWeather.splice(i, 1);\r\n\t\t\t\tthis.scene.updateWeather();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\taddPseudoWeather(weather: string, minTimeLeft: number, timeLeft: number) {\r\n\t\tthis.pseudoWeather.push([weather, minTimeLeft, timeLeft]);\r\n\t\tthis.scene.updateWeather();\r\n\t}\r\n\thasPseudoWeather(weather: string) {\r\n\t\tfor (const [pseudoWeatherName] of this.pseudoWeather) {\r\n\t\t\tif (weather === pseudoWeatherName) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tgetAllActive() {\r\n\t\tconst pokemonList = [];\r\n\t\t// Sides 3 and 4 are synced with sides 1 and 2, so they don't need to be checked\r\n\t\tfor (let i = 0; i < 2; i++) {\r\n\t\t\tconst side = this.sides[i];\r\n\t\t\tfor (const active of side.active) {\r\n\t\t\t\tif (active && !active.fainted) {\r\n\t\t\t\t\tpokemonList.push(active);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn pokemonList;\r\n\t}\r\n\tngasActive() {\r\n\t\tfor (const active of this.getAllActive()) {\r\n\t\t\tif (active.ability === 'Neutralizing Gas' && !active.volatiles['gastroacid']) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tabilityActive(abilities: string | string[]) {\r\n\t\tif (typeof abilities === 'string') abilities = [abilities];\r\n\t\tif (this.ngasActive()) {\r\n\t\t\tabilities = abilities.filter(a => this.dex.abilities.get(a).isPermanent);\r\n\t\t\tif (!abilities.length) return false;\r\n\t\t}\r\n\t\tfor (const active of this.getAllActive()) {\r\n\t\t\tif (abilities.includes(active.ability) && !active.volatiles['gastroacid']) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\treset() {\r\n\t\tthis.paused = true;\r\n\t\tthis.scene.pause();\r\n\t\tthis.resetStep();\r\n\t\tthis.subscription?.('paused');\r\n\t}\r\n\tresetStep() {\r\n\t\t// battle state\r\n\t\tthis.turn = -1;\r\n\t\tthis.started = !this.paused;\r\n\t\tthis.ended = false;\r\n\t\tthis.atQueueEnd = false;\r\n\t\tthis.weather = '' as ID;\r\n\t\tthis.weatherTimeLeft = 0;\r\n\t\tthis.weatherMinTimeLeft = 0;\r\n\t\tthis.pseudoWeather = [];\r\n\t\tthis.lastMove = '';\r\n\r\n\t\tfor (const side of this.sides) {\r\n\t\t\tif (side) side.reset();\r\n\t\t}\r\n\t\tthis.myPokemon = null;\r\n\t\tthis.myAllyPokemon = null;\r\n\r\n\t\t// DOM state\r\n\t\tthis.scene.reset();\r\n\r\n\t\t// activity queue state\r\n\t\tthis.activeMoveIsSpread = null;\r\n\t\tthis.currentStep = 0;\r\n\t\tthis.resetTurnsSinceMoved();\r\n\t\tthis.nextStep();\r\n\t}\r\n\tdestroy() {\r\n\t\tif (this.autoresize) {\r\n\t\t\twindow.removeEventListener('resize', this.onResize);\r\n\t\t}\r\n\t\tthis.scene.destroy();\r\n\r\n\t\tfor (let i = 0; i < this.sides.length; i++) {\r\n\t\t\tif (this.sides[i]) this.sides[i].destroy();\r\n\t\t\tthis.sides[i] = null!;\r\n\t\t}\r\n\t\tthis.mySide = null!;\r\n\t\tthis.nearSide = null!;\r\n\t\tthis.farSide = null!;\r\n\t\tthis.p1 = null!;\r\n\t\tthis.p2 = null!;\r\n\t\tthis.p3 = null!;\r\n\t\tthis.p4 = null!;\r\n\t}\r\n\r\n\tlog(args: Args, kwArgs?: KWArgs, preempt?: boolean) {\r\n\t\tthis.scene.log.add(args, kwArgs, preempt);\r\n\t}\r\n\r\n\tresetToCurrentTurn() {\r\n\t\tthis.seekTurn(this.ended ? Infinity : this.turn, true);\r\n\t}\r\n\tswitchSides() {\r\n\t\tthis.setPerspective(this.sidesSwitched ? 'p1' : 'p2');\r\n\t}\r\n\tsetPerspective(sideid: SideID) {\r\n\t\tif (this.mySide.sideid === sideid) return;\r\n\t\tif (sideid.length !== 2 || !sideid.startsWith('p')) return;\r\n\t\tconst side = this[sideid];\r\n\t\tif (!side) return;\r\n\t\tthis.mySide = side;\r\n\r\n\t\tif ((side.n % 2) === this.p1.n) {\r\n\t\t\tthis.sidesSwitched = false;\r\n\t\t\tthis.nearSide = this.p1;\r\n\t\t\tthis.farSide = this.p2;\r\n\t\t} else {\r\n\t\t\tthis.sidesSwitched = true;\r\n\t\t\tthis.nearSide = this.p2;\r\n\t\t\tthis.farSide = this.p1;\r\n\t\t}\r\n\t\tthis.nearSide.isFar = false;\r\n\t\tthis.farSide.isFar = true;\r\n\t\tif (this.sides.length > 2) {\r\n\t\t\tthis.sides[this.nearSide.n + 2].isFar = false;\r\n\t\t\tthis.sides[this.farSide.n + 2].isFar = true;\r\n\t\t}\r\n\r\n\t\tthis.resetToCurrentTurn();\r\n\t}\r\n\r\n\t//\r\n\t// activities\r\n\t//\r\n\tstart() {\r\n\t\tthis.log(['start']);\r\n\t\tthis.resetTurnsSinceMoved();\r\n\t}\r\n\twinner(winner?: string) {\r\n\t\tthis.log(['win', winner || '']);\r\n\t\tthis.ended = true;\r\n\t\tthis.subscription?.('ended');\r\n\t}\r\n\tprematureEnd() {\r\n\t\tthis.log(['message', 'This replay ends here.']);\r\n\t\tthis.ended = true;\r\n\t\tthis.subscription?.('ended');\r\n\t}\r\n\tendLastTurn() {\r\n\t\tif (this.endLastTurnPending) {\r\n\t\t\tthis.endLastTurnPending = false;\r\n\t\t\tthis.scene.updateStatbars();\r\n\t\t}\r\n\t}\r\n\tsetHardcoreMode(mode: boolean) {\r\n\t\tthis.hardcoreMode = mode;\r\n\t\tthis.scene.updateSidebars();\r\n\t\tthis.scene.updateWeather(true);\r\n\t}\r\n\tsetTurn(turnNum: number) {\r\n\t\tif (turnNum === this.turn + 1) {\r\n\t\t\tthis.endLastTurnPending = true;\r\n\t\t}\r\n\t\tif (this.turn && !this.usesUpkeep) this.updateTurnCounters(); // for compatibility with old replays\r\n\t\tthis.turn = turnNum;\r\n\t\tthis.started = true;\r\n\r\n\t\tif (this.seeking === null) this.turnsSinceMoved++;\r\n\r\n\t\tthis.scene.incrementTurn();\r\n\r\n\t\tif (this.seeking !== null) {\r\n\t\t\tif (turnNum >= this.seeking) {\r\n\t\t\t\tthis.stopSeeking();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.subscription?.('turn');\r\n\t\t}\r\n\t}\r\n\tresetTurnsSinceMoved() {\r\n\t\tthis.turnsSinceMoved = 0;\r\n\t\tthis.scene.updateAcceleration();\r\n\t}\r\n\tchangeWeather(weatherName: string, poke?: Pokemon, isUpkeep?: boolean, ability?: Effect) {\r\n\t\tlet weather = toID(weatherName);\r\n\t\tif (!weather || weather === 'none') {\r\n\t\t\tweather = '' as ID;\r\n\t\t}\r\n\t\tif (isUpkeep) {\r\n\t\t\tif (this.weather && this.weatherTimeLeft) {\r\n\t\t\t\tthis.weatherTimeLeft--;\r\n\t\t\t\tif (this.weatherMinTimeLeft !== 0) this.weatherMinTimeLeft--;\r\n\t\t\t}\r\n\t\t\tif (this.seeking === null) {\r\n\t\t\t\tthis.scene.upkeepWeather();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (weather) {\r\n\t\t\tlet isExtremeWeather = (weather === 'deltastream' || weather === 'desolateland' || weather === 'primordialsea');\r\n\t\t\tif (poke) {\r\n\t\t\t\tif (ability) {\r\n\t\t\t\t\tthis.activateAbility(poke, ability.name);\r\n\t\t\t\t}\r\n\t\t\t\tthis.weatherTimeLeft = (this.gen <= 5 || isExtremeWeather) ? 0 : 8;\r\n\t\t\t\tthis.weatherMinTimeLeft = (this.gen <= 5 || isExtremeWeather) ? 0 : 5;\r\n\t\t\t} else if (isExtremeWeather) {\r\n\t\t\t\tthis.weatherTimeLeft = 0;\r\n\t\t\t\tthis.weatherMinTimeLeft = 0;\r\n\t\t\t} else {\r\n\t\t\t\tthis.weatherTimeLeft = (this.gen <= 3 ? 5 : 8);\r\n\t\t\t\tthis.weatherMinTimeLeft = (this.gen <= 3 ? 0 : 5);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.weather = weather;\r\n\t\tthis.scene.updateWeather();\r\n\t}\r\n\tswapSideConditions() {\r\n\t\tconst sideConditions = [\r\n\t\t\t'mist', 'lightscreen', 'reflect', 'spikes', 'safeguard', 'tailwind', 'toxicspikes', 'stealthrock', 'waterpledge', 'firepledge', 'grasspledge', 'stickyweb', 'auroraveil', 'gmaxsteelsurge', 'gmaxcannonade', 'gmaxvinelash', 'gmaxwildfire',\r\n\t\t];\r\n\t\tif (this.gameType === 'freeforall') {\r\n\t\t\t// TODO: Add FFA support\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tlet side1 = this.sides[0];\r\n\t\t\tlet side2 = this.sides[1];\r\n\t\t\tfor (const id of sideConditions) {\r\n\t\t\t\tif (side1.sideConditions[id] && side2.sideConditions[id]) {\r\n\t\t\t\t\t[side1.sideConditions[id], side2.sideConditions[id]] = [\r\n\t\t\t\t\t\tside2.sideConditions[id], side1.sideConditions[id],\r\n\t\t\t\t\t];\r\n\t\t\t\t\tthis.scene.addSideCondition(side1.n, id as ID);\r\n\t\t\t\t\tthis.scene.addSideCondition(side2.n, id as ID);\r\n\t\t\t\t} else if (side1.sideConditions[id] && !side2.sideConditions[id]) {\r\n\t\t\t\t\tside2.sideConditions[id] = side1.sideConditions[id];\r\n\t\t\t\t\tthis.scene.addSideCondition(side2.n, id as ID);\r\n\t\t\t\t\tside1.removeSideCondition(id);\r\n\t\t\t\t} else if (side2.sideConditions[id] && !side1.sideConditions[id]) {\r\n\t\t\t\t\tside1.sideConditions[id] = side2.sideConditions[id];\r\n\t\t\t\t\tthis.scene.addSideCondition(side1.n, id as ID);\r\n\t\t\t\t\tside2.removeSideCondition(id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tupdateTurnCounters() {\r\n\t\tfor (const pWeather of this.pseudoWeather) {\r\n\t\t\tif (pWeather[1]) pWeather[1]--;\r\n\t\t\tif (pWeather[2]) pWeather[2]--;\r\n\t\t}\r\n\t\tfor (const side of this.sides) {\r\n\t\t\tfor (const id in side.sideConditions) {\r\n\t\t\t\tlet cond = side.sideConditions[id];\r\n\t\t\t\tif (cond[2]) cond[2]--;\r\n\t\t\t\tif (cond[3]) cond[3]--;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (const poke of [...this.nearSide.active, ...this.farSide.active]) {\r\n\t\t\tif (poke) {\r\n\t\t\t\tif (poke.status === 'tox') poke.statusData.toxicTurns++;\r\n\t\t\t\tpoke.clearTurnstatuses();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.scene.updateWeather();\r\n\t}\r\n\tuseMove(pokemon: Pokemon, move: Move, target: Pokemon | null, kwArgs: KWArgs) {\r\n\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\tthis.activateAbility(pokemon, fromeffect);\r\n\t\tpokemon.clearMovestatuses();\r\n\t\tif (move.id === 'focuspunch') {\r\n\t\t\tpokemon.removeTurnstatus('focuspunch' as ID);\r\n\t\t}\r\n\t\tthis.scene.updateStatbar(pokemon);\r\n\t\tif (fromeffect.id === 'sleeptalk') {\r\n\t\t\tpokemon.rememberMove(move.name, 0);\r\n\t\t}\r\n\t\tlet callerMoveForPressure = null;\r\n\t\t// will not include effects that are conditions named after moves like Magic Coat and Snatch, which is good\r\n\t\tif (fromeffect.id && kwArgs.from.startsWith(\"move:\")) {\r\n\t\t\tcallerMoveForPressure = fromeffect as Move;\r\n\t\t}\r\n\t\tif (!fromeffect.id || callerMoveForPressure || fromeffect.id === 'pursuit') {\r\n\t\t\tlet moveName = move.name;\r\n\t\t\tif (!callerMoveForPressure) {\r\n\t\t\t\tif (move.isZ) {\r\n\t\t\t\t\tpokemon.item = move.isZ;\r\n\t\t\t\t\tlet item = Dex.items.get(move.isZ);\r\n\t\t\t\t\tif (item.zMoveFrom) moveName = item.zMoveFrom;\r\n\t\t\t\t} else if (move.name.slice(0, 2) === 'Z-') {\r\n\t\t\t\t\tmoveName = moveName.slice(2);\r\n\t\t\t\t\tmove = Dex.moves.get(moveName);\r\n\t\t\t\t\tif (window.BattleItems) {\r\n\t\t\t\t\t\tfor (let item in BattleItems) {\r\n\t\t\t\t\t\t\tif (BattleItems[item].zMoveType === move.type) pokemon.item = item;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet pp = 1;\r\n\t\t\tif (this.abilityActive('Pressure') && move.id !== 'stickyweb') {\r\n\t\t\t\tconst foeTargets = [];\r\n\t\t\t\tconst moveTarget = move.pressureTarget;\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\t!target && this.gameType === 'singles' &&\r\n\t\t\t\t\t!['self', 'allies', 'allySide', 'adjacentAlly', 'adjacentAllyOrSelf', 'anyAlly', 'allyTeam'].includes(moveTarget)\r\n\t\t\t\t) {\r\n\t\t\t\t\t// Hardcode for moves without a target in singles\r\n\t\t\t\t\tfoeTargets.push(pokemon.side.foe.active[0]);\r\n\t\t\t\t} else if (['all', 'allAdjacent', 'allAdjacentFoes', 'foeSide'].includes(moveTarget)) {\r\n\t\t\t\t\tfor (const active of this.getAllActive()) {\r\n\t\t\t\t\t\tif (active === pokemon) continue;\r\n\t\t\t\t\t\t// Pressure affects allies in gen 3 and 4\r\n\t\t\t\t\t\tif (this.gen <= 4 || (active.side !== pokemon.side && active.side.ally !== pokemon.side)) {\r\n\t\t\t\t\t\t\tfoeTargets.push(active);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (target && target.side !== pokemon.side) {\r\n\t\t\t\t\tfoeTargets.push(target);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (const foe of foeTargets) {\r\n\t\t\t\t\tif (foe && !foe.fainted && foe.effectiveAbility() === 'Pressure') {\r\n\t\t\t\t\t\tpp += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!callerMoveForPressure) {\r\n\t\t\t\tpokemon.rememberMove(moveName, pp);\r\n\t\t\t} else {\r\n\t\t\t\tpokemon.rememberMove(callerMoveForPressure.name, pp - 1); // 1 pp was already deducted from using the move itself\r\n\t\t\t}\r\n\t\t}\r\n\t\tpokemon.lastMove = move.id;\r\n\t\tthis.lastMove = move.id;\r\n\t\tif (move.id === 'wish' || move.id === 'healingwish') {\r\n\t\t\tpokemon.side.wisher = pokemon;\r\n\t\t}\r\n\t}\r\n\tanimateMove(pokemon: Pokemon, move: Move, target: Pokemon | null, kwArgs: KWArgs) {\r\n\t\tthis.activeMoveIsSpread = kwArgs.spread;\r\n\t\tif (this.seeking !== null || kwArgs.still) return;\r\n\r\n\t\tif (!target) target = pokemon.side.foe.active[0];\r\n\t\tif (!target) target = pokemon.side.foe.missedPokemon;\r\n\t\tif (kwArgs.miss && target.side) {\r\n\t\t\ttarget = target.side.missedPokemon;\r\n\t\t}\r\n\t\tif (kwArgs.notarget) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (kwArgs.prepare || kwArgs.anim === 'prepare') {\r\n\t\t\tthis.scene.runPrepareAnim(move.id, pokemon, target);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet usedMove = kwArgs.anim ? Dex.moves.get(kwArgs.anim) : move;\r\n\t\tif (!kwArgs.spread) {\r\n\t\t\tthis.scene.runMoveAnim(usedMove.id, [pokemon, target]);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet targets = [pokemon];\r\n\t\tif (kwArgs.spread === '.') {\r\n\t\t\t//  no target was hit by the attack\r\n\t\t\ttargets.push(target.side.missedPokemon);\r\n\t\t} else {\r\n\t\t\tfor (const hitTarget of kwArgs.spread.split(',')) {\r\n\t\t\t\tconst curTarget = this.getPokemon(hitTarget + ': ?');\r\n\t\t\t\tif (!curTarget) {\r\n\t\t\t\t\tthis.log(['error', `Invalid spread move target: \"${hitTarget}\"`]);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\ttargets.push(curTarget);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.scene.runMoveAnim(usedMove.id, targets);\r\n\t}\r\n\tcantUseMove(pokemon: Pokemon, effect: Effect, move: Move, kwArgs: KWArgs) {\r\n\t\tpokemon.clearMovestatuses();\r\n\t\tthis.scene.updateStatbar(pokemon);\r\n\t\tif (effect.id in BattleStatusAnims) {\r\n\t\t\tthis.scene.runStatusAnim(effect.id, [pokemon]);\r\n\t\t}\r\n\t\tthis.activateAbility(pokemon, effect);\r\n\t\tif (move.id) pokemon.rememberMove(move.name, 0);\r\n\t\tswitch (effect.id) {\r\n\t\tcase 'par':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Paralyzed', 'par');\r\n\t\t\tbreak;\r\n\t\tcase 'frz':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Frozen', 'frz');\r\n\t\t\tbreak;\r\n\t\tcase 'slp':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Asleep', 'slp');\r\n\t\t\tpokemon.statusData.sleepTurns++;\r\n\t\t\tbreak;\r\n\t\tcase 'truant':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Loafing around', 'neutral');\r\n\t\t\tbreak;\r\n\t\tcase 'recharge':\r\n\t\t\tthis.scene.runOtherAnim('selfstatus' as ID, [pokemon]);\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Must recharge', 'neutral');\r\n\t\t\tbreak;\r\n\t\tcase 'focuspunch':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Lost focus', 'neutral');\r\n\t\t\tpokemon.removeTurnstatus('focuspunch' as ID);\r\n\t\t\tbreak;\r\n\t\tcase 'shelltrap':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Trap failed', 'neutral');\r\n\t\t\tpokemon.removeTurnstatus('shelltrap' as ID);\r\n\t\t\tbreak;\r\n\t\tcase 'flinch':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Flinched', 'neutral');\r\n\t\t\tpokemon.removeTurnstatus('focuspunch' as ID);\r\n\t\t\tbreak;\r\n\t\tcase 'attract':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Immobilized', 'neutral');\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.scene.animReset(pokemon);\r\n\t}\r\n\r\n\tactivateAbility(pokemon: Pokemon | null, effectOrName: Effect | string, isNotBase?: boolean) {\r\n\t\tif (!pokemon || !effectOrName) return;\r\n\t\tif (typeof effectOrName !== 'string') {\r\n\t\t\tif (effectOrName.effectType !== 'Ability') return;\r\n\t\t\teffectOrName = effectOrName.name;\r\n\t\t}\r\n\t\tthis.scene.abilityActivateAnim(pokemon, effectOrName);\r\n\t\tpokemon.rememberAbility(effectOrName, isNotBase);\r\n\t}\r\n\r\n\trunMinor(args: Args, kwArgs: KWArgs, nextArgs?: Args, nextKwargs?: KWArgs) {\r\n\t\tif (nextArgs && nextKwargs) {\r\n\t\t\tif (args[2] === 'Sturdy' && args[0] === '-activate') {\r\n\t\t\t\targs[2] = 'ability: Sturdy';\r\n\t\t\t}\r\n\t\t\tif (['-crit', '-supereffective', '-resisted'].includes(args[0]) || args[2] === 'ability: Sturdy') {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-damage' && !kwArgs.from && args[1] !== nextArgs[1] && (\r\n\t\t\t\t['-crit', '-supereffective', '-resisted'].includes(nextArgs[0]) ||\r\n\t\t\t\t(nextArgs[0] === '-damage' && !nextKwargs.from)\r\n\t\t\t)) {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-damage' && nextArgs[0] === '-damage' && kwArgs.from && kwArgs.from === nextKwargs.from) {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-ability' && (args[2] === 'Intimidate' || args[3] === 'boost')) {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-unboost' && nextArgs[0] === '-unboost') {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-boost' && nextArgs[0] === '-boost') {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-damage' && kwArgs.from === 'Leech Seed' && nextArgs[0] === '-heal' && nextKwargs.silent) {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === 'detailschange' && nextArgs[0] === '-mega') {\r\n\t\t\t\tif (this.scene.closeMessagebar()) {\r\n\t\t\t\t\tthis.currentStep--;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tkwArgs.simult = '.';\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (kwArgs.then) this.waitForAnimations = false;\r\n\t\tif (kwArgs.simult) this.waitForAnimations = 'simult';\r\n\r\n\t\tconst CONSUMED = ['eaten', 'popped', 'consumed', 'held up'];\r\n\t\tswitch (args[0]) {\r\n\t\tcase '-damage': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet damage = poke.healthParse(args[2], true);\r\n\t\t\tif (damage === null) break;\r\n\t\t\tlet range = poke.getDamageRange(damage);\r\n\r\n\t\t\tif (kwArgs.from) {\r\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\t\tthis.activateAbility(ofpoke, effect);\r\n\t\t\t\tif (effect.effectType === 'Item') {\r\n\t\t\t\t\tconst itemPoke = ofpoke || poke;\r\n\t\t\t\t\tif (itemPoke.prevItem !== effect.name && !CONSUMED.includes(itemPoke.prevItemEffect)) {\r\n\t\t\t\t\t\titemPoke.item = effect.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'brn':\r\n\t\t\t\t\tthis.scene.runStatusAnim('brn' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'psn':\r\n\t\t\t\t\tthis.scene.runStatusAnim('psn' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'baddreams':\r\n\t\t\t\t\tthis.scene.runStatusAnim('cursed' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'curse':\r\n\t\t\t\t\tthis.scene.runStatusAnim('cursed' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'confusion':\r\n\t\t\t\t\tthis.scene.runStatusAnim('confusedselfhit' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'leechseed':\r\n\t\t\t\t\tthis.scene.runOtherAnim('leech' as ID, [ofpoke!, poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'bind':\r\n\t\t\t\tcase 'wrap':\r\n\t\t\t\t\tthis.scene.runOtherAnim('bound' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (this.dex.moves.get(this.lastMove).category !== 'Status') {\r\n\t\t\t\t\tpoke.timesAttacked++;\r\n\t\t\t\t}\r\n\t\t\t\tlet damageinfo = '' + Pokemon.getFormattedRange(range, damage[1] === 100 ? 0 : 1, '\\u2013');\r\n\t\t\t\tif (damage[1] !== 100) {\r\n\t\t\t\t\tlet hover = '' + ((damage[0] < 0) ? '\\u2212' : '') +\r\n\t\t\t\t\t\tMath.abs(damage[0]) + '/' + damage[1];\r\n\t\t\t\t\tif (damage[1] === 48) { // this is a hack\r\n\t\t\t\t\t\thover += ' pixels';\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// battle-log will convert this into <abbr>\r\n\t\t\t\t\tdamageinfo = '||' + hover + '||' + damageinfo + '||';\r\n\t\t\t\t}\r\n\t\t\t\targs[3] = damageinfo;\r\n\t\t\t}\r\n\t\t\tthis.scene.damageAnim(poke, Pokemon.getFormattedRange(range, 0, ' to '));\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-heal': {\r\n\t\t\tlet poke = this.getPokemon(args[1], Dex.getEffect(kwArgs.from).id === 'revivalblessing')!;\r\n\t\t\tlet damage = poke.healthParse(args[2], true, true);\r\n\t\t\tif (damage === null) break;\r\n\t\t\tlet range = poke.getDamageRange(damage);\r\n\r\n\t\t\tif (kwArgs.from) {\r\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\t\tthis.activateAbility(ofpoke || poke, effect);\r\n\t\t\t\tif (effect.effectType === 'Item' && !CONSUMED.includes(poke.prevItemEffect)) {\r\n\t\t\t\t\tif (poke.prevItem !== effect.name) {\r\n\t\t\t\t\t\tpoke.item = effect.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'lunardance':\r\n\t\t\t\t\tfor (let trackedMove of poke.moveTrack) {\r\n\t\t\t\t\t\ttrackedMove[1] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// falls through\r\n\t\t\t\tcase 'healingwish':\r\n\t\t\t\t\tthis.lastMove = 'healing-wish';\r\n\t\t\t\t\tthis.scene.runResidualAnim('healingwish' as ID, poke);\r\n\t\t\t\t\tpoke.side.wisher = null;\r\n\t\t\t\t\tpoke.statusData.sleepTurns = 0;\r\n\t\t\t\t\tpoke.statusData.toxicTurns = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'wish':\r\n\t\t\t\t\tthis.scene.runResidualAnim('wish' as ID, poke);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'revivalblessing':\r\n\t\t\t\t\tthis.scene.runResidualAnim('wish' as ID, poke);\r\n\t\t\t\t\tconst {siden} = this.parsePokemonId(args[1]);\r\n\t\t\t\t\tconst side = this.sides[siden];\r\n\t\t\t\t\tpoke.fainted = false;\r\n\t\t\t\t\tpoke.status = '';\r\n\t\t\t\t\tthis.scene.updateSidebar(side);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.scene.runOtherAnim('heal' as ID, [poke]);\r\n\t\t\tthis.scene.healAnim(poke, Pokemon.getFormattedRange(range, 0, ' to '));\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-sethp': {\r\n\t\t\tfor (let k = 0; k < 2; k++) {\r\n\t\t\t\tlet cpoke = this.getPokemon(args[1 + 2 * k]);\r\n\t\t\t\tif (cpoke) {\r\n\t\t\t\t\tlet damage = cpoke.healthParse(args[2 + 2 * k])!;\r\n\t\t\t\t\tlet range = cpoke.getDamageRange(damage);\r\n\t\t\t\t\tlet formattedRange = Pokemon.getFormattedRange(range, 0, ' to ');\r\n\t\t\t\t\tlet diff = damage[0];\r\n\t\t\t\t\tif (diff > 0) {\r\n\t\t\t\t\t\tthis.scene.healAnim(cpoke, formattedRange);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.scene.damageAnim(cpoke, formattedRange);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-boost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet stat = args[2] as BoostStatName;\r\n\t\t\tif (this.gen === 1 && stat === 'spd') break;\r\n\t\t\tif (this.gen === 1 && stat === 'spa') stat = 'spc';\r\n\t\t\tlet amount = parseInt(args[3], 10);\r\n\t\t\tif (amount === 0) {\r\n\t\t\t\tthis.scene.resultAnim(poke, 'already ' + poke.getBoost(stat), 'neutral');\r\n\t\t\t\tthis.log(args, kwArgs);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (!poke.boosts[stat]) {\r\n\t\t\t\tpoke.boosts[stat] = 0;\r\n\t\t\t}\r\n\t\t\tpoke.boosts[stat] += amount;\r\n\r\n\t\t\tif (!kwArgs.silent && kwArgs.from) {\r\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\t\tif (!(effect.id === 'weakarmor' && stat === 'spe')) {\r\n\t\t\t\t\tthis.activateAbility(ofpoke || poke, effect);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, poke.getBoost(stat), 'good');\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-unboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet stat = args[2] as BoostStatName;\r\n\t\t\tif (this.gen === 1 && stat === 'spd') break;\r\n\t\t\tif (this.gen === 1 && stat === 'spa') stat = 'spc';\r\n\t\t\tlet amount = parseInt(args[3], 10);\r\n\t\t\tif (amount === 0) {\r\n\t\t\t\tthis.scene.resultAnim(poke, 'already ' + poke.getBoost(stat), 'neutral');\r\n\t\t\t\tthis.log(args, kwArgs);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (!poke.boosts[stat]) {\r\n\t\t\t\tpoke.boosts[stat] = 0;\r\n\t\t\t}\r\n\t\t\tpoke.boosts[stat] -= amount;\r\n\r\n\t\t\tif (!kwArgs.silent && kwArgs.from) {\r\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\t\tthis.activateAbility(ofpoke || poke, effect);\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, poke.getBoost(stat), 'bad');\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-setboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet stat = args[2] as BoostStatName;\r\n\t\t\tlet amount = parseInt(args[3], 10);\r\n\t\t\tpoke.boosts[stat] = amount;\r\n\t\t\tthis.scene.resultAnim(poke, poke.getBoost(stat), (amount > 0 ? 'good' : 'bad'));\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-swapboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet poke2 = this.getPokemon(args[2])!;\r\n\t\t\tlet stats = args[3] ? args[3].split(', ') : ['atk', 'def', 'spa', 'spd', 'spe', 'accuracy', 'evasion'];\r\n\t\t\tfor (const stat of stats) {\r\n\t\t\t\tlet tmp = poke.boosts[stat];\r\n\t\t\t\tpoke.boosts[stat] = poke2.boosts[stat];\r\n\t\t\t\tif (!poke.boosts[stat]) delete poke.boosts[stat];\r\n\t\t\t\tpoke2.boosts[stat] = tmp;\r\n\t\t\t\tif (!poke2.boosts[stat]) delete poke2.boosts[stat];\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Stats swapped', 'neutral');\r\n\t\t\tthis.scene.resultAnim(poke2, 'Stats swapped', 'neutral');\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-clearpositiveboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet ofpoke = this.getPokemon(args[2]);\r\n\t\t\tlet effect = Dex.getEffect(args[3]);\r\n\t\t\tfor (const stat in poke.boosts) {\r\n\t\t\t\tif (poke.boosts[stat] > 0) delete poke.boosts[stat];\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Boosts lost', 'bad');\r\n\r\n\t\t\tif (effect.id) {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'spectralthief':\r\n\t\t\t\t\t// todo: update StealBoosts so it animates 1st on Spectral Thief\r\n\t\t\t\t\tthis.scene.runOtherAnim('spectralthiefboost' as ID, [ofpoke!, poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-clearnegativeboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tfor (const stat in poke.boosts) {\r\n\t\t\t\tif (poke.boosts[stat] < 0) delete poke.boosts[stat];\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Restored', 'good');\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-copyboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet frompoke = this.getPokemon(args[2])!;\r\n\t\t\tif (!kwArgs.silent && kwArgs.from) {\r\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\t\tthis.activateAbility(poke, effect);\r\n\t\t\t}\r\n\t\t\tlet stats = args[3] ? args[3].split(', ') : ['atk', 'def', 'spa', 'spd', 'spe', 'accuracy', 'evasion'];\r\n\t\t\tfor (const stat of stats) {\r\n\t\t\t\tpoke.boosts[stat] = frompoke.boosts[stat];\r\n\t\t\t\tif (!poke.boosts[stat]) delete poke.boosts[stat];\r\n\t\t\t}\r\n\t\t\tif (this.gen >= 6) {\r\n\t\t\t\tconst volatilesToCopy = ['focusenergy', 'gmaxchistrike', 'laserfocus'];\r\n\t\t\t\tfor (const volatile of volatilesToCopy) {\r\n\t\t\t\t\tif (frompoke.volatiles[volatile]) {\r\n\t\t\t\t\t\tpoke.addVolatile(volatile as ID);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpoke.removeVolatile(volatile as ID);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Stats copied', 'neutral');\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-clearboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tpoke.boosts = {};\r\n\t\t\tif (!kwArgs.silent && kwArgs.from) {\r\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\t\tthis.activateAbility(ofpoke || poke, effect);\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Stats reset', 'neutral');\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-invertboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tfor (const stat in poke.boosts) {\r\n\t\t\t\tpoke.boosts[stat] = -poke.boosts[stat];\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Stats inverted', 'neutral');\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-clearallboost': {\r\n\t\t\tlet timeOffset = this.scene.timeOffset;\r\n\t\t\tfor (const active of this.getAllActive()) {\r\n\t\t\t\tactive.boosts = {};\r\n\t\t\t\tthis.scene.timeOffset = timeOffset;\r\n\t\t\t\tthis.scene.resultAnim(active, 'Stats reset', 'neutral');\r\n\t\t\t}\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-crit': {\r\n\t\t\tlet poke = this.getPokemon(args[1]);\r\n\t\t\tif (poke) this.scene.resultAnim(poke, 'Critical hit', 'bad');\r\n\t\t\tif (this.activeMoveIsSpread) kwArgs.spread = '.';\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-supereffective': {\r\n\t\t\tlet poke = this.getPokemon(args[1]);\r\n\t\t\tif (poke) {\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Super-effective', 'bad');\r\n\t\t\t\tif (window.Config?.server?.afd) {\r\n\t\t\t\t\tthis.scene.runOtherAnim('hitmark' as ID, [poke]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.activeMoveIsSpread) kwArgs.spread = '.';\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-resisted': {\r\n\t\t\tlet poke = this.getPokemon(args[1]);\r\n\t\t\tif (poke) this.scene.resultAnim(poke, 'Resisted', 'neutral');\r\n\t\t\tif (this.activeMoveIsSpread) kwArgs.spread = '.';\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-immune': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\t\tthis.activateAbility(this.getPokemon(kwArgs.of) || poke, fromeffect);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tthis.scene.resultAnim(poke, 'Immune', 'neutral');\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-miss': {\r\n\t\t\tlet target = this.getPokemon(args[2]);\r\n\t\t\tif (target) {\r\n\t\t\t\tthis.scene.resultAnim(target, 'Missed', 'neutral');\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-fail': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tif (fromeffect.id === 'clearamulet') {\r\n\t\t\t\tofpoke!.item = 'Clear Amulet';\r\n\t\t\t} else {\r\n\t\t\t\tthis.activateAbility(ofpoke || poke, fromeffect);\r\n\t\t\t}\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'brn':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Already burned', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'tox':\r\n\t\t\tcase 'psn':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Already poisoned', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'slp':\r\n\t\t\t\tif (fromeffect.id === 'uproar') {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Failed', 'neutral');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Already asleep', 'neutral');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'par':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Already paralyzed', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'frz':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Already frozen', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'unboost':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Stat drop blocked', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tif (poke) {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Failed', 'neutral');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.scene.animReset(poke);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-block': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tthis.activateAbility(ofpoke || poke, effect);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'quickguard':\r\n\t\t\t\tpoke.addTurnstatus('quickguard' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Quick Guard', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'wideguard':\r\n\t\t\t\tpoke.addTurnstatus('wideguard' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Wide Guard', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'craftyshield':\r\n\t\t\t\tpoke.addTurnstatus('craftyshield' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Crafty Shield', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'protect':\r\n\t\t\t\tpoke.addTurnstatus('protect' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Protected', 'good');\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'safetygoggles':\r\n\t\t\t\tpoke.item = 'Safety Goggles';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'protectivepads':\r\n\t\t\t\tpoke.item = 'Protective Pads';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'abilityshield':\r\n\t\t\t\tpoke.item = 'Ability Shield';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-center': case '-notarget': case '-ohko':\r\n\t\tcase '-combine': case '-hitcount': case '-waiting': case '-zbroken': {\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-zpower': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tthis.scene.runOtherAnim('zpower' as ID, [poke]);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-prepare': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet moveid = toID(args[2]);\r\n\t\t\tlet target = this.getPokemon(args[3]) || poke.side.foe.active[0] || poke;\r\n\t\t\tthis.scene.runPrepareAnim(moveid, poke, target);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-mustrecharge': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tpoke.addMovestatus('mustrecharge' as ID);\r\n\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-status': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of) || poke;\r\n\t\t\tpoke.status = args[2] as StatusName;\r\n\t\t\tthis.activateAbility(ofpoke || poke, effect);\r\n\t\t\tif (effect.effectType === 'Item') {\r\n\t\t\t\tofpoke.item = effect.name;\r\n\t\t\t}\r\n\r\n\t\t\tswitch (args[2]) {\r\n\t\t\tcase 'brn':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Burned', 'brn');\r\n\t\t\t\tthis.scene.runStatusAnim('brn' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'tox':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Toxic poison', 'psn');\r\n\t\t\t\tthis.scene.runStatusAnim('psn' as ID, [poke]);\r\n\t\t\t\tpoke.statusData.toxicTurns = (effect.name === \"Toxic Orb\" ? -1 : 0);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'psn':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Poisoned', 'psn');\r\n\t\t\t\tthis.scene.runStatusAnim('psn' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'slp':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Asleep', 'slp');\r\n\t\t\t\tif (effect.id === 'rest') {\r\n\t\t\t\t\tpoke.statusData.sleepTurns = 0; // for Gen 2 use through Sleep Talk\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'par':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Paralyzed', 'par');\r\n\t\t\t\tthis.scene.runStatusAnim('par' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'frz':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Frozen', 'frz');\r\n\t\t\t\tthis.scene.runStatusAnim('frz' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-curestatus': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\r\n\t\t\tif (effect.id) {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'flamewheel':\r\n\t\t\t\tcase 'flareblitz':\r\n\t\t\t\tcase 'fusionflare':\r\n\t\t\t\tcase 'sacredfire':\r\n\t\t\t\tcase 'scald':\r\n\t\t\t\tcase 'steameruption':\r\n\t\t\t\t\tkwArgs.thaw = '.';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (poke) {\r\n\t\t\t\tpoke.status = '';\r\n\t\t\t\tswitch (args[2]) {\r\n\t\t\t\tcase 'brn':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Burn cured', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'tox':\r\n\t\t\t\tcase 'psn':\r\n\t\t\t\t\tpoke.statusData.toxicTurns = 0;\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Poison cured', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'slp':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Woke up', 'good');\r\n\t\t\t\t\tpoke.statusData.sleepTurns = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'par':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Paralysis cured', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'frz':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Thawed', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tpoke.removeVolatile('confusion' as ID);\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Cured', 'good');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\t\tcase '-cureteam': { // For old gens when the whole team was always cured\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tfor (const target of poke.side.pokemon) {\r\n\t\t\t\ttarget.status = '';\r\n\t\t\t\tthis.scene.updateStatbarIfExists(target);\r\n\t\t\t}\r\n\r\n\t\t\tthis.scene.resultAnim(poke, 'Team Cured', 'good');\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-item': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet item = Dex.items.get(args[2]);\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tpoke.item = item.name;\r\n\t\t\tpoke.itemEffect = '';\r\n\t\t\tpoke.removeVolatile('airballoon' as ID);\r\n\t\t\tif (item.id === 'airballoon') poke.addVolatile('airballoon' as ID);\r\n\r\n\t\t\tif (effect.id) {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'pickup':\r\n\t\t\t\t\tthis.activateAbility(poke, \"Pickup\");\r\n\t\t\t\t\t// falls through\r\n\t\t\t\tcase 'recycle':\r\n\t\t\t\t\tpoke.itemEffect = 'found';\r\n\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'frisk':\r\n\t\t\t\t\tthis.activateAbility(ofpoke!, \"Frisk\");\r\n\t\t\t\t\tif (poke && poke !== ofpoke) { // used for gen 6\r\n\t\t\t\t\t\tpoke.itemEffect = 'frisked';\r\n\t\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'magician':\r\n\t\t\t\tcase 'pickpocket':\r\n\t\t\t\t\tthis.activateAbility(poke, effect.name);\r\n\t\t\t\t\t// falls through\r\n\t\t\t\tcase 'thief':\r\n\t\t\t\tcase 'covet':\r\n\t\t\t\t\t// simulate the removal of the item from the ofpoke\r\n\t\t\t\t\tofpoke!.item = '';\r\n\t\t\t\t\tofpoke!.itemEffect = '';\r\n\t\t\t\t\tofpoke!.prevItem = item.name;\r\n\t\t\t\t\tofpoke!.prevItemEffect = 'stolen';\r\n\t\t\t\t\tofpoke!.addVolatile('itemremoved' as ID);\r\n\t\t\t\t\tpoke.itemEffect = 'stolen';\r\n\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\r\n\t\t\t\t\tthis.scene.resultAnim(ofpoke!, 'Item Stolen', 'bad');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'harvest':\r\n\t\t\t\t\tpoke.itemEffect = 'harvested';\r\n\t\t\t\t\tthis.activateAbility(poke, \"Harvest\");\r\n\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'bestow':\r\n\t\t\t\t\tpoke.itemEffect = 'bestowed';\r\n\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'switcheroo':\r\n\t\t\t\tcase 'trick':\r\n\t\t\t\t\tpoke.itemEffect = 'tricked';\r\n\t\t\t\t\t// falls through\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswitch (item.id) {\r\n\t\t\t\tcase 'airballoon':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Balloon', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-enditem': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet item = Dex.items.get(args[2]);\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\tif (this.gen > 4 || effect.id !== 'knockoff') {\r\n\t\t\t\tpoke.item = '';\r\n\t\t\t\tpoke.itemEffect = '';\r\n\t\t\t\tpoke.prevItem = item.name;\r\n\t\t\t\tpoke.prevItemEffect = '';\r\n\t\t\t}\r\n\t\t\tpoke.removeVolatile('airballoon' as ID);\r\n\t\t\tpoke.addVolatile('itemremoved' as ID);\r\n\t\t\tif (kwArgs.eat) {\r\n\t\t\t\tpoke.prevItemEffect = 'eaten';\r\n\t\t\t\tthis.scene.runOtherAnim('consume' as ID, [poke]);\r\n\t\t\t\tthis.lastMove = item.id;\r\n\t\t\t} else if (kwArgs.weaken) {\r\n\t\t\t\tpoke.prevItemEffect = 'eaten';\r\n\t\t\t\tthis.lastMove = item.id;\r\n\t\t\t} else if (effect.id) {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'fling':\r\n\t\t\t\t\tpoke.prevItemEffect = 'flung';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'knockoff':\r\n\t\t\t\t\tif (this.gen <= 4) {\r\n\t\t\t\t\t\tpoke.itemEffect = 'knocked off';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpoke.prevItemEffect = 'knocked off';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.scene.runOtherAnim('itemoff' as ID, [poke]);\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Item knocked off', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'stealeat':\r\n\t\t\t\t\tpoke.prevItemEffect = 'stolen';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'gem':\r\n\t\t\t\t\tpoke.prevItemEffect = 'consumed';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'incinerate':\r\n\t\t\t\t\tpoke.prevItemEffect = 'incinerated';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswitch (item.id) {\r\n\t\t\t\tcase 'airballoon':\r\n\t\t\t\t\tpoke.prevItemEffect = 'popped';\r\n\t\t\t\t\tpoke.removeVolatile('airballoon' as ID);\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Balloon popped', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'focussash':\r\n\t\t\t\t\tpoke.prevItemEffect = 'consumed';\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Sash', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'focusband':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Focus Band', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'redcard':\r\n\t\t\t\t\tpoke.prevItemEffect = 'held up';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tpoke.prevItemEffect = 'consumed';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-ability': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet ability = Dex.abilities.get(args[2]);\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tpoke.rememberAbility(ability.name, effect.id && !kwArgs.fail);\r\n\r\n\t\t\tif (kwArgs.silent) {\r\n\t\t\t\t// do nothing\r\n\t\t\t} else if (effect.id) {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'trace':\r\n\t\t\t\t\tthis.activateAbility(poke, \"Trace\");\r\n\t\t\t\t\tthis.scene.wait(500);\r\n\t\t\t\t\tthis.activateAbility(poke, ability.name, true);\r\n\t\t\t\t\tofpoke!.rememberAbility(ability.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'powerofalchemy':\r\n\t\t\t\tcase 'receiver':\r\n\t\t\t\t\tthis.activateAbility(poke, effect.name);\r\n\t\t\t\t\tthis.scene.wait(500);\r\n\t\t\t\t\tthis.activateAbility(poke, ability.name, true);\r\n\t\t\t\t\tofpoke!.rememberAbility(ability.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'roleplay':\r\n\t\t\t\t\tthis.activateAbility(poke, ability.name, true);\r\n\t\t\t\t\tofpoke!.rememberAbility(ability.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'desolateland':\r\n\t\t\t\tcase 'primordialsea':\r\n\t\t\t\tcase 'deltastream':\r\n\t\t\t\t\tif (kwArgs.fail) {\r\n\t\t\t\t\t\tthis.activateAbility(poke, ability.name);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.activateAbility(poke, ability.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.activateAbility(poke, ability.name);\r\n\t\t\t}\r\n\t\t\tthis.scene.updateWeather();\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-endability': {\r\n\t\t\t// deprecated; use |-start| for Gastro Acid\r\n\t\t\t// and the third arg of |-ability| for Entrainment et al\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet ability = Dex.abilities.get(args[2]);\r\n\t\t\tpoke.ability = '(suppressed)';\r\n\r\n\t\t\tif (ability.id) {\r\n\t\t\t\tif (!poke.baseAbility) poke.baseAbility = ability.name;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'detailschange': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tpoke.removeVolatile('formechange' as ID);\r\n\t\t\tpoke.removeVolatile('typeadd' as ID);\r\n\t\t\tpoke.removeVolatile('typechange' as ID);\r\n\r\n\t\t\tlet newSpeciesForme = args[2];\r\n\t\t\tlet commaIndex = newSpeciesForme.indexOf(',');\r\n\t\t\tif (commaIndex !== -1) {\r\n\t\t\t\tlet level = newSpeciesForme.substr(commaIndex + 1).trim();\r\n\t\t\t\tif (level.charAt(0) === 'L') {\r\n\t\t\t\t\tpoke.level = parseInt(level.substr(1), 10);\r\n\t\t\t\t}\r\n\t\t\t\tnewSpeciesForme = args[2].substr(0, commaIndex);\r\n\t\t\t}\r\n\t\t\tlet species = this.dex.species.get(newSpeciesForme);\r\n\t\t\tif (nextArgs) {\r\n\t\t\t\tif (nextArgs[0] === '-mega') {\r\n\t\t\t\t\tspecies = this.dex.species.get(this.dex.items.get(nextArgs[3]).megaStone);\r\n\t\t\t\t} else if (nextArgs[0] === '-primal' && nextArgs.length > 2) {\r\n\t\t\t\t\tif (nextArgs[2] === 'Red Orb') species = this.dex.species.get('Groudon-Primal');\r\n\t\t\t\t\tif (nextArgs[2] === 'Blue Orb') species = this.dex.species.get('Kyogre-Primal');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tpoke.speciesForme = newSpeciesForme;\r\n\t\t\tpoke.ability = poke.baseAbility = (species.abilities ? species.abilities['0'] : '');\r\n\r\n\t\t\tpoke.details = args[2];\r\n\t\t\tpoke.searchid = args[1].substr(0, 2) + args[1].substr(3) + '|' + args[2];\r\n\r\n\t\t\tlet isCustomAnim = species.id !== 'palafinhero';\r\n\t\t\tthis.scene.animTransform(poke, isCustomAnim, true);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-transform': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet tpoke = this.getPokemon(args[2])!;\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\tif (poke === tpoke) throw new Error(\"Transforming into self\");\r\n\r\n\t\t\tif (!kwArgs.silent) {\r\n\t\t\t\tthis.activateAbility(poke, effect);\r\n\t\t\t}\r\n\r\n\t\t\tpoke.boosts = {...tpoke.boosts};\r\n\t\t\tpoke.copyTypesFrom(tpoke, true);\r\n\t\t\tpoke.ability = tpoke.ability;\r\n\t\t\tpoke.timesAttacked = tpoke.timesAttacked;\r\n\t\t\tconst targetForme = tpoke.volatiles.formechange;\r\n\t\t\tconst speciesForme = (targetForme && !targetForme[1].endsWith('-Gmax')) ? targetForme[1] : tpoke.speciesForme;\r\n\t\t\tconst pokemon = tpoke;\r\n\t\t\tconst shiny = tpoke.shiny;\r\n\t\t\tconst gender = tpoke.gender;\r\n\t\t\tconst level = tpoke.level;\r\n\t\t\tpoke.addVolatile('transform' as ID, pokemon, shiny, gender, level);\r\n\t\t\tpoke.addVolatile('formechange' as ID, speciesForme);\r\n\t\t\tfor (const trackedMove of tpoke.moveTrack) {\r\n\t\t\t\tpoke.rememberMove(trackedMove[0], 0);\r\n\t\t\t}\r\n\t\t\tthis.scene.animTransform(poke);\r\n\t\t\tthis.scene.resultAnim(poke, 'Transformed', 'good');\r\n\t\t\tthis.log(['-transform', args[1], args[2], tpoke.speciesForme], kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-formechange': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet species = Dex.species.get(args[2]);\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\t\tlet isCustomAnim = species.name.startsWith('Wishiwashi');\r\n\t\t\tif (!poke.getSpeciesForme().endsWith('-Gmax') && !species.name.endsWith('-Gmax')) {\r\n\t\t\t\tpoke.removeVolatile('typeadd' as ID);\r\n\t\t\t\tpoke.removeVolatile('typechange' as ID);\r\n\t\t\t\tif (this.gen >= 6) poke.removeVolatile('autotomize' as ID);\r\n\t\t\t}\r\n\r\n\t\t\tif (!kwArgs.silent) {\r\n\t\t\t\tthis.activateAbility(poke, fromeffect);\r\n\t\t\t}\r\n\t\t\tpoke.addVolatile('formechange' as ID, species.name); // the formechange volatile reminds us to revert the sprite change on switch-out\r\n\t\t\tthis.scene.animTransform(poke, isCustomAnim);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-mega': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet item = Dex.items.get(args[3]);\r\n\t\t\tif (args[3]) {\r\n\t\t\t\tpoke.item = item.name;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-primal': case '-burst': {\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-terastallize': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet type = Dex.types.get(args[2]).name;\r\n\t\t\tpoke.removeVolatile('typeadd' as ID);\r\n\t\t\tpoke.teraType = type;\r\n\t\t\tpoke.terastallized = type;\r\n\t\t\tpoke.details += `, tera:${type}`;\r\n\t\t\tpoke.searchid += `, tera:${type}`;\r\n\t\t\tthis.scene.animTransform(poke, true);\r\n\t\t\tthis.scene.resetStatbar(poke);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-start': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\r\n\t\t\tthis.activateAbility(poke, effect);\r\n\t\t\tthis.activateAbility(ofpoke || poke, fromeffect);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'typechange':\r\n\t\t\t\tif (poke.terastallized) break;\r\n\t\t\t\tif (ofpoke && fromeffect.id === 'reflecttype') {\r\n\t\t\t\t\tpoke.copyTypesFrom(ofpoke);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst types = Dex.sanitizeName(args[3] || '???');\r\n\t\t\t\t\tpoke.removeVolatile('typeadd' as ID);\r\n\t\t\t\t\tpoke.addVolatile('typechange' as ID, types);\r\n\t\t\t\t\tif (!kwArgs.silent) {\r\n\t\t\t\t\t\tthis.scene.typeAnim(poke, types);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'typeadd':\r\n\t\t\t\tconst type = Dex.sanitizeName(args[3]);\r\n\t\t\t\tpoke.addVolatile('typeadd' as ID, type);\r\n\t\t\t\tif (kwArgs.silent) break;\r\n\t\t\t\tthis.scene.typeAnim(poke, type);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dynamax':\r\n\t\t\t\tpoke.addVolatile('dynamax' as ID, !!args[3]);\r\n\t\t\t\tthis.scene.animTransform(poke, true);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'powertrick':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Power Trick', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'foresight':\r\n\t\t\tcase 'miracleeye':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Identified', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'telekinesis':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Telekinesis', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'confusion':\r\n\t\t\t\tif (!kwArgs.already) {\r\n\t\t\t\t\tthis.scene.runStatusAnim('confused' as ID, [poke]);\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Confused', 'bad');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'leechseed':\r\n\t\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'healblock':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Heal Block', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'yawn':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Drowsy', 'slp');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'taunt':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Taunted', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'imprison':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Imprisoning', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'disable':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Disabled', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'embargo':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Embargo', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'torment':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Tormented', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'ingrain':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Ingrained', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'aquaring':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Aqua Ring', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'stockpile1':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Stockpile', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'stockpile2':\r\n\t\t\t\tpoke.removeVolatile('stockpile1' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Stockpile&times;2', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'stockpile3':\r\n\t\t\t\tpoke.removeVolatile('stockpile2' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Stockpile&times;3', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'perish0':\r\n\t\t\t\tpoke.removeVolatile('perish1' as ID);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'perish1':\r\n\t\t\t\tpoke.removeVolatile('perish2' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Perish next turn', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'perish2':\r\n\t\t\t\tpoke.removeVolatile('perish3' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Perish in 2', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'perish3':\r\n\t\t\t\tif (!kwArgs.silent) this.scene.resultAnim(poke, 'Perish in 3', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'encore':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Encored', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'bide':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Bide', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'attract':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Attracted', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'autotomize':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Lightened', 'good');\r\n\t\t\t\tif (poke.volatiles.autotomize) {\r\n\t\t\t\t\tpoke.volatiles.autotomize[1]++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpoke.addVolatile('autotomize' as ID, 1);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'focusenergy':\r\n\t\t\t\tthis.scene.resultAnim(poke, '+Crit rate', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'curse':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Cursed', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'nightmare':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Nightmare', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'magnetrise':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Magnet Rise', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'smackdown':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Smacked Down', 'bad');\r\n\t\t\t\tpoke.removeVolatile('magnetrise' as ID);\r\n\t\t\t\tpoke.removeVolatile('telekinesis' as ID);\r\n\t\t\t\tif (poke.lastMove === 'fly' || poke.lastMove === 'bounce') this.scene.animReset(poke);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'substitute':\r\n\t\t\t\tif (kwArgs.damage) {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Damage', 'bad');\r\n\t\t\t\t} else if (kwArgs.block) {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Blocked', 'neutral');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// Gen 1-2\r\n\t\t\tcase 'mist':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Mist', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\t// Gen 1\r\n\t\t\tcase 'lightscreen':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Light Screen', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'reflect':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Reflect', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (!(effect.id === 'typechange' && poke.terastallized)) {\r\n\t\t\t\tpoke.addVolatile(effect.id);\r\n\t\t\t}\r\n\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-end': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\t\tpoke.removeVolatile(effect.id);\r\n\r\n\t\t\tif (kwArgs.silent) {\r\n\t\t\t\t// do nothing\r\n\t\t\t} else {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'dynamax':\r\n\t\t\t\t\tthis.scene.animTransform(poke);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'powertrick':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Power Trick', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'telekinesis':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Telekinesis&nbsp;ended', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'skydrop':\r\n\t\t\t\t\tif (kwArgs.interrupt) {\r\n\t\t\t\t\t\tthis.scene.anim(poke, {time: 100});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'confusion':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Confusion&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'leechseed':\r\n\t\t\t\t\tif (fromeffect.id === 'rapidspin') {\r\n\t\t\t\t\t\tthis.scene.resultAnim(poke, 'De-seeded', 'good');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'healblock':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Heal Block ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'attract':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Attract&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'taunt':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Taunt&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'disable':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Disable&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'embargo':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Embargo ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'torment':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Torment&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'encore':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Encore&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'bide':\r\n\t\t\t\t\tthis.scene.runOtherAnim('bideunleash' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'illusion':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Illusion ended', 'bad');\r\n\t\t\t\t\tpoke.rememberAbility('Illusion');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'slowstart':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Slow Start ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'perishsong': // for backwards compatibility\r\n\t\t\t\t\tpoke.removeVolatile('perish3' as ID);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'substitute':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Faded', 'bad');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'stockpile':\r\n\t\t\t\t\tpoke.removeVolatile('stockpile1' as ID);\r\n\t\t\t\t\tpoke.removeVolatile('stockpile2' as ID);\r\n\t\t\t\t\tpoke.removeVolatile('stockpile3' as ID);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'protosynthesis':\r\n\t\t\t\t\tpoke.removeVolatile('protosynthesisatk' as ID);\r\n\t\t\t\t\tpoke.removeVolatile('protosynthesisdef' as ID);\r\n\t\t\t\t\tpoke.removeVolatile('protosynthesisspa' as ID);\r\n\t\t\t\t\tpoke.removeVolatile('protosynthesisspd' as ID);\r\n\t\t\t\t\tpoke.removeVolatile('protosynthesisspe' as ID);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'quarkdrive':\r\n\t\t\t\t\tpoke.removeVolatile('quarkdriveatk' as ID);\r\n\t\t\t\t\tpoke.removeVolatile('quarkdrivedef' as ID);\r\n\t\t\t\t\tpoke.removeVolatile('quarkdrivespa' as ID);\r\n\t\t\t\t\tpoke.removeVolatile('quarkdrivespd' as ID);\r\n\t\t\t\t\tpoke.removeVolatile('quarkdrivespe' as ID);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (effect.effectType === 'Move') {\r\n\t\t\t\t\t\tif (effect.name === 'Doom Desire') {\r\n\t\t\t\t\t\t\tthis.scene.runOtherAnim('doomdesirehit' as ID, [poke]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (effect.name === 'Future Sight') {\r\n\t\t\t\t\t\t\tthis.scene.runOtherAnim('futuresighthit' as ID, [poke]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-singleturn': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tif (effect.id === 'roost' && !poke.getTypeList().includes('Flying')) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tpoke.addTurnstatus(effect.id);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'roost':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Landed', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'quickguard':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Quick Guard', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'wideguard':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Wide Guard', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'craftyshield':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Crafty Shield', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'matblock':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Mat Block', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'protect':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Protected', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'endure':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Enduring', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'helpinghand':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Helping Hand', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'focuspunch':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Focusing', 'neutral');\r\n\t\t\t\tpoke.rememberMove(effect.name, 0);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'shelltrap':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Trap set', 'neutral');\r\n\t\t\t\tpoke.rememberMove(effect.name, 0);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'beakblast':\r\n\t\t\t\tthis.scene.runOtherAnim('bidecharge' as ID, [poke]);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Beak Blast', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-singlemove': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tpoke.addMovestatus(effect.id);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'grudge':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Grudge', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'destinybond':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Destiny Bond', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-activate': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tlet target = this.getPokemon(args[3]);\r\n\t\t\tthis.activateAbility(poke, effect);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'poltergeist':\r\n\t\t\t\tpoke.item = kwArgs.item;\r\n\t\t\t\tpoke.itemEffect = 'disturbed';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'grudge':\r\n\t\t\t\tpoke.rememberMove(kwArgs.move, Infinity);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'substitute':\r\n\t\t\t\tif (kwArgs.damage) {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Damage', 'bad');\r\n\t\t\t\t} else if (kwArgs.block) {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Blocked', 'neutral');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'attract':\r\n\t\t\t\tthis.scene.runStatusAnim('attracted' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'bide':\r\n\t\t\t\tthis.scene.runOtherAnim('bidecharge' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// move activations\r\n\t\t\tcase 'aromatherapy':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Team Cured', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'healbell':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Team Cured', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'brickbreak':\r\n\t\t\t\ttarget!.side.removeSideCondition('Reflect');\r\n\t\t\t\ttarget!.side.removeSideCondition('LightScreen');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'hyperdrill':\r\n\t\t\tcase 'hyperspacefury':\r\n\t\t\tcase 'hyperspacehole':\r\n\t\t\tcase 'phantomforce':\r\n\t\t\tcase 'shadowforce':\r\n\t\t\tcase 'feint':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Protection broken', 'bad');\r\n\t\t\t\tpoke.removeTurnstatus('protect' as ID);\r\n\t\t\t\tfor (const curTarget of poke.side.pokemon) {\r\n\t\t\t\t\tcurTarget.removeTurnstatus('wideguard' as ID);\r\n\t\t\t\t\tcurTarget.removeTurnstatus('quickguard' as ID);\r\n\t\t\t\t\tcurTarget.removeTurnstatus('craftyshield' as ID);\r\n\t\t\t\t\tcurTarget.removeTurnstatus('matblock' as ID);\r\n\t\t\t\t\tthis.scene.updateStatbar(curTarget);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'eeriespell':\r\n\t\t\tcase 'gmaxdepletion':\r\n\t\t\tcase 'spite':\r\n\t\t\t\tlet move = Dex.moves.get(kwArgs.move).name;\r\n\t\t\t\tlet pp = Number(kwArgs.number);\r\n\t\t\t\tif (isNaN(pp)) pp = 4;\r\n\t\t\t\tpoke.rememberMove(move, pp);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'gravity':\r\n\t\t\t\tpoke.removeVolatile('magnetrise' as ID);\r\n\t\t\t\tpoke.removeVolatile('telekinesis' as ID);\r\n\t\t\t\tthis.scene.anim(poke, {time: 100});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'skillswap': case 'wanderingspirit':\r\n\t\t\t\tif (this.gen <= 4) break;\r\n\t\t\t\tlet pokeability = Dex.sanitizeName(kwArgs.ability) || target!.ability;\r\n\t\t\t\tlet targetability = Dex.sanitizeName(kwArgs.ability2) || poke.ability;\r\n\t\t\t\tif (pokeability) {\r\n\t\t\t\t\tpoke.ability = pokeability;\r\n\t\t\t\t\tif (!target!.baseAbility) target!.baseAbility = pokeability;\r\n\t\t\t\t}\r\n\t\t\t\tif (targetability) {\r\n\t\t\t\t\ttarget!.ability = targetability;\r\n\t\t\t\t\tif (!poke.baseAbility) poke.baseAbility = targetability;\r\n\t\t\t\t}\r\n\t\t\t\tif (poke.side !== target!.side) {\r\n\t\t\t\t\tthis.activateAbility(poke, pokeability, true);\r\n\t\t\t\t\tthis.activateAbility(target, targetability, true);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// ability activations\r\n\t\t\tcase 'electromorphosis':\r\n\t\t\tcase 'windpower':\r\n\t\t\t\tpoke.addMovestatus('charge' as ID);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'forewarn':\r\n\t\t\t\tif (target) {\r\n\t\t\t\t\ttarget.rememberMove(kwArgs.move, 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet foeActive = [] as Pokemon[];\r\n\t\t\t\t\tfor (const maybeTarget of poke.side.foe.active) {\r\n\t\t\t\t\t\tif (maybeTarget && !maybeTarget.fainted) foeActive.push(maybeTarget);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (foeActive.length === 1) {\r\n\t\t\t\t\t\tfoeActive[0].rememberMove(kwArgs.move, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'lingeringaroma':\r\n\t\t\tcase 'mummy':\r\n\t\t\t\tif (!kwArgs.ability) break; // if Mummy activated but failed, no ability will have been sent\r\n\t\t\t\tlet ability = Dex.abilities.get(kwArgs.ability);\r\n\t\t\t\tthis.activateAbility(target, ability.name);\r\n\t\t\t\tthis.activateAbility(poke, effect.name);\r\n\t\t\t\tthis.scene.wait(700);\r\n\t\t\t\tthis.activateAbility(target, effect.name, true);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// item activations\r\n\t\t\tcase 'leppaberry':\r\n\t\t\tcase 'mysteryberry':\r\n\t\t\t\tpoke.rememberMove(kwArgs.move, effect.id === 'leppaberry' ? -10 : -5);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'focusband':\r\n\t\t\t\tpoke.item = 'Focus Band';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'quickclaw':\r\n\t\t\t\tpoke.item = 'Quick Claw';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'abilityshield':\r\n\t\t\t\tpoke.item = 'Ability Shield';\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tif (kwArgs.broken) { // for custom moves that break protection\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Protection broken', 'bad');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-sidestart': {\r\n\t\t\tlet side = this.getSide(args[1]);\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tside.addSideCondition(effect, !!kwArgs.persistent);\r\n\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'tailwind':\r\n\t\t\tcase 'auroraveil':\r\n\t\t\tcase 'reflect':\r\n\t\t\tcase 'lightscreen':\r\n\t\t\tcase 'safeguard':\r\n\t\t\tcase 'mist':\r\n\t\t\tcase 'gmaxwildfire':\r\n\t\t\tcase 'gmaxvolcalith':\r\n\t\t\tcase 'gmaxvinelash':\r\n\t\t\tcase 'gmaxcannonade':\r\n\t\t\tcase 'grasspledge':\r\n\t\t\tcase 'firepledge':\r\n\t\t\tcase 'waterpledge':\r\n\t\t\t\tthis.scene.updateWeather();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-sideend': {\r\n\t\t\tlet side = this.getSide(args[1]);\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\t// let from = Dex.getEffect(kwArgs.from);\r\n\t\t\t// let ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tside.removeSideCondition(effect.name);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-swapsideconditions': {\r\n\t\t\tthis.swapSideConditions();\r\n\t\t\tthis.scene.updateWeather();\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-weather': {\r\n\t\t\tlet effect = Dex.getEffect(args[1]);\r\n\t\t\tlet poke = this.getPokemon(kwArgs.of) || undefined;\r\n\t\t\tlet ability = Dex.getEffect(kwArgs.from);\r\n\t\t\tif (!effect.id || effect.id === 'none') {\r\n\t\t\t\tkwArgs.from = this.weather;\r\n\t\t\t}\r\n\t\t\tthis.changeWeather(effect.name, poke, !!kwArgs.upkeep, ability);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-fieldstart': {\r\n\t\t\tlet effect = Dex.getEffect(args[1]);\r\n\t\t\tlet poke = this.getPokemon(kwArgs.of);\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\t\tthis.activateAbility(poke, fromeffect);\r\n\t\t\tlet minTimeLeft = 5;\r\n\t\t\tlet maxTimeLeft = 0;\r\n\t\t\tif (effect.id.endsWith('terrain')) {\r\n\t\t\t\tfor (let i = this.pseudoWeather.length - 1; i >= 0; i--) {\r\n\t\t\t\t\tlet pwID = toID(this.pseudoWeather[i][0]);\r\n\t\t\t\t\tif (pwID.endsWith('terrain')) {\r\n\t\t\t\t\t\tthis.pseudoWeather.splice(i, 1);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.gen > 6) maxTimeLeft = 8;\r\n\t\t\t}\r\n\t\t\tif (kwArgs.persistent) minTimeLeft += 2;\r\n\t\t\tthis.addPseudoWeather(effect.name, minTimeLeft, maxTimeLeft);\r\n\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'gravity':\r\n\t\t\t\tif (this.seeking !== null) break;\r\n\t\t\t\tfor (const active of this.getAllActive()) {\r\n\t\t\t\t\tthis.scene.runOtherAnim('gravity' as ID, [active]);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-fieldend': {\r\n\t\t\tlet effect = Dex.getEffect(args[1]);\r\n\t\t\t// let poke = this.getPokemon(kwArgs.of);\r\n\t\t\tthis.removePseudoWeather(effect.name);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-fieldactivate': {\r\n\t\t\tlet effect = Dex.getEffect(args[1]);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'perishsong':\r\n\t\t\t\tthis.scene.updateStatbars();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-anim': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet move = Dex.moves.get(args[2]);\r\n\t\t\tif (this.checkActive(poke)) return;\r\n\t\t\tlet poke2 = this.getPokemon(args[3]);\r\n\t\t\tthis.scene.beforeMove(poke);\r\n\t\t\tthis.animateMove(poke, move, poke2, kwArgs);\r\n\t\t\tthis.scene.afterMove(poke);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-hint': case '-message': case '-candynamax': {\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\tthrow new Error(`Unrecognized minor action: ${args[0]}`);\r\n\t\t\tbreak;\r\n\t\t}}\r\n\t}\r\n\t/*\r\n\tparseSpriteData(name) {\r\n\t\tlet siden = 0,\r\n\t\t\tfoe = false;\r\n\t\twhile (true) {\r\n\t\t\tif (name.substr(0, 6) === 'foeof-') {\r\n\t\t\t\tfoe = true;\r\n\t\t\t\tname = name.substr(6);\r\n\t\t\t} else if (name.substr(0, 9) === 'switched-') name = name.substr(9);\r\n\t\t\telse if (name.substr(0, 9) === 'existing-') name = name.substr(9);\r\n\t\t\telse if (name.substr(0, 4) === 'foe-') {\r\n\t\t\t\tsiden = this.p2.n;\r\n\t\t\t\tname = name.substr(4);\r\n\t\t\t} else if (name.substr(0, 5) === 'ally-') {\r\n\t\t\t\tsiden = this.p1.n;\r\n\t\t\t\tname = name.substr(5);\r\n\t\t\t} else break;\r\n\t\t}\r\n\t\tif (name.substr(name.length - 1) === ')') {\r\n\t\t\tlet parenIndex = name.lastIndexOf('(');\r\n\t\t\tif (parenIndex > 0) {\r\n\t\t\t\tlet species = name.substr(parenIndex + 1);\r\n\t\t\t\tname = species.substr(0, species.length - 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (foe) siden = (siden ? 0 : 1);\r\n\r\n\t\tlet data = Dex.species.get(name);\r\n\t\treturn data.spriteData[siden];\r\n\t}\r\n\t*/\r\n\t/**\r\n\t * @param name Leave blank for Team Preview\r\n\t * @param pokemonid Leave blank for Team Preview\r\n\t * @param details\r\n\t * @param output\r\n\t */\r\n\tparseDetails(name: string, pokemonid: string, details: string, output: PokemonDetails = {} as any) {\r\n\t\tconst isTeamPreview = !name;\r\n\t\toutput.details = details;\r\n\t\toutput.name = name;\r\n\t\toutput.speciesForme = name;\r\n\t\toutput.level = 100;\r\n\t\toutput.shiny = false;\r\n\t\toutput.gender = '';\r\n\t\toutput.ident = (!isTeamPreview ? pokemonid : '');\r\n\t\toutput.searchid = (!isTeamPreview ? `${pokemonid}|${details}` : '');\r\n\t\tlet splitDetails = details.split(', ');\r\n\t\tif (splitDetails[splitDetails.length - 1].startsWith('tera:')) {\r\n\t\t\toutput.terastallized = splitDetails[splitDetails.length - 1].slice(5);\r\n\t\t\tsplitDetails.pop();\r\n\t\t}\r\n\t\tif (splitDetails[splitDetails.length - 1] === 'shiny') {\r\n\t\t\toutput.shiny = true;\r\n\t\t\tsplitDetails.pop();\r\n\t\t}\r\n\t\tif (splitDetails[splitDetails.length - 1] === 'M' || splitDetails[splitDetails.length - 1] === 'F') {\r\n\t\t\toutput.gender = splitDetails[splitDetails.length - 1] as GenderName;\r\n\t\t\tsplitDetails.pop();\r\n\t\t}\r\n\t\tif (splitDetails[1]) {\r\n\t\t\toutput.level = parseInt(splitDetails[1].substr(1), 10) || 100;\r\n\t\t}\r\n\t\tif (splitDetails[0]) {\r\n\t\t\toutput.speciesForme = splitDetails[0];\r\n\t\t}\r\n\t\treturn output;\r\n\t}\r\n\tparseHealth(hpstring: string, output: PokemonHealth = {} as any) {\r\n\t\tlet [hp, status] = hpstring.split(' ');\r\n\r\n\t\t// hp parse\r\n\t\toutput.hpcolor = '';\r\n\t\tif (hp === '0' || hp === '0.0') {\r\n\t\t\tif (!output.maxhp) output.maxhp = 100;\r\n\t\t\toutput.hp = 0;\r\n\t\t} else if (hp.indexOf('/') > 0) {\r\n\t\t\tlet [curhp, maxhp] = hp.split('/');\r\n\t\t\tif (isNaN(parseFloat(curhp)) || isNaN(parseFloat(maxhp))) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\toutput.hp = parseFloat(curhp);\r\n\t\t\toutput.maxhp = parseFloat(maxhp);\r\n\t\t\tif (output.hp > output.maxhp) output.hp = output.maxhp;\r\n\t\t\tconst colorchar = maxhp.slice(-1);\r\n\t\t\tif (colorchar === 'y' || colorchar === 'g') {\r\n\t\t\t\toutput.hpcolor = colorchar;\r\n\t\t\t}\r\n\t\t} else if (!isNaN(parseFloat(hp))) {\r\n\t\t\tif (!output.maxhp) output.maxhp = 100;\r\n\t\t\toutput.hp = output.maxhp * parseFloat(hp) / 100;\r\n\t\t}\r\n\r\n\t\t// status parse\r\n\t\tif (!status) {\r\n\t\t\toutput.status = '';\r\n\t\t} else if (status === 'par' || status === 'brn' || status === 'slp' || status === 'frz' || status === 'tox') {\r\n\t\t\toutput.status = status;\r\n\t\t} else if (status === 'psn' && output.status !== 'tox') {\r\n\t\t\toutput.status = status;\r\n\t\t} else if (status === 'fnt') {\r\n\t\t\toutput.hp = 0;\r\n\t\t\toutput.fainted = true;\r\n\t\t}\r\n\t\treturn output;\r\n\t}\r\n\tparsePokemonId(pokemonid: string) {\r\n\t\tlet name = pokemonid;\r\n\r\n\t\tlet siden = -1;\r\n\t\tlet slot = -1; // if there is an explicit slot for this pokemon\r\n\t\tif (/^p[1-9]($|: )/.test(name)) {\r\n\t\t\tsiden = parseInt(name.charAt(1), 10) - 1;\r\n\t\t\tname = name.slice(4);\r\n\t\t} else if (/^p[1-9][a-f]: /.test(name)) {\r\n\t\t\tconst slotChart: {[k: string]: number} = {a: 0, b: 1, c: 2, d: 3, e: 4, f: 5};\r\n\t\t\tsiden = parseInt(name.charAt(1), 10) - 1;\r\n\t\t\tslot = slotChart[name.charAt(2)];\r\n\t\t\tname = name.slice(5);\r\n\t\t\tpokemonid = `p${siden + 1}: ${name}`;\r\n\t\t}\r\n\t\treturn {name, siden, slot, pokemonid};\r\n\t}\r\n\tgetSwitchedPokemon(pokemonid: string, details: string) {\r\n\t\tif (pokemonid === '??') throw new Error(`pokemonid not passed`);\r\n\t\tconst {name, siden, slot, pokemonid: parsedPokemonid} = this.parsePokemonId(pokemonid);\r\n\t\tpokemonid = parsedPokemonid;\r\n\r\n\t\tconst searchid = `${pokemonid}|${details}`;\r\n\t\tconst side = this.sides[siden];\r\n\r\n\t\t// search inactive revealed pokemon\r\n\t\tfor (let i = 0; i < side.pokemon.length; i++) {\r\n\t\t\tlet pokemon = side.pokemon[i];\r\n\t\t\tif (pokemon.fainted) continue;\r\n\t\t\t// already active, can't be switching in\r\n\t\t\tif (side.active.includes(pokemon)) continue;\r\n\t\t\t// just switched out, can't be switching in\r\n\t\t\tif (pokemon === side.lastPokemon && !side.active[slot]) continue;\r\n\r\n\t\t\tif (pokemon.searchid === searchid) {\r\n\t\t\t\t// exact match\r\n\t\t\t\tif (slot >= 0) pokemon.slot = slot;\r\n\t\t\t\treturn pokemon;\r\n\t\t\t}\r\n\t\t\tif (!pokemon.searchid && pokemon.checkDetails(details)) {\r\n\t\t\t\t// switch-in matches Team Preview entry\r\n\t\t\t\tpokemon = side.addPokemon(name, pokemonid, details, i);\r\n\t\t\t\tif (slot >= 0) pokemon.slot = slot;\r\n\t\t\t\treturn pokemon;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// pokemon not found, create a new pokemon object for it\r\n\t\tconst pokemon = side.addPokemon(name, pokemonid, details);\r\n\t\tif (slot >= 0) pokemon.slot = slot;\r\n\t\treturn pokemon;\r\n\t}\r\n\trememberTeamPreviewPokemon(sideid: string, details: string) {\r\n\t\tconst {siden} = this.parsePokemonId(sideid);\r\n\r\n\t\treturn this.sides[siden].addPokemon('', '', details);\r\n\t}\r\n\tfindCorrespondingPokemon(serverPokemon: {ident: string, details: string}) {\r\n\t\tconst {siden} = this.parsePokemonId(serverPokemon.ident);\r\n\t\tconst searchid = `${serverPokemon.ident}|${serverPokemon.details}`;\r\n\t\tfor (const pokemon of this.sides[siden].pokemon) {\r\n\t\t\tif (pokemon.searchid === searchid) {\r\n\t\t\t\treturn pokemon;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\tgetPokemon(pokemonid: string | undefined, faintedOnly = false) {\r\n\t\tif (!pokemonid || pokemonid === '??' || pokemonid === 'null' || pokemonid === 'false') {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tconst {siden, slot, pokemonid: parsedPokemonid} = this.parsePokemonId(pokemonid);\r\n\t\tpokemonid = parsedPokemonid;\r\n\r\n\t\t/** if true, don't match an active pokemon */\r\n\t\tconst isInactive = (slot < 0);\r\n\t\tconst side = this.sides[siden];\r\n\r\n\t\t// search player's pokemon\r\n\t\tif (!isInactive && side.active[slot]) return side.active[slot];\r\n\r\n\t\tfor (const pokemon of side.pokemon) {\r\n\t\t\tif (isInactive && side.active.includes(pokemon)) continue;\r\n\t\t\tif (faintedOnly && pokemon.hp) continue;\r\n\t\t\tif (pokemon.ident === pokemonid) { // name matched, good enough\r\n\t\t\t\tif (slot >= 0) pokemon.slot = slot;\r\n\t\t\t\treturn pokemon;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\tgetSide(sidename: string): Side {\r\n\t\tif (sidename === 'p1' || sidename.startsWith('p1:')) return this.p1;\r\n\t\tif (sidename === 'p2' || sidename.startsWith('p2:')) return this.p2;\r\n\t\tif ((sidename === 'p3' || sidename.startsWith('p3:')) && this.p3) return this.p3;\r\n\t\tif ((sidename === 'p4' || sidename.startsWith('p4:')) && this.p4) return this.p4;\r\n\t\tif (this.nearSide.id === sidename) return this.nearSide;\r\n\t\tif (this.farSide.id === sidename) return this.farSide;\r\n\t\tif (this.nearSide.name === sidename) return this.nearSide;\r\n\t\tif (this.farSide.name === sidename) return this.farSide;\r\n\t\treturn {\r\n\t\t\tname: sidename,\r\n\t\t\tid: sidename.replace(/ /g, ''),\r\n\t\t} as any;\r\n\t}\r\n\r\n\tadd(command?: string) {\r\n\t\tif (command) this.stepQueue.push(command);\r\n\r\n\t\tif (this.atQueueEnd && this.currentStep < this.stepQueue.length) {\r\n\t\t\tthis.atQueueEnd = false;\r\n\t\t\tthis.nextStep();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * PS's preempt system is intended to show chat messages immediately,\r\n\t * instead of waiting for the battle to get to the point where the\r\n\t * message was said.\r\n\t *\r\n\t * In addition to being a nice quality-of-life feature, it's also\r\n\t * important to make sure timer updates happen in real-time.\r\n\t */\r\n\tinstantAdd(command: string) {\r\n\t\tthis.run(command, true);\r\n\t\tthis.preemptStepQueue.push(command);\r\n\t\tthis.add(command);\r\n\t}\r\n\trunMajor(args: Args, kwArgs: KWArgs, preempt?: boolean) {\r\n\t\tswitch (args[0]) {\r\n\t\tcase 'start': {\r\n\t\t\tthis.nearSide.active[0] = null;\r\n\t\t\tthis.farSide.active[0] = null;\r\n\t\t\tthis.scene.resetSides();\r\n\t\t\tthis.start();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'upkeep': {\r\n\t\t\tthis.usesUpkeep = true;\r\n\t\t\tthis.updateTurnCounters();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'turn': {\r\n\t\t\tthis.setTurn(parseInt(args[1], 10));\r\n\t\t\tthis.log(args);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'tier': {\r\n\t\t\tthis.tier = args[1];\r\n\t\t\tif (this.tier.slice(-13) === 'Random Battle') {\r\n\t\t\t\tthis.speciesClause = true;\r\n\t\t\t}\r\n\t\t\tif (this.tier.slice(-8) === ' (Blitz)') {\r\n\t\t\t\tthis.messageFadeTime = 40;\r\n\t\t\t\tthis.isBlitz = true;\r\n\t\t\t}\r\n\t\t\tif (this.tier.includes(`Let's Go`)) {\r\n\t\t\t\tthis.dex = Dex.mod('gen7letsgo' as ID);\r\n\t\t\t}\r\n\t\t\tthis.log(args);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'gametype': {\r\n\t\t\tthis.gameType = args[1] as any;\r\n\t\t\tswitch (args[1]) {\r\n\t\t\tcase 'multi':\r\n\t\t\tcase 'freeforall':\r\n\t\t\t\tthis.pokemonControlled = 1;\r\n\t\t\t\tif (!this.p3) this.p3 = new Side(this, 2);\r\n\t\t\t\tif (!this.p4) this.p4 = new Side(this, 3);\r\n\t\t\t\tthis.p3.foe = this.p2;\r\n\t\t\t\tthis.p4.foe = this.p1;\r\n\r\n\t\t\t\tif (args[1] === 'multi') {\r\n\t\t\t\t\tthis.p4.ally = this.p2;\r\n\t\t\t\t\tthis.p3.ally = this.p1;\r\n\t\t\t\t\tthis.p1.ally = this.p3;\r\n\t\t\t\t\tthis.p2.ally = this.p4;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.p3.isFar = this.p1.isFar;\r\n\t\t\t\tthis.p4.isFar = this.p2.isFar;\r\n\t\t\t\tthis.sides = [this.p1, this.p2, this.p3, this.p4];\r\n\t\t\t\t// intentionally sync p1/p3 and p2/p4's active arrays\r\n\t\t\t\tthis.p1.active = this.p3.active = [null, null];\r\n\t\t\t\tthis.p2.active = this.p4.active = [null, null];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'doubles':\r\n\t\t\t\tthis.nearSide.active = [null, null];\r\n\t\t\t\tthis.farSide.active = [null, null];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'triples':\r\n\t\t\tcase 'rotation':\r\n\t\t\t\tthis.nearSide.active = [null, null, null];\r\n\t\t\t\tthis.farSide.active = [null, null, null];\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tfor (const side of this.sides) side.active = [null];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (!this.pokemonControlled) this.pokemonControlled = this.nearSide.active.length;\r\n\t\t\tthis.scene.updateGen();\r\n\t\t\tthis.scene.resetSides();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'rule': {\r\n\t\t\tlet ruleName = args[1].split(': ')[0];\r\n\t\t\tif (ruleName === 'Species Clause') this.speciesClause = true;\r\n\t\t\tif (ruleName === 'Blitz') {\r\n\t\t\t\tthis.messageFadeTime = 40;\r\n\t\t\t\tthis.isBlitz = true;\r\n\t\t\t}\r\n\t\t\tthis.rules[ruleName] = 1;\r\n\t\t\tthis.log(args);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'rated': {\r\n\t\t\tthis.rated = args[1] || true;\r\n\t\t\tthis.scene.updateGen();\r\n\t\t\tthis.log(args);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'inactive': {\r\n\t\t\tif (!this.kickingInactive) this.kickingInactive = true;\r\n\t\t\tif (args[1].slice(0, 11) === \"Time left: \") {\r\n\t\t\t\tlet [time, totalTime, graceTime] = args[1].split(' | ');\r\n\t\t\t\tthis.kickingInactive = parseInt(time.slice(11), 10) || true;\r\n\t\t\t\tthis.totalTimeLeft = parseInt(totalTime, 10);\r\n\t\t\t\tthis.graceTimeLeft = parseInt(graceTime || '', 10) || 0;\r\n\t\t\t\tif (this.totalTimeLeft === this.kickingInactive) this.totalTimeLeft = 0;\r\n\t\t\t\treturn;\r\n\t\t\t} else if (args[1].slice(0, 9) === \"You have \") {\r\n\t\t\t\t// this is ugly but parseInt is documented to work this way\r\n\t\t\t\t// so I'm going to be lazy and not chop off the rest of the\r\n\t\t\t\t// sentence\r\n\t\t\t\tthis.kickingInactive = parseInt(args[1].slice(9), 10) || true;\r\n\t\t\t\treturn;\r\n\t\t\t} else if (args[1].slice(-14) === ' seconds left.') {\r\n\t\t\t\tlet hasIndex = args[1].indexOf(' has ');\r\n\t\t\t\tlet userid = window.app?.user?.get('userid');\r\n\t\t\t\tif (toID(args[1].slice(0, hasIndex)) === userid) {\r\n\t\t\t\t\tthis.kickingInactive = parseInt(args[1].slice(hasIndex + 5), 10) || true;\r\n\t\t\t\t}\r\n\t\t\t} else if (args[1].slice(-27) === ' 15 seconds left this turn.') {\r\n\t\t\t\tif (this.isBlitz) return;\r\n\t\t\t}\r\n\t\t\tthis.log(args, undefined, preempt);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'inactiveoff': {\r\n\t\t\tthis.kickingInactive = false;\r\n\t\t\tthis.log(args, undefined, preempt);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'join': case 'j': case 'J': {\r\n\t\t\tif (this.roomid) {\r\n\t\t\t\tlet room = app!.rooms[this.roomid];\r\n\t\t\t\tlet user = BattleTextParser.parseNameParts(args[1]);\r\n\t\t\t\tlet userid = toUserid(user.name);\r\n\t\t\t\tif (!room.users[userid]) room.userCount.users++;\r\n\t\t\t\troom.users[userid] = user;\r\n\t\t\t\troom.userList.add(userid);\r\n\t\t\t\troom.userList.updateUserCount();\r\n\t\t\t\troom.userList.updateNoUsersOnline();\r\n\t\t\t}\r\n\t\t\tthis.log(args, undefined, preempt);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'leave': case 'l': case 'L': {\r\n\t\t\tif (this.roomid) {\r\n\t\t\t\tlet room = app!.rooms[this.roomid];\r\n\t\t\t\tlet user = args[1];\r\n\t\t\t\tlet userid = toUserid(user);\r\n\t\t\t\tif (room.users[userid]) room.userCount.users--;\r\n\t\t\t\tdelete room.users[userid];\r\n\t\t\t\troom.userList.remove(userid);\r\n\t\t\t\troom.userList.updateUserCount();\r\n\t\t\t\troom.userList.updateNoUsersOnline();\r\n\t\t\t}\r\n\t\t\tthis.log(args, undefined, preempt);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'name': case 'n': case 'N': {\r\n\t\t\tif (this.roomid) {\r\n\t\t\t\tlet room = app!.rooms[this.roomid];\r\n\t\t\t\tlet user = BattleTextParser.parseNameParts(args[1]);\r\n\t\t\t\tlet oldid = args[2];\r\n\t\t\t\tif (toUserid(oldid) === app!.user.get('userid')) {\r\n\t\t\t\t\tapp!.user.set({\r\n\t\t\t\t\t\taway: user.away,\r\n\t\t\t\t\t\tstatus: user.status,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tlet userid = toUserid(user.name);\r\n\t\t\t\troom.users[userid] = user;\r\n\t\t\t\troom.userList.remove(oldid);\r\n\t\t\t\troom.userList.add(userid);\r\n\t\t\t}\r\n\t\t\tif (!this.ignoreSpects) {\r\n\t\t\t\tthis.log(args, undefined, preempt);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'player': {\r\n\t\t\tlet side = this.getSide(args[1]);\r\n\t\t\tside.setName(args[2]);\r\n\t\t\tif (args[3]) side.setAvatar(args[3]);\r\n\t\t\tif (args[4]) side.rating = args[4];\r\n\t\t\tthis.scene.updateSidebar(side);\r\n\t\t\tif (this.joinButtons) this.scene.hideJoinButtons();\r\n\t\t\tthis.log(args);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'teamsize': {\r\n\t\t\tlet side = this.getSide(args[1]);\r\n\t\t\tside.totalPokemon = parseInt(args[2], 10);\r\n\t\t\tthis.scene.updateSidebar(side);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'win': case 'tie': {\r\n\t\t\tthis.winner(args[0] === 'tie' ? undefined : args[1]);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'prematureend': {\r\n\t\t\tthis.prematureEnd();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'clearpoke': {\r\n\t\t\tthis.p1.clearPokemon();\r\n\t\t\tthis.p2.clearPokemon();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'poke': {\r\n\t\t\tlet pokemon = this.rememberTeamPreviewPokemon(args[1], args[2])!;\r\n\t\t\tif (args[3] === 'mail') {\r\n\t\t\t\tpokemon.item = '(mail)';\r\n\t\t\t} else if (args[3] === 'item') {\r\n\t\t\t\tpokemon.item = '(exists)';\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'updatepoke': {\r\n\t\t\tconst {siden} = this.parsePokemonId(args[1]);\r\n\t\t\tconst side = this.sides[siden];\r\n\t\t\tfor (let i = 0; i < side.pokemon.length; i++) {\r\n\t\t\t\tconst pokemon = side.pokemon[i];\r\n\t\t\t\tif (pokemon.details !== args[2] && pokemon.checkDetails(args[2])) {\r\n\t\t\t\t\tside.addPokemon('', '', args[2], i);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'teampreview': {\r\n\t\t\tthis.teamPreviewCount = parseInt(args[1], 10);\r\n\t\t\tthis.scene.teamPreview();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'switch': case 'drag': case 'replace': {\r\n\t\t\tthis.endLastTurn();\r\n\t\t\tlet poke = this.getSwitchedPokemon(args[1], args[2])!;\r\n\t\t\tlet slot = poke.slot;\r\n\t\t\tpoke.healthParse(args[3]);\r\n\t\t\tpoke.removeVolatile('itemremoved' as ID);\r\n\t\t\tpoke.terastallized = args[2].match(/tera:([a-z]+)$/i)?.[1] || '';\r\n\t\t\tif (args[0] === 'switch') {\r\n\t\t\t\tif (poke.side.active[slot]) {\r\n\t\t\t\t\tpoke.side.switchOut(poke.side.active[slot]!, kwArgs);\r\n\t\t\t\t}\r\n\t\t\t\tpoke.side.switchIn(poke, kwArgs);\r\n\t\t\t} else if (args[0] === 'replace') {\r\n\t\t\t\tpoke.side.replace(poke);\r\n\t\t\t} else {\r\n\t\t\t\tpoke.side.dragIn(poke);\r\n\t\t\t}\r\n\t\t\tthis.scene.updateWeather();\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'faint': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tpoke.side.faint(poke);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'swap': {\r\n\t\t\tif (isNaN(Number(args[2]))) {\r\n\t\t\t\tconst poke = this.getPokemon(args[1])!;\r\n\t\t\t\tpoke.side.swapWith(poke, this.getPokemon(args[2])!, kwArgs);\r\n\t\t\t} else {\r\n\t\t\t\tconst poke = this.getPokemon(args[1])!;\r\n\t\t\t\tconst targetIndex = parseInt(args[2], 10);\r\n\t\t\t\tif (kwArgs.from) {\r\n\t\t\t\t\tconst target = poke.side.active[targetIndex];\r\n\t\t\t\t\tif (target) args[2] = target.ident;\r\n\t\t\t\t}\r\n\t\t\t\tpoke.side.swapTo(poke, targetIndex);\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'move': {\r\n\t\t\tthis.endLastTurn();\r\n\t\t\tthis.resetTurnsSinceMoved();\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet move = Dex.moves.get(args[2]);\r\n\t\t\tif (this.checkActive(poke)) return;\r\n\t\t\tlet poke2 = this.getPokemon(args[3]);\r\n\t\t\tthis.scene.beforeMove(poke);\r\n\t\t\tthis.useMove(poke, move, poke2, kwArgs);\r\n\t\t\tthis.animateMove(poke, move, poke2, kwArgs);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tthis.scene.afterMove(poke);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'cant': {\r\n\t\t\tthis.endLastTurn();\r\n\t\t\tthis.resetTurnsSinceMoved();\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tlet move = Dex.moves.get(args[3]);\r\n\t\t\tthis.cantUseMove(poke, effect, move, kwArgs);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'gen': {\r\n\t\t\tthis.gen = parseInt(args[1], 10);\r\n\t\t\tthis.dex = this.mod ? Dex.mod(this.mod) : Dex.forGen(this.gen);\r\n\t\t\tthis.scene.updateGen();\r\n\t\t\tthis.log(args);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'callback': {\r\n\t\t\tthis.subscription?.('callback');\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'fieldhtml': {\r\n\t\t\tthis.scene.setFrameHTML(BattleLog.sanitizeHTML(args[1]));\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'controlshtml': {\r\n\t\t\tthis.scene.setControlsHTML(BattleLog.sanitizeHTML(args[1]));\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\tthis.log(args, kwArgs, preempt);\r\n\t\t\tbreak;\r\n\t\t}}\r\n\t}\r\n\r\n\trun(str: string, preempt?: boolean) {\r\n\t\tif (!preempt && this.preemptStepQueue.length && str === this.preemptStepQueue[0]) {\r\n\t\t\tthis.preemptStepQueue.shift();\r\n\t\t\tthis.scene.preemptCatchup();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!str) return;\r\n\t\tconst {args, kwArgs} = BattleTextParser.parseBattleLine(str);\r\n\r\n\t\tif (this.scene.maybeCloseMessagebar(args, kwArgs)) {\r\n\t\t\tthis.currentStep--;\r\n\t\t\tthis.activeMoveIsSpread = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// parse the next line if it's a minor: runMinor needs it parsed to determine when to merge minors\r\n\t\tlet nextArgs: Args = [''];\r\n\t\tlet nextKwargs: KWArgs = {};\r\n\t\tconst nextLine = this.stepQueue[this.currentStep + 1] || '';\r\n\t\tif (nextLine.slice(0, 2) === '|-') {\r\n\t\t\t({args: nextArgs, kwArgs: nextKwargs} = BattleTextParser.parseBattleLine(nextLine));\r\n\t\t}\r\n\r\n\t\tif (this.debug) {\r\n\t\t\tif (args[0].charAt(0) === '-' || args[0] === 'detailschange') {\r\n\t\t\t\tthis.runMinor(args, kwArgs, nextArgs, nextKwargs);\r\n\t\t\t} else {\r\n\t\t\t\tthis.runMajor(args, kwArgs, preempt);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tif (args[0].charAt(0) === '-' || args[0] === 'detailschange') {\r\n\t\t\t\t\tthis.runMinor(args, kwArgs, nextArgs, nextKwargs);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.runMajor(args, kwArgs, preempt);\r\n\t\t\t\t}\r\n\t\t\t} catch (err: any) {\r\n\t\t\t\tthis.log(['majorerror', 'Error parsing: ' + str + ' (' + err + ')']);\r\n\t\t\t\tif (err.stack) {\r\n\t\t\t\t\tlet stack = ('' + err.stack).split('\\n');\r\n\t\t\t\t\tfor (const line of stack) {\r\n\t\t\t\t\t\tif (/\\brun\\b/.test(line)) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.log(['error', line]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.subscription?.('error');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (nextLine.startsWith('|start') || args[0] === 'teampreview') {\r\n\t\t\tif (this.turn === -1) {\r\n\t\t\t\tthis.turn = 0;\r\n\t\t\t\tthis.scene.updateBgm();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcheckActive(poke: Pokemon) {\r\n\t\tif (!poke.side.active[poke.slot]) {\r\n\t\t\t// SOMEONE jumped in in the middle of a replay. <_<\r\n\t\t\tpoke.side.replace(poke);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpause() {\r\n\t\tthis.paused = true;\r\n\t\tthis.scene.pause();\r\n\t\tthis.subscription?.('paused');\r\n\t}\r\n\t/**\r\n\t * Properties relevant to battle playback, for replay UI implementers:\r\n\t * - `ended`: has the game ended in a win/loss?\r\n\t * - `atQueueEnd`: is animation caught up to the end of the battle queue, waiting for more input?\r\n\t * - `seeking`: are we trying to skip to a specific turn\r\n\t * - `turn`: what turn are we currently on? `-1` if we haven't started yet, `0` at team preview\r\n\t * - `paused`: are we playing at all?\r\n\t */\r\n\tplay() {\r\n\t\tthis.paused = false;\r\n\t\tthis.started = true;\r\n\t\tthis.scene.resume();\r\n\t\tthis.nextStep();\r\n\t\tthis.subscription?.('playing');\r\n\t}\r\n\tskipTurn() {\r\n\t\tthis.seekBy(1);\r\n\t}\r\n\tseekBy(deltaTurn: number) {\r\n\t\tif (this.seeking === Infinity && deltaTurn < 0) {\r\n\t\t\treturn this.seekTurn(this.turn + 1);\r\n\t\t}\r\n\t\tthis.seekTurn((this.seeking ?? this.turn) + deltaTurn);\r\n\t}\r\n\tseekTurn(turn: number, forceReset?: boolean) {\r\n\t\tif (isNaN(turn)) return;\r\n\t\tturn = Math.max(Math.floor(turn), 0);\r\n\r\n\t\tif (this.seeking !== null && turn > this.turn && !forceReset) {\r\n\t\t\tthis.seeking = turn;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (turn === 0) {\r\n\t\t\tthis.seeking = null;\r\n\t\t\tthis.resetStep();\r\n\t\t\tthis.scene.animationOn();\r\n\t\t\tif (this.paused) this.subscription?.('paused');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.seeking = turn;\r\n\r\n\t\tif (turn <= this.turn || forceReset) {\r\n\t\t\tthis.scene.animationOff();\r\n\t\t\tthis.resetStep();\r\n\t\t} else if (this.atQueueEnd) {\r\n\t\t\tthis.scene.animationOn();\r\n\t\t\tthis.seeking = null;\r\n\t\t} else {\r\n\t\t\tthis.scene.animationOff();\r\n\t\t\tthis.nextStep();\r\n\t\t}\r\n\t}\r\n\tstopSeeking() {\r\n\t\tthis.seeking = null;\r\n\t\tthis.scene.animationOn();\r\n\t\tthis.subscription?.(this.paused ? 'paused' : 'playing');\r\n\t}\r\n\tshouldStep() {\r\n\t\tif (this.atQueueEnd) return false;\r\n\t\tif (this.seeking !== null) return true;\r\n\t\treturn !(this.paused && this.turn >= 0);\r\n\t}\r\n\tnextStep() {\r\n\t\tif (!this.shouldStep()) return;\r\n\r\n\t\tlet time = Date.now();\r\n\t\tthis.scene.startAnimations();\r\n\t\tlet animations = undefined;\r\n\r\n\t\tlet interruptionCount: number;\r\n\t\tdo {\r\n\t\t\tthis.waitForAnimations = true;\r\n\t\t\tif (this.currentStep >= this.stepQueue.length) {\r\n\t\t\t\tthis.atQueueEnd = true;\r\n\t\t\t\tif (!this.ended && this.isReplay) this.prematureEnd();\r\n\t\t\t\tthis.stopSeeking();\r\n\t\t\t\tif (this.ended) {\r\n\t\t\t\t\tthis.scene.updateBgm();\r\n\t\t\t\t}\r\n\t\t\t\tthis.subscription?.('atqueueend');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.run(this.stepQueue[this.currentStep]);\r\n\t\t\tthis.currentStep++;\r\n\t\t\tif (this.waitForAnimations === true) {\r\n\t\t\t\tanimations = this.scene.finishAnimations();\r\n\t\t\t} else if (this.waitForAnimations === 'simult') {\r\n\t\t\t\tthis.scene.timeOffset = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (Date.now() - time > 300) {\r\n\t\t\t\tinterruptionCount = this.scene.interruptionCount;\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tif (interruptionCount === this.scene.interruptionCount) {\r\n\t\t\t\t\t\tthis.nextStep();\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 1);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} while (!animations && this.shouldStep());\r\n\r\n\t\tif (this.paused && this.turn >= 0 && this.seeking === null) {\r\n\t\t\t// initial Play button, team preview\r\n\t\t\tthis.scene.pause();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!animations) return;\r\n\r\n\t\tinterruptionCount = this.scene.interruptionCount;\r\n\t\tanimations.done(() => {\r\n\t\t\tif (interruptionCount === this.scene.interruptionCount) {\r\n\t\t\t\tthis.nextStep();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tsetQueue(queue: string[]) {\r\n\t\tthis.stepQueue = queue;\r\n\t\tthis.resetStep();\r\n\t}\r\n\r\n\tsetMute(mute: boolean) {\r\n\t\tthis.scene.setMute(mute);\r\n\t}\r\n}\r\n\r\nif (typeof require === 'function') {\r\n\t// in Node\r\n\t(global as any).Battle = Battle;\r\n\t(global as any).Pokemon = Pokemon;\r\n}\r\n"],"mappings":"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"}